{"type":"data","nodes":[{"type":"data","data":[null],"uses":{}},{"type":"data","data":[{"posts":1,"total":112},[2,15,25,31,37,43,49,55,64,69,75,84,94,100,106],{"title":3,"slug":4,"excerpt":5,"coverImage":6,"coverWidth":7,"coverHeight":8,"date":9,"categories":10,"indexed":14,"exposed":14},"AWS Lambda","Cloud/AWS/Lambda With Golang","Amazon KVS WebRTC signaling channel에 대해 알아보자","/post_img/Cloud/AWS/AWS_KVS_webrtc_signaling_channel/cover.png",16,9,"2023-10-23",[11,12,13],"AWS","AWS Kinesis Video Stream","WebRTC",true,{"title":16,"slug":17,"excerpt":18,"coverImage":19,"coverWidth":7,"coverHeight":8,"date":20,"categories":21,"indexed":24,"exposed":14},"동시성 문제 해결하기","Go/Concurrency in Go/CIGO10","동시성 문제가 해결하기 그렇게 어렵다던데","/post_img/Go/Concurrency in Go/cover.png","2023-10-03T00:00:00.000Z",[22,23],"Golang","Concurrency in Go",false,{"title":26,"slug":27,"excerpt":28,"coverImage":19,"coverWidth":7,"coverHeight":8,"date":29,"categories":30,"indexed":24,"exposed":14},"아토믹 메모리 오퍼레이션","Go/Concurrency in Go/CIGO9","아토믹 메모리 오퍼레이션에 대해 알아보자","2023-10-01T00:00:00.000Z",[22,23],{"title":32,"slug":33,"excerpt":34,"coverImage":19,"coverWidth":7,"coverHeight":8,"date":35,"categories":36,"indexed":24,"exposed":14},"동시성 프로그래밍과 요청 처리","Go/Concurrency in Go/CIGO8","동시성 프로그래밍과 서버 프로그래밍을 잘 버무려보자.","2023-09-16T00:00:00.000Z",[22,23],{"title":38,"slug":39,"excerpt":40,"coverImage":19,"coverWidth":7,"coverHeight":8,"date":41,"categories":42,"indexed":24,"exposed":14},"Timer와 Ticker","Go/Concurrency in Go/CIGO7","Go에서 일정 시간이 지난 이후 또는 주기적으로 특정 작업을 수행하려면 어떻게 해야 할지 알아보자.","2023-09-14T00:00:00.000Z",[22,23],{"title":44,"slug":45,"excerpt":46,"coverImage":19,"coverWidth":7,"coverHeight":8,"date":47,"categories":48,"indexed":24,"exposed":14},"동시성 프로그램의 에러 핸들링","Go/Concurrency in Go/CIGO6","동시성 프로그래밍에서 발생하는 에러 및 panic은 어떻게 핸들링해야 할지 알아보자","2023-09-11T00:00:00.000Z",[22,23],{"title":50,"slug":51,"excerpt":52,"coverImage":19,"coverWidth":7,"coverHeight":8,"date":53,"categories":54,"indexed":24,"exposed":14},"Worker Pool 및 Pipeline","Go/Concurrency in Go/CIGO5","동시성 프로그래밍에서 워커 풀과 파이프라인 패턴을 Go로 구현해보자","2023-09-09T00:00:00.000Z",[22,23],{"title":56,"slug":57,"excerpt":58,"coverImage":59,"coverWidth":7,"coverHeight":8,"date":60,"categories":61,"indexed":14,"exposed":14},"Spark 논문(RDD) 정리","Distributed Computing/Spark/RDD","Resilient Distributed Datasets: A Fault-Tolerant Abstraction for In-Memory Cluster Computing","/post_img/Distributed Computing/Spark/RDD/cover.png","2023-09-06T00:00:00.000Z",[62,63],"Apache Spark","논문정리",{"title":65,"slug":66,"excerpt":65,"coverImage":19,"coverWidth":7,"coverHeight":8,"date":67,"categories":68,"indexed":24,"exposed":14},"Go의 메모리 모델","Go/Concurrency in Go/CIGO3","2023-08-31T00:00:00.000Z",[22,23],{"title":70,"slug":71,"excerpt":72,"coverImage":19,"coverWidth":7,"coverHeight":8,"date":73,"categories":74,"indexed":24,"exposed":14},"Go의 동시성 지원","Go/Concurrency in Go/CIGO2","Go에서 동시성을 지원하는 방법들","2023-08-25T00:00:00.000Z",[22,23],{"title":76,"slug":77,"excerpt":78,"coverImage":79,"coverWidth":7,"coverHeight":8,"date":80,"categories":81,"indexed":14,"exposed":14},"동시성 관련 개념 정리","Computer Science/OS/Concurrency","Concepts about concurrency","/post_img/Computer Science/OS/Concurrency/cover.png","2023-08-18T00:00:00.000Z",[82,83,22],"Computer Science","OS",{"title":85,"slug":86,"excerpt":87,"coverImage":88,"coverWidth":7,"coverHeight":8,"date":89,"categories":90,"indexed":24,"exposed":14},"DDD와 함께 TDD, BDD 사용하기","Backend/Architecture/DDD8","TDD, BDD, and DDD","/post_img/Backend/Architecture/DDD/cover.png","2023-08-11T00:00:00.000Z",[22,91,92,93],"Backend","Architecture","Domain Driven Design",{"title":95,"slug":96,"excerpt":97,"coverImage":88,"coverWidth":7,"coverHeight":8,"date":98,"categories":99,"indexed":24,"exposed":14},"분산 시스템에 DDD 적용하기","Backend/Architecture/DDD7","Applying DDD to a Distributed System","2023-08-06T00:00:00.000Z",[22,91,92,93],{"title":101,"slug":102,"excerpt":103,"coverImage":88,"coverWidth":7,"coverHeight":8,"date":104,"categories":105,"indexed":24,"exposed":14},"마이크로서비스에 DDD 적용하기 (+ wire 사용해보기)","Backend/Architecture/DDD6","Applying DDD to a Microservice Application (+ Using wire)","2023-07-27T00:00:00.000Z",[22,91,92,93],{"title":107,"slug":108,"excerpt":109,"coverImage":88,"coverWidth":7,"coverHeight":8,"date":110,"categories":111,"indexed":24,"exposed":14},"모놀리식 애플리케이션에 DDD 적용하기","Backend/Architecture/DDD5","Applying DDD to a Monolithic Application","2023-07-20T00:00:00.000Z",[22,91,92,93],41],"uses":{}}]}
