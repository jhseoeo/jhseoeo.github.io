import{S as da,i as fa,s as ba,k as t,a as o,q as i,l as e,m as p,h as a,c as l,r as k,n as r,U as ya,b as m,E as s,M as vn}from"./index.d78780bf.js";function ga(Cn){let y,Rn,es,ps,os,ls,g,F,Ms,Ls,S,Fn=`<code class="language-python">lineNum<span class="token punctuation">(</span><span class="token string">"Line1&#92;nLine2&#92;nLine3"</span><span class="token punctuation">)</span>
lineNum<span class="token punctuation">(</span><span class="token string">"저번영상&#92;n조회수 3이에요&#92;n시무룩.."</span><span class="token punctuation">)</span></code>`,Ps,j,Ss,Ts,T,jn=`<code class="language-python"><span class="token number">3</span>
<span class="token number">2</span></code>`,As,E,X,Hs,Is,A,Xn=`<code class="language-python"><span class="token keyword">def</span> <span class="token function">lineNum</span><span class="token punctuation">(</span>lines<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> lines<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'&#92;n'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span></code>`,cs,rs,us,f,W,Us,Ys,w,Bs,xs,Ds,qs,zs,Ns,H,Wn=`<code class="language-python">isPalindrome<span class="token punctuation">(</span><span class="token string">"tomato"</span><span class="token punctuation">)</span>
isPalindrome<span class="token punctuation">(</span><span class="token string">"level"</span><span class="token punctuation">)</span></code>`,Cs,Z,Fs,js,I,Zn=`<code class="language-python"> <span class="token boolean">False</span>
 <span class="token boolean">True</span></code>`,Xs,v,G,Ws,Zs,U,Gn=`<code class="language-python"><span class="token keyword">def</span> <span class="token function">isPalindrome</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> s <span class="token operator">==</span> <span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span></code>`,is,ks,ms,b,J,Gs,Js,L,Ks,Os,Qs,Vs,Y,Jn=`<code class="language-python">hongzinho<span class="token punctuation">(</span><span class="token string">"2nd grade"</span><span class="token punctuation">,</span> <span class="token string">"grade"</span><span class="token punctuation">)</span>
hongzinho<span class="token punctuation">(</span><span class="token string">"This test is just a test"</span><span class="token punctuation">,</span> <span class="token string">"test"</span><span class="token punctuation">)</span></code>`,$s,K,sn,nn,B,Kn=`<code class="language-python"><span class="token string">"2nd gradegrade"</span>
<span class="token string">"This testtest is just a testtest"</span></code>`,an,R,O,tn,en,x,On=`<code class="language-python"><span class="token keyword">def</span> <span class="token function">hongzinho</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> letter<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> line<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>letter<span class="token punctuation">,</span> letter<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span></code>`,ds,fs,bs,u,Q,pn,on,V,ln,cn,P,$,rn,un,ss,kn,mn,ns,dn,fn,D,Qn=`<code class="language-python">strcmp<span class="token punctuation">(</span><span class="token string">"bcd"</span><span class="token punctuation">,</span> <span class="token string">"abc"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
strcmp<span class="token punctuation">(</span><span class="token string">"abc"</span><span class="token punctuation">,</span> <span class="token string">"abd"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
strcmp<span class="token punctuation">(</span><span class="token string">"abcd"</span><span class="token punctuation">,</span><span class="token string">"abc"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
strcmp<span class="token punctuation">(</span><span class="token string">"abc"</span><span class="token punctuation">,</span> <span class="token string">"abcd"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
strcmp<span class="token punctuation">(</span><span class="token string">"abc"</span><span class="token punctuation">,</span> <span class="token string">"abc"</span><span class="token punctuation">)</span></code>`,bn,as,yn,gn,q,Vn=`<code class="language-python"> <span class="token number">1</span>
 <span class="token operator">-</span><span class="token number">1</span>
 <span class="token number">1</span>
 <span class="token operator">-</span><span class="token number">1</span>
 <span class="token number">0</span></code>`,_n,z,$n=`<code class="language-python"><span class="token keyword">def</span> <span class="token function">strcmp</span><span class="token punctuation">(</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token triple-quoted-string string">"""
s1 > s2일 경우, 1 반환
s1 == s2일 경우, 0 반환
s1 &lt; s2일 경우, -1 반환
"""</span>

<span class="token comment">### 두 문자열이 일치하는 경우 #####</span>
<span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">and</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
<span class="token comment"># ???</span>

<span class="token comment">### 한 문자열이 다른 문자열의 앞부분만 일치하는 경우 #####</span>
<span class="token keyword">elif</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
<span class="token comment"># ???</span>
<span class="token keyword">elif</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
<span class="token comment"># ???</span>

<span class="token comment">### 특정 인덱스의 문자가 일치하지 않는 경우 #####</span>
<span class="token keyword">elif</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>s1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token builtin">ord</span><span class="token punctuation">(</span>s2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token comment"># ???</span>
<span class="token keyword">elif</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>s1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># s1 &lt; s2</span>
<span class="token comment"># ???</span>

<span class="token comment">### 특정 인덱스의 문자가 일치하는 경우 #####</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
<span class="token comment"># ???</span></code>`,hn,M,ts,wn,En,N,sa=`<code class="language-python">
<span class="token keyword">def</span> <span class="token function">strcmp</span><span class="token punctuation">(</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token triple-quoted-string string">"""
s1 > s2일 경우, 1 반환
s1 == s2일 경우, 0 반환
s1 &lt; s2일 경우, -1 반환
"""</span>

<span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">and</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token number">0</span>
<span class="token keyword">elif</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>
<span class="token keyword">elif</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token number">1</span>
<span class="token keyword">elif</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>s1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token builtin">ord</span><span class="token punctuation">(</span>s2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token number">1</span>
<span class="token keyword">elif</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>s1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># s1 &lt; s2</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> strcmp<span class="token punctuation">(</span>s1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span> s2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code>`,ys,gs;return{c(){y=t("iframe"),es=o(),ps=t("br"),os=t("br"),ls=o(),g=t("details"),F=t("summary"),Ms=i("예제 1 [String]"),Ls=i(`
문자열 하나를 인자로 받아 그 문자열이 몇 줄짜리인지 반환하는 함수 lineNum를 작성하시오.
함수 호출 예시
`),S=t("pre"),Ps=o(),j=t("p"),Ss=i("함수 반환 예시"),Ts=o(),T=t("pre"),As=o(),E=t("details"),X=t("summary"),Hs=i("정답"),Is=o(),A=t("pre"),cs=o(),rs=t("br"),us=o(),f=t("details"),W=t("summary"),Us=i("예제 2 [String]"),Ys=o(),w=t("p"),Bs=i("문자열을 뒤집었을 때, 그 결과가 원본과 같은 것을 팰린드롬 문자열 (palindrome)이라고 한다."),xs=t("br"),Ds=i(`
문자열 하나를 인자로 받아 그 문자열이 팰린드롬인지 반환하는 함수 isPalindrome을 작성하시오.`),qs=t("br"),zs=i(`
함수 호출 예시`),Ns=o(),H=t("pre"),Cs=o(),Z=t("p"),Fs=i("함수 반환 예시"),js=o(),I=t("pre"),Xs=o(),v=t("details"),G=t("summary"),Ws=i("정답"),Zs=o(),U=t("pre"),is=o(),ks=t("br"),ms=o(),b=t("details"),J=t("summary"),Gs=i("예제 3 [String]"),Js=o(),L=t("p"),Ks=i("문자열 두 개를 인자로 받는다. 이 문자열을 a, b라고 할 때 a에서 b를 찾아 "),Os=t("br"),Qs=i(`
모두 두 번 쓰는 함수 hongzinho를 작성하시오.
함수 호출 예시`),Vs=o(),Y=t("pre"),$s=o(),K=t("p"),sn=i("함수 반환 예시"),nn=o(),B=t("pre"),an=o(),R=t("details"),O=t("summary"),tn=i("정답"),en=o(),x=t("pre"),ds=o(),fs=t("br"),bs=o(),u=t("details"),Q=t("summary"),pn=i("예제 4 [String, Recursion]"),on=o(),V=t("p"),ln=i("Recursion을 통해 String의 크기를 비교하는 함수 strcmp를 설계한다."),cn=o(),P=t("ul"),$=t("li"),rn=i("string 간의 직접적인 비교 연산 사용 X (len을 통한 길이 비교)"),un=o(),ss=t("li"),kn=i("chr() : 한 개의 문자(character)의 Unicode code point를 반환하는 함수"),mn=o(),ns=t("p"),dn=i("함수 호출 예시"),fn=o(),D=t("pre"),bn=o(),as=t("p"),yn=i("함수 반환 예시"),gn=o(),q=t("pre"),_n=o(),z=t("pre"),hn=o(),M=t("details"),ts=t("summary"),wn=i("정답"),En=o(),N=t("pre"),ys=o(),gs=t("br"),this.h()},l(n){y=e(n,"IFRAME",{width:!0,height:!0,src:!0,title:!0,frameborder:!0,allow:!0}),p(y).forEach(a),es=l(n),ps=e(n,"BR",{}),os=e(n,"BR",{}),ls=l(n),g=e(n,"DETAILS",{markdown:!0});var c=p(g);F=e(c,"SUMMARY",{});var Mn=p(F);Ms=k(Mn,"예제 1 [String]"),Mn.forEach(a),Ls=k(c,`
문자열 하나를 인자로 받아 그 문자열이 몇 줄짜리인지 반환하는 함수 lineNum를 작성하시오.
함수 호출 예시
`),S=e(c,"PRE",{class:!0});var na=p(S);na.forEach(a),Ps=l(c),j=e(c,"P",{});var Ln=p(j);Ss=k(Ln,"함수 반환 예시"),Ln.forEach(a),Ts=l(c),T=e(c,"PRE",{class:!0});var aa=p(T);aa.forEach(a),As=l(c),E=e(c,"DETAILS",{markdown:!0});var _s=p(E);X=e(_s,"SUMMARY",{});var Pn=p(X);Hs=k(Pn,"정답"),Pn.forEach(a),Is=l(_s),A=e(_s,"PRE",{class:!0});var ta=p(A);ta.forEach(a),_s.forEach(a),c.forEach(a),cs=l(n),rs=e(n,"BR",{}),us=l(n),f=e(n,"DETAILS",{markdown:!0});var _=p(f);W=e(_,"SUMMARY",{});var Sn=p(W);Us=k(Sn,"예제 2 [String]"),Sn.forEach(a),Ys=l(_),w=e(_,"P",{});var C=p(w);Bs=k(C,"문자열을 뒤집었을 때, 그 결과가 원본과 같은 것을 팰린드롬 문자열 (palindrome)이라고 한다."),xs=e(C,"BR",{}),Ds=k(C,`
문자열 하나를 인자로 받아 그 문자열이 팰린드롬인지 반환하는 함수 isPalindrome을 작성하시오.`),qs=e(C,"BR",{}),zs=k(C,`
함수 호출 예시`),C.forEach(a),Ns=l(_),H=e(_,"PRE",{class:!0});var ea=p(H);ea.forEach(a),Cs=l(_),Z=e(_,"P",{});var Tn=p(Z);Fs=k(Tn,"함수 반환 예시"),Tn.forEach(a),js=l(_),I=e(_,"PRE",{class:!0});var pa=p(I);pa.forEach(a),Xs=l(_),v=e(_,"DETAILS",{markdown:!0});var hs=p(v);G=e(hs,"SUMMARY",{});var An=p(G);Ws=k(An,"정답"),An.forEach(a),Zs=l(hs),U=e(hs,"PRE",{class:!0});var oa=p(U);oa.forEach(a),hs.forEach(a),_.forEach(a),is=l(n),ks=e(n,"BR",{}),ms=l(n),b=e(n,"DETAILS",{markdown:!0});var h=p(b);J=e(h,"SUMMARY",{});var Hn=p(J);Gs=k(Hn,"예제 3 [String]"),Hn.forEach(a),Js=l(h),L=e(h,"P",{});var ws=p(L);Ks=k(ws,"문자열 두 개를 인자로 받는다. 이 문자열을 a, b라고 할 때 a에서 b를 찾아 "),Os=e(ws,"BR",{}),Qs=k(ws,`
모두 두 번 쓰는 함수 hongzinho를 작성하시오.
함수 호출 예시`),ws.forEach(a),Vs=l(h),Y=e(h,"PRE",{class:!0});var la=p(Y);la.forEach(a),$s=l(h),K=e(h,"P",{});var In=p(K);sn=k(In,"함수 반환 예시"),In.forEach(a),nn=l(h),B=e(h,"PRE",{class:!0});var ca=p(B);ca.forEach(a),an=l(h),R=e(h,"DETAILS",{markdown:!0});var Es=p(R);O=e(Es,"SUMMARY",{});var Un=p(O);tn=k(Un,"정답"),Un.forEach(a),en=l(Es),x=e(Es,"PRE",{class:!0});var ra=p(x);ra.forEach(a),Es.forEach(a),h.forEach(a),ds=l(n),fs=e(n,"BR",{}),bs=l(n),u=e(n,"DETAILS",{markdown:!0});var d=p(u);Q=e(d,"SUMMARY",{});var Yn=p(Q);pn=k(Yn,"예제 4 [String, Recursion]"),Yn.forEach(a),on=l(d),V=e(d,"P",{});var Bn=p(V);ln=k(Bn,"Recursion을 통해 String의 크기를 비교하는 함수 strcmp를 설계한다."),Bn.forEach(a),cn=l(d),P=e(d,"UL",{});var vs=p(P);$=e(vs,"LI",{});var xn=p($);rn=k(xn,"string 간의 직접적인 비교 연산 사용 X (len을 통한 길이 비교)"),xn.forEach(a),un=l(vs),ss=e(vs,"LI",{});var Dn=p(ss);kn=k(Dn,"chr() : 한 개의 문자(character)의 Unicode code point를 반환하는 함수"),Dn.forEach(a),vs.forEach(a),mn=l(d),ns=e(d,"P",{});var qn=p(ns);dn=k(qn,"함수 호출 예시"),qn.forEach(a),fn=l(d),D=e(d,"PRE",{class:!0});var ua=p(D);ua.forEach(a),bn=l(d),as=e(d,"P",{});var zn=p(as);yn=k(zn,"함수 반환 예시"),zn.forEach(a),gn=l(d),q=e(d,"PRE",{class:!0});var ia=p(q);ia.forEach(a),_n=l(d),z=e(d,"PRE",{class:!0});var ka=p(z);ka.forEach(a),hn=l(d),M=e(d,"DETAILS",{markdown:!0});var Rs=p(M);ts=e(Rs,"SUMMARY",{});var Nn=p(ts);wn=k(Nn,"정답"),Nn.forEach(a),En=l(Rs),N=e(Rs,"PRE",{class:!0});var ma=p(N);ma.forEach(a),Rs.forEach(a),d.forEach(a),ys=l(n),gs=e(n,"BR",{}),this.h()},h(){r(y,"width","800"),r(y,"height","500"),ya(y.src,Rn="https://www.youtube.com/embed/YP43fn5I9qs")||r(y,"src",Rn),r(y,"title","YouTube video player"),r(y,"frameborder","0"),r(y,"allow","accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"),y.allowFullscreen=!0,r(S,"class","language-python"),r(T,"class","language-python"),r(A,"class","language-python"),r(E,"markdown","1"),r(g,"markdown","1"),r(H,"class","language-python"),r(I,"class","language-python"),r(U,"class","language-python"),r(v,"markdown","1"),r(f,"markdown","1"),r(Y,"class","language-python"),r(B,"class","language-python"),r(x,"class","language-python"),r(R,"markdown","1"),r(b,"markdown","1"),r(D,"class","language-python"),r(q,"class","language-python"),r(z,"class","language-python"),r(N,"class","language-python"),r(M,"markdown","1"),r(u,"markdown","1")},m(n,c){m(n,y,c),m(n,es,c),m(n,ps,c),m(n,os,c),m(n,ls,c),m(n,g,c),s(g,F),s(F,Ms),s(g,Ls),s(g,S),S.innerHTML=Fn,s(g,Ps),s(g,j),s(j,Ss),s(g,Ts),s(g,T),T.innerHTML=jn,s(g,As),s(g,E),s(E,X),s(X,Hs),s(E,Is),s(E,A),A.innerHTML=Xn,m(n,cs,c),m(n,rs,c),m(n,us,c),m(n,f,c),s(f,W),s(W,Us),s(f,Ys),s(f,w),s(w,Bs),s(w,xs),s(w,Ds),s(w,qs),s(w,zs),s(f,Ns),s(f,H),H.innerHTML=Wn,s(f,Cs),s(f,Z),s(Z,Fs),s(f,js),s(f,I),I.innerHTML=Zn,s(f,Xs),s(f,v),s(v,G),s(G,Ws),s(v,Zs),s(v,U),U.innerHTML=Gn,m(n,is,c),m(n,ks,c),m(n,ms,c),m(n,b,c),s(b,J),s(J,Gs),s(b,Js),s(b,L),s(L,Ks),s(L,Os),s(L,Qs),s(b,Vs),s(b,Y),Y.innerHTML=Jn,s(b,$s),s(b,K),s(K,sn),s(b,nn),s(b,B),B.innerHTML=Kn,s(b,an),s(b,R),s(R,O),s(O,tn),s(R,en),s(R,x),x.innerHTML=On,m(n,ds,c),m(n,fs,c),m(n,bs,c),m(n,u,c),s(u,Q),s(Q,pn),s(u,on),s(u,V),s(V,ln),s(u,cn),s(u,P),s(P,$),s($,rn),s(P,un),s(P,ss),s(ss,kn),s(u,mn),s(u,ns),s(ns,dn),s(u,fn),s(u,D),D.innerHTML=Qn,s(u,bn),s(u,as),s(as,yn),s(u,gn),s(u,q),q.innerHTML=Vn,s(u,_n),s(u,z),z.innerHTML=$n,s(u,hn),s(u,M),s(M,ts),s(ts,wn),s(M,En),s(M,N),N.innerHTML=sa,m(n,ys,c),m(n,gs,c)},p:vn,i:vn,o:vn,d(n){n&&a(y),n&&a(es),n&&a(ps),n&&a(os),n&&a(ls),n&&a(g),n&&a(cs),n&&a(rs),n&&a(us),n&&a(f),n&&a(is),n&&a(ks),n&&a(ms),n&&a(b),n&&a(ds),n&&a(fs),n&&a(bs),n&&a(u),n&&a(ys),n&&a(gs)}}}const ha={title:"3. Callback, Lambda function, Recursion",date:"2022-03-26T00:00:00.000Z",excerpt:"Callback, Lambda function, Recursion",categories:["동아리교육"],coverImage:"/post_img/동아리교육/22-1_return_python/cover.png",coverWidth:16,coverHeight:9,indexed:!1,exposed:!1};class wa extends da{constructor(y){super(),fa(this,y,null,ga,ba,{})}}export{wa as default,ha as metadata};
