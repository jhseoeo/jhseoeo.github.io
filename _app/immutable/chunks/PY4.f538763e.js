import{S as wa,i as ba,s as _a,k as t,a as o,q as u,y as va,l as p,m as e,h as a,c,r as k,z as Ea,n as d,U as ha,b as f,E as n,A as Ma,M as Ra,g as xa,d as Pa,B as Sa}from"./index.d78780bf.js";import{I as Ba}from"./Image.605b14b5.js";function Aa(Zs){let y,Hs,pn,en,on,cn,w,G,Mn,Rn,S,xn,Pn,Sn,Bn,An,Tn,h,X,Ln,Dn,L,na=`<code class="language-python"><span class="token keyword">import</span> tkinter <span class="token keyword">as</span> tk

<span class="token keyword">def</span> <span class="token function">on_drag_start</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">:</span>
    widget <span class="token operator">=</span> event<span class="token punctuation">.</span>widget
    widget<span class="token punctuation">.</span>_drag_start_x <span class="token operator">=</span> event<span class="token punctuation">.</span>x
    widget<span class="token punctuation">.</span>_drag_start_y <span class="token operator">=</span> event<span class="token punctuation">.</span>y

<span class="token keyword">def</span> <span class="token function">on_drag_motion</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">:</span>
    widget <span class="token operator">=</span> event<span class="token punctuation">.</span>widget
    x <span class="token operator">=</span> widget<span class="token punctuation">.</span>winfo_x<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> widget<span class="token punctuation">.</span>_drag_start_x <span class="token operator">+</span> event<span class="token punctuation">.</span>x
    y <span class="token operator">=</span> widget<span class="token punctuation">.</span>winfo_y<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> widget<span class="token punctuation">.</span>_drag_start_y <span class="token operator">+</span> event<span class="token punctuation">.</span>y
    widget<span class="token punctuation">.</span>place<span class="token punctuation">(</span>x<span class="token operator">=</span>x<span class="token punctuation">,</span> y<span class="token operator">=</span>y<span class="token punctuation">)</span>

root <span class="token operator">=</span> tk<span class="token punctuation">.</span>Tk<span class="token punctuation">(</span><span class="token punctuation">)</span>
root<span class="token punctuation">.</span>resizable<span class="token punctuation">(</span>width<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> height<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
root<span class="token punctuation">.</span>geometry<span class="token punctuation">(</span><span class="token string">"800x600"</span><span class="token punctuation">)</span>

button <span class="token operator">=</span> tk<span class="token punctuation">.</span>Button<span class="token punctuation">(</span>root<span class="token punctuation">,</span> width<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> height<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> text<span class="token operator">=</span><span class="token string">"응애"</span><span class="token punctuation">,</span> font<span class="token operator">=</span><span class="token string">"24pt"</span><span class="token punctuation">)</span>
button<span class="token punctuation">.</span>place<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">60</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token number">60</span><span class="token punctuation">)</span>
button<span class="token punctuation">.</span>bind<span class="token punctuation">(</span><span class="token string">"&amp;lt;Button-1&amp;gt;"</span><span class="token punctuation">,</span> func<span class="token operator">=</span>on_drag_start<span class="token punctuation">)</span>
button<span class="token punctuation">.</span>bind<span class="token punctuation">(</span><span class="token string">"&amp;lt;B1-Motion&amp;gt;"</span><span class="token punctuation">,</span> func<span class="token operator">=</span>on_drag_motion<span class="token punctuation">)</span>

root<span class="token punctuation">.</span>mainloop<span class="token punctuation">(</span><span class="token punctuation">)</span></code>`,ln,rn,un,b,z,In,Un,D,Yn,Hn,Kn,I,sa=`<code class="language-python">s <span class="token operator">=</span> <span class="token string">"-----     Hello world      -----"</span>
s<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>swapcase<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'L'</span><span class="token punctuation">)</span></code>`,$n,M,N,qn,Fn,U,aa='<code class="language-python">    <span class="token number">3</span></code>',kn,dn,mn,m,j,Cn,Gn,J,Xn,zn,O,Nn,jn,Y,ta=`<code class="language-python">    convertKorean<span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span>
    convertKorean<span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">)</span>
    convertKorean<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span>
    convertKorean<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    convertKorean<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span></code>`,Jn,Q,On,Qn,H,pa=`<code class="language-python">    이십사
    육십
    구
    범위에서 벗어났어요
    범위에서 벗어났어요</code>`,Vn,v,V,Wn,Zn,K,ea=`<code class="language-python"><span class="token keyword">def</span> <span class="token function">getKorean</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> num <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">'일'</span>
    <span class="token keyword">elif</span> num <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">'이'</span>
    <span class="token keyword">elif</span> num <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">'삼'</span>
    <span class="token keyword">elif</span> num <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">'사'</span>
    <span class="token keyword">elif</span> num <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">'오'</span>
    <span class="token keyword">elif</span> num <span class="token operator">==</span> <span class="token number">6</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">'육'</span>
    <span class="token keyword">elif</span> num <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">'칠'</span>
    <span class="token keyword">elif</span> num <span class="token operator">==</span> <span class="token number">8</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">'팔'</span>
    <span class="token keyword">elif</span> num <span class="token operator">==</span> <span class="token number">9</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">'구'</span>

    <span class="token keyword">return</span> <span class="token string">'뭐임'</span>


x <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> x <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token keyword">or</span> x <span class="token operator">>=</span> <span class="token number">100</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"범위를 벗어났어요"</span><span class="token punctuation">)</span>

<span class="token keyword">else</span><span class="token punctuation">:</span>
    ten <span class="token operator">=</span> x<span class="token operator">//</span><span class="token number">10</span>
    one <span class="token operator">=</span> x <span class="token operator">%</span> <span class="token number">10</span>

    <span class="token keyword">if</span> ten <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>getKorean<span class="token punctuation">(</span>ten<span class="token punctuation">)</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> ten <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>end<span class="token operator">=</span><span class="token string">"십"</span><span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span>getKorean<span class="token punctuation">(</span><span class="token string">"원"</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`,ns,W,ss,fn,yn,gn,l,Z,as,ts,B,ps,nn,es,os,E,cs,ls,rs,us,ks,is,ds,_,ms,fs,ys,gs,ws,bs,_s,vs,A,Es,hs,Ms,Rs,sn,xs,Ps,$,oa=`<code class="language-python">    Enter r<span class="token punctuation">:</span> <span class="token number">5</span>
    Enter degree<span class="token punctuation">:</span> <span class="token number">90</span>

    Enter r<span class="token punctuation">:</span> <span class="token number">5</span>
    Enter degree<span class="token punctuation">:</span> <span class="token number">180</span></code>`,Ss,an,Bs,As,q,ca=`<code class="language-python">    <span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">5.0</span><span class="token punctuation">)</span>

    <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">5.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">)</span></code>`,Ts,Ls,Ds,R,tn,Is,Us,F,la=`<code class="language-python"><span class="token keyword">import</span> math

<span class="token keyword">def</span> <span class="token function">convertX</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> degree<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> r <span class="token operator">*</span> math<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>math<span class="token punctuation">.</span>radians<span class="token punctuation">(</span>degree<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment"># 또는, rad = deg * pi / 180 인 것을 이용해도 된다.</span>
    <span class="token comment"># return r * math.cos(degree * math.pi / 180)</span>

<span class="token keyword">def</span> <span class="token function">convertY</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> degree<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> r <span class="token operator">*</span> math<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>math<span class="token punctuation">.</span>radians<span class="token punctuation">(</span>degree<span class="token punctuation">)</span><span class="token punctuation">)</span>


r <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"Enter r: "</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
degree <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"Enter degree: "</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"(&#123;0:.1f&#125;, &#123;1:.1f&#125;)"</span><span class="token punctuation">.</span> <span class="token builtin">format</span><span class="token punctuation">(</span>convertX<span class="token punctuation">(</span>r<span class="token punctuation">,</span> degree<span class="token punctuation">)</span><span class="token punctuation">,</span> convertY<span class="token punctuation">(</span>r<span class="token punctuation">,</span> degree<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`,wn;return B=new Ba({props:{alt:"Polar",src:"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR1p569xyGBCJcMoVoo7-7L2-XNOexkDQ5niw&usqp=CAU"}}),{c(){y=t("iframe"),pn=o(),en=t("br"),on=t("br"),cn=o(),w=t("details"),G=t("summary"),Mn=u("예제 1 [tkinter]"),Rn=o(),S=t("p"),xn=u("Drag&Drop이 가능한 tkinter button을 설계합니다"),Pn=t("br"),Sn=u(`
Drag event :`),Bn=o(),An=t("br"),Tn=o(),h=t("details"),X=t("summary"),Ln=u("정답"),Dn=o(),L=t("pre"),ln=o(),rn=t("br"),un=o(),b=t("details"),z=t("summary"),In=u("예제 2 [String Method]"),Un=o(),D=t("p"),Yn=u("아래 구문을 실행하였을 때 어떤 결과가 출력될 지 예상하시오"),Hn=t("br"),Kn=o(),I=t("pre"),$n=o(),M=t("details"),N=t("summary"),qn=u("정답"),Fn=o(),U=t("pre"),kn=o(),dn=t("br"),mn=o(),m=t("details"),j=t("summary"),Cn=u("예제 3 [Conditional Statement]"),Gn=o(),J=t("p"),Xn=u("한 자리수 또는 두 자리수 자연수를 입력받아 이를 한글로 표기하는 코드를 작성하시오."),zn=o(),O=t("p"),Nn=u("입력 예시"),jn=o(),Y=t("pre"),Jn=o(),Q=t("p"),On=u("출력 예시"),Qn=o(),H=t("pre"),Vn=o(),v=t("details"),V=t("summary"),Wn=u("정답"),Zn=o(),K=t("pre"),ns=o(),W=t("p"),ss=u("getKorean 함수는 배열의 인덱스를 이용하면 훨씬 간단하게 구현 가능합니다."),fn=o(),yn=t("br"),gn=o(),l=t("details"),Z=t("summary"),as=u("예제 4 [Math Module]"),ts=o(),va(B.$$.fragment),ps=o(),nn=t("p"),es=u("님들 미분적분학에서 배울거^^"),os=o(),E=t("p"),cs=u("극좌표계는 위 그림과 같이, 반지름r과 각(θ)으로 표현된다. "),ls=t("br"),rs=u(`
r은 극(원점)에서의 거리를 의미하고, `),us=t("br"),ks=u(`
θ는 0°(직교 좌표계의 x축 양의 방향에 해당)에서의 각도를 의미한다. `),is=t("br"),ds=o(),_=t("p"),ms=u("극좌표계에 위치한 한 점(r, θ)을 "),fs=t("br"),ys=u(`
직교 좌표계의 한 점(x, y)으로 바꾸기 위한 공식은 다음과 같다.`),gs=t("br"),ws=u(`
𝑥= 𝑟cos⁡𝜃`),bs=t("br"),_s=u(`
𝑦= 𝑟sin⁡𝜃`),vs=o(),A=t("p"),Es=u("사용자로부터 반지름(r), 각도(°)를 입력받아 입력한 위치에 해당하는 "),hs=t("br"),Ms=u(`
극좌표계의 점을 직교좌표계의 좌표(x, y)로 출력하는 프로그램을 작성하시오.`),Rs=o(),sn=t("p"),xs=u("입력 예시"),Ps=o(),$=t("pre"),Ss=o(),an=t("p"),Bs=u("츨력 예시"),As=o(),q=t("pre"),Ts=o(),Ls=t("br"),Ds=o(),R=t("details"),tn=t("summary"),Is=u("정답"),Us=o(),F=t("pre"),this.h()},l(s){y=p(s,"IFRAME",{width:!0,height:!0,src:!0,title:!0,frameborder:!0,allow:!0}),e(y).forEach(a),pn=c(s),en=p(s,"BR",{}),on=p(s,"BR",{}),cn=c(s),w=p(s,"DETAILS",{markdown:!0});var r=e(w);G=p(r,"SUMMARY",{});var Ks=e(G);Mn=k(Ks,"예제 1 [tkinter]"),Ks.forEach(a),Rn=c(r),S=p(r,"P",{});var bn=e(S);xn=k(bn,"Drag&Drop이 가능한 tkinter button을 설계합니다"),Pn=p(bn,"BR",{}),Sn=k(bn,`
Drag event :`),bn.forEach(a),Bn=c(r),An=p(r,"BR",{}),Tn=c(r),h=p(r,"DETAILS",{markdown:!0});var _n=e(h);X=p(_n,"SUMMARY",{});var $s=e(X);Ln=k($s,"정답"),$s.forEach(a),Dn=c(_n),L=p(_n,"PRE",{class:!0});var ra=e(L);ra.forEach(a),_n.forEach(a),r.forEach(a),ln=c(s),rn=p(s,"BR",{}),un=c(s),b=p(s,"DETAILS",{markdown:!0});var x=e(b);z=p(x,"SUMMARY",{});var qs=e(z);In=k(qs,"예제 2 [String Method]"),qs.forEach(a),Un=c(x),D=p(x,"P",{});var Ys=e(D);Yn=k(Ys,"아래 구문을 실행하였을 때 어떤 결과가 출력될 지 예상하시오"),Hn=p(Ys,"BR",{}),Ys.forEach(a),Kn=c(x),I=p(x,"PRE",{class:!0});var ua=e(I);ua.forEach(a),$n=c(x),M=p(x,"DETAILS",{markdown:!0});var vn=e(M);N=p(vn,"SUMMARY",{});var Fs=e(N);qn=k(Fs,"정답"),Fs.forEach(a),Fn=c(vn),U=p(vn,"PRE",{class:!0});var ka=e(U);ka.forEach(a),vn.forEach(a),x.forEach(a),kn=c(s),dn=p(s,"BR",{}),mn=c(s),m=p(s,"DETAILS",{markdown:!0});var g=e(m);j=p(g,"SUMMARY",{});var Cs=e(j);Cn=k(Cs,"예제 3 [Conditional Statement]"),Cs.forEach(a),Gn=c(g),J=p(g,"P",{});var Gs=e(J);Xn=k(Gs,"한 자리수 또는 두 자리수 자연수를 입력받아 이를 한글로 표기하는 코드를 작성하시오."),Gs.forEach(a),zn=c(g),O=p(g,"P",{});var Xs=e(O);Nn=k(Xs,"입력 예시"),Xs.forEach(a),jn=c(g),Y=p(g,"PRE",{class:!0});var ia=e(Y);ia.forEach(a),Jn=c(g),Q=p(g,"P",{});var zs=e(Q);On=k(zs,"출력 예시"),zs.forEach(a),Qn=c(g),H=p(g,"PRE",{class:!0});var da=e(H);da.forEach(a),Vn=c(g),v=p(g,"DETAILS",{markdown:!0});var C=e(v);V=p(C,"SUMMARY",{});var Ns=e(V);Wn=k(Ns,"정답"),Ns.forEach(a),Zn=c(C),K=p(C,"PRE",{class:!0});var ma=e(K);ma.forEach(a),ns=c(C),W=p(C,"P",{});var js=e(W);ss=k(js,"getKorean 함수는 배열의 인덱스를 이용하면 훨씬 간단하게 구현 가능합니다."),js.forEach(a),C.forEach(a),g.forEach(a),fn=c(s),yn=p(s,"BR",{}),gn=c(s),l=p(s,"DETAILS",{markdown:!0});var i=e(l);Z=p(i,"SUMMARY",{});var Js=e(Z);as=k(Js,"예제 4 [Math Module]"),Js.forEach(a),ts=c(i),Ea(B.$$.fragment,i),ps=c(i),nn=p(i,"P",{});var Os=e(nn);es=k(Os,"님들 미분적분학에서 배울거^^"),Os.forEach(a),os=c(i),E=p(i,"P",{});var T=e(E);cs=k(T,"극좌표계는 위 그림과 같이, 반지름r과 각(θ)으로 표현된다. "),ls=p(T,"BR",{}),rs=k(T,`
r은 극(원점)에서의 거리를 의미하고, `),us=p(T,"BR",{}),ks=k(T,`
θ는 0°(직교 좌표계의 x축 양의 방향에 해당)에서의 각도를 의미한다. `),is=p(T,"BR",{}),T.forEach(a),ds=c(i),_=p(i,"P",{});var P=e(_);ms=k(P,"극좌표계에 위치한 한 점(r, θ)을 "),fs=p(P,"BR",{}),ys=k(P,`
직교 좌표계의 한 점(x, y)으로 바꾸기 위한 공식은 다음과 같다.`),gs=p(P,"BR",{}),ws=k(P,`
𝑥= 𝑟cos⁡𝜃`),bs=p(P,"BR",{}),_s=k(P,`
𝑦= 𝑟sin⁡𝜃`),P.forEach(a),vs=c(i),A=p(i,"P",{});var En=e(A);Es=k(En,"사용자로부터 반지름(r), 각도(°)를 입력받아 입력한 위치에 해당하는 "),hs=p(En,"BR",{}),Ms=k(En,`
극좌표계의 점을 직교좌표계의 좌표(x, y)로 출력하는 프로그램을 작성하시오.`),En.forEach(a),Rs=c(i),sn=p(i,"P",{});var Qs=e(sn);xs=k(Qs,"입력 예시"),Qs.forEach(a),Ps=c(i),$=p(i,"PRE",{class:!0});var fa=e($);fa.forEach(a),Ss=c(i),an=p(i,"P",{});var Vs=e(an);Bs=k(Vs,"츨력 예시"),Vs.forEach(a),As=c(i),q=p(i,"PRE",{class:!0});var ya=e(q);ya.forEach(a),Ts=c(i),Ls=p(i,"BR",{}),Ds=c(i),R=p(i,"DETAILS",{markdown:!0});var hn=e(R);tn=p(hn,"SUMMARY",{});var Ws=e(tn);Is=k(Ws,"정답"),Ws.forEach(a),Us=c(hn),F=p(hn,"PRE",{class:!0});var ga=e(F);ga.forEach(a),hn.forEach(a),i.forEach(a),this.h()},h(){d(y,"width","800"),d(y,"height","500"),ha(y.src,Hs="https://www.youtube.com/embed/zXF6vrFqjmE")||d(y,"src",Hs),d(y,"title","YouTube video player"),d(y,"frameborder","0"),d(y,"allow","accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"),y.allowFullscreen=!0,d(L,"class","language-python"),d(h,"markdown","1"),d(w,"markdown","1"),d(I,"class","language-python"),d(U,"class","language-python"),d(M,"markdown","1"),d(b,"markdown","1"),d(Y,"class","language-python"),d(H,"class","language-python"),d(K,"class","language-python"),d(v,"markdown","1"),d(m,"markdown","1"),d($,"class","language-python"),d(q,"class","language-python"),d(F,"class","language-python"),d(R,"markdown","1"),d(l,"markdown","1")},m(s,r){f(s,y,r),f(s,pn,r),f(s,en,r),f(s,on,r),f(s,cn,r),f(s,w,r),n(w,G),n(G,Mn),n(w,Rn),n(w,S),n(S,xn),n(S,Pn),n(S,Sn),n(w,Bn),n(w,An),n(w,Tn),n(w,h),n(h,X),n(X,Ln),n(h,Dn),n(h,L),L.innerHTML=na,f(s,ln,r),f(s,rn,r),f(s,un,r),f(s,b,r),n(b,z),n(z,In),n(b,Un),n(b,D),n(D,Yn),n(D,Hn),n(b,Kn),n(b,I),I.innerHTML=sa,n(b,$n),n(b,M),n(M,N),n(N,qn),n(M,Fn),n(M,U),U.innerHTML=aa,f(s,kn,r),f(s,dn,r),f(s,mn,r),f(s,m,r),n(m,j),n(j,Cn),n(m,Gn),n(m,J),n(J,Xn),n(m,zn),n(m,O),n(O,Nn),n(m,jn),n(m,Y),Y.innerHTML=ta,n(m,Jn),n(m,Q),n(Q,On),n(m,Qn),n(m,H),H.innerHTML=pa,n(m,Vn),n(m,v),n(v,V),n(V,Wn),n(v,Zn),n(v,K),K.innerHTML=ea,n(v,ns),n(v,W),n(W,ss),f(s,fn,r),f(s,yn,r),f(s,gn,r),f(s,l,r),n(l,Z),n(Z,as),n(l,ts),Ma(B,l,null),n(l,ps),n(l,nn),n(nn,es),n(l,os),n(l,E),n(E,cs),n(E,ls),n(E,rs),n(E,us),n(E,ks),n(E,is),n(l,ds),n(l,_),n(_,ms),n(_,fs),n(_,ys),n(_,gs),n(_,ws),n(_,bs),n(_,_s),n(l,vs),n(l,A),n(A,Es),n(A,hs),n(A,Ms),n(l,Rs),n(l,sn),n(sn,xs),n(l,Ps),n(l,$),$.innerHTML=oa,n(l,Ss),n(l,an),n(an,Bs),n(l,As),n(l,q),q.innerHTML=ca,n(l,Ts),n(l,Ls),n(l,Ds),n(l,R),n(R,tn),n(tn,Is),n(R,Us),n(R,F),F.innerHTML=la,wn=!0},p:Ra,i(s){wn||(xa(B.$$.fragment,s),wn=!0)},o(s){Pa(B.$$.fragment,s),wn=!1},d(s){s&&a(y),s&&a(pn),s&&a(en),s&&a(on),s&&a(cn),s&&a(w),s&&a(ln),s&&a(rn),s&&a(un),s&&a(b),s&&a(kn),s&&a(dn),s&&a(mn),s&&a(m),s&&a(fn),s&&a(yn),s&&a(gn),s&&a(l),Sa(B)}}}const Da={title:"4. GUI Programming",date:"2022-04-01T00:00:00.000Z",excerpt:"implement GUI with tkinter",categories:["동아리교육"],coverImage:"/post_img/동아리교육/22-1_return_python/cover.png",coverWidth:16,coverHeight:9,indexed:!1,exposed:!1};class Ia extends wa{constructor(y){super(),ba(this,y,null,Aa,_a,{})}}export{Ia as default,Da as metadata};
