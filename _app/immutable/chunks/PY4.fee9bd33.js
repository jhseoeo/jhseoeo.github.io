import{S as Ea,i as ha,s as Ma,k as t,a as o,q as u,l as p,m as e,h as s,c,r as k,n as i,U as aa,b as y,E as n,M as Hs}from"./index.5621e629.js";function Ra(ta){let f,Ks,en,on,cn,ln,w,X,Mn,Rn,S,xn,Pn,Sn,Bn,Tn,An,h,z,Ln,Dn,A,pa=`<code class="language-python"><span class="token keyword">import</span> tkinter <span class="token keyword">as</span> tk

<span class="token keyword">def</span> <span class="token function">on_drag_start</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">:</span>
    widget <span class="token operator">=</span> event<span class="token punctuation">.</span>widget
    widget<span class="token punctuation">.</span>_drag_start_x <span class="token operator">=</span> event<span class="token punctuation">.</span>x
    widget<span class="token punctuation">.</span>_drag_start_y <span class="token operator">=</span> event<span class="token punctuation">.</span>y

<span class="token keyword">def</span> <span class="token function">on_drag_motion</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">:</span>
    widget <span class="token operator">=</span> event<span class="token punctuation">.</span>widget
    x <span class="token operator">=</span> widget<span class="token punctuation">.</span>winfo_x<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> widget<span class="token punctuation">.</span>_drag_start_x <span class="token operator">+</span> event<span class="token punctuation">.</span>x
    y <span class="token operator">=</span> widget<span class="token punctuation">.</span>winfo_y<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> widget<span class="token punctuation">.</span>_drag_start_y <span class="token operator">+</span> event<span class="token punctuation">.</span>y
    widget<span class="token punctuation">.</span>place<span class="token punctuation">(</span>x<span class="token operator">=</span>x<span class="token punctuation">,</span> y<span class="token operator">=</span>y<span class="token punctuation">)</span>

root <span class="token operator">=</span> tk<span class="token punctuation">.</span>Tk<span class="token punctuation">(</span><span class="token punctuation">)</span>
root<span class="token punctuation">.</span>resizable<span class="token punctuation">(</span>width<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> height<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
root<span class="token punctuation">.</span>geometry<span class="token punctuation">(</span><span class="token string">"800x600"</span><span class="token punctuation">)</span>

button <span class="token operator">=</span> tk<span class="token punctuation">.</span>Button<span class="token punctuation">(</span>root<span class="token punctuation">,</span> width<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> height<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> text<span class="token operator">=</span><span class="token string">"응애"</span><span class="token punctuation">,</span> font<span class="token operator">=</span><span class="token string">"24pt"</span><span class="token punctuation">)</span>
button<span class="token punctuation">.</span>place<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">60</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token number">60</span><span class="token punctuation">)</span>
button<span class="token punctuation">.</span>bind<span class="token punctuation">(</span><span class="token string">"&amp;lt;Button-1&amp;gt;"</span><span class="token punctuation">,</span> func<span class="token operator">=</span>on_drag_start<span class="token punctuation">)</span>
button<span class="token punctuation">.</span>bind<span class="token punctuation">(</span><span class="token string">"&amp;lt;B1-Motion&amp;gt;"</span><span class="token punctuation">,</span> func<span class="token operator">=</span>on_drag_motion<span class="token punctuation">)</span>

root<span class="token punctuation">.</span>mainloop<span class="token punctuation">(</span><span class="token punctuation">)</span></code>`,rn,un,kn,g,N,In,Un,L,Yn,Hn,Kn,D,ea=`<code class="language-python">s <span class="token operator">=</span> <span class="token string">"-----     Hello world      -----"</span>
s<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>swapcase<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token string">'L'</span><span class="token punctuation">)</span></code>`,qn,M,j,Fn,Cn,I,oa='<code class="language-python">    <span class="token number">3</span></code>',dn,mn,yn,m,J,Gn,Xn,O,zn,Nn,Q,jn,Jn,U,ca=`<code class="language-python">    convertKorean<span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span>
    convertKorean<span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">)</span>
    convertKorean<span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span>
    convertKorean<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    convertKorean<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span></code>`,On,V,Qn,Vn,Y,la=`<code class="language-python">    이십사
    육십
    구
    범위에서 벗어났어요
    범위에서 벗어났어요</code>`,Wn,v,W,Zn,$n,H,ra=`<code class="language-python"><span class="token keyword">def</span> <span class="token function">getKorean</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> num <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">'일'</span>
    <span class="token keyword">elif</span> num <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">'이'</span>
    <span class="token keyword">elif</span> num <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">'삼'</span>
    <span class="token keyword">elif</span> num <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">'사'</span>
    <span class="token keyword">elif</span> num <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">'오'</span>
    <span class="token keyword">elif</span> num <span class="token operator">==</span> <span class="token number">6</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">'육'</span>
    <span class="token keyword">elif</span> num <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">'칠'</span>
    <span class="token keyword">elif</span> num <span class="token operator">==</span> <span class="token number">8</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">'팔'</span>
    <span class="token keyword">elif</span> num <span class="token operator">==</span> <span class="token number">9</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token string">'구'</span>

    <span class="token keyword">return</span> <span class="token string">'뭐임'</span>


x <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> x <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token keyword">or</span> x <span class="token operator">>=</span> <span class="token number">100</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"범위를 벗어났어요"</span><span class="token punctuation">)</span>

<span class="token keyword">else</span><span class="token punctuation">:</span>
    ten <span class="token operator">=</span> x<span class="token operator">//</span><span class="token number">10</span>
    one <span class="token operator">=</span> x <span class="token operator">%</span> <span class="token number">10</span>

    <span class="token keyword">if</span> ten <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>getKorean<span class="token punctuation">(</span>ten<span class="token punctuation">)</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> ten <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>end<span class="token operator">=</span><span class="token string">"십"</span><span class="token punctuation">)</span>

    <span class="token keyword">print</span><span class="token punctuation">(</span>getKorean<span class="token punctuation">(</span><span class="token string">"원"</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`,ns,Z,ss,fn,bn,wn,l,$,as,ts,nn,K,qs,ps,sn,es,os,E,cs,ls,rs,us,ks,is,ds,_,ms,ys,fs,bs,ws,gs,_s,vs,B,Es,hs,Ms,Rs,an,xs,Ps,q,ua=`<code class="language-python">    Enter r<span class="token punctuation">:</span> <span class="token number">5</span>
    Enter degree<span class="token punctuation">:</span> <span class="token number">90</span>

    Enter r<span class="token punctuation">:</span> <span class="token number">5</span>
    Enter degree<span class="token punctuation">:</span> <span class="token number">180</span></code>`,Ss,tn,Bs,Ts,F,ka=`<code class="language-python">    <span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">5.0</span><span class="token punctuation">)</span>

    <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">5.0</span><span class="token punctuation">,</span> <span class="token number">0.0</span><span class="token punctuation">)</span></code>`,As,Ls,Ds,R,pn,Is,Us,C,ia=`<code class="language-python"><span class="token keyword">import</span> math

<span class="token keyword">def</span> <span class="token function">convertX</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> degree<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> r <span class="token operator">*</span> math<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>math<span class="token punctuation">.</span>radians<span class="token punctuation">(</span>degree<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment"># 또는, rad = deg * pi / 180 인 것을 이용해도 된다.</span>
    <span class="token comment"># return r * math.cos(degree * math.pi / 180)</span>

<span class="token keyword">def</span> <span class="token function">convertY</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> degree<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> r <span class="token operator">*</span> math<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>math<span class="token punctuation">.</span>radians<span class="token punctuation">(</span>degree<span class="token punctuation">)</span><span class="token punctuation">)</span>


r <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"Enter r: "</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
degree <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"Enter degree: "</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"(&#123;0:.1f&#125;, &#123;1:.1f&#125;)"</span><span class="token punctuation">.</span> <span class="token builtin">format</span><span class="token punctuation">(</span>convertX<span class="token punctuation">(</span>r<span class="token punctuation">,</span> degree<span class="token punctuation">)</span><span class="token punctuation">,</span> convertY<span class="token punctuation">(</span>r<span class="token punctuation">,</span> degree<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`;return{c(){f=t("iframe"),en=o(),on=t("br"),cn=t("br"),ln=o(),w=t("details"),X=t("summary"),Mn=u("예제 1 [tkinter]"),Rn=o(),S=t("p"),xn=u("Drag&Drop이 가능한 tkinter button을 설계합니다"),Pn=t("br"),Sn=u(`
Drag event :`),Bn=o(),Tn=t("br"),An=o(),h=t("details"),z=t("summary"),Ln=u("정답"),Dn=o(),A=t("pre"),rn=o(),un=t("br"),kn=o(),g=t("details"),N=t("summary"),In=u("예제 2 [String Method]"),Un=o(),L=t("p"),Yn=u("아래 구문을 실행하였을 때 어떤 결과가 출력될 지 예상하시오"),Hn=t("br"),Kn=o(),D=t("pre"),qn=o(),M=t("details"),j=t("summary"),Fn=u("정답"),Cn=o(),I=t("pre"),dn=o(),mn=t("br"),yn=o(),m=t("details"),J=t("summary"),Gn=u("예제 3 [Conditional Statement]"),Xn=o(),O=t("p"),zn=u("한 자리수 또는 두 자리수 자연수를 입력받아 이를 한글로 표기하는 코드를 작성하시오."),Nn=o(),Q=t("p"),jn=u("입력 예시"),Jn=o(),U=t("pre"),On=o(),V=t("p"),Qn=u("출력 예시"),Vn=o(),Y=t("pre"),Wn=o(),v=t("details"),W=t("summary"),Zn=u("정답"),$n=o(),H=t("pre"),ns=o(),Z=t("p"),ss=u("getKorean 함수는 배열의 인덱스를 이용하면 훨씬 간단하게 구현 가능합니다."),fn=o(),bn=t("br"),wn=o(),l=t("details"),$=t("summary"),as=u("예제 4 [Math Module]"),ts=o(),nn=t("p"),K=t("img"),ps=o(),sn=t("p"),es=u("님들 미분적분학에서 배울거^^"),os=o(),E=t("p"),cs=u("극좌표계는 위 그림과 같이, 반지름r과 각(θ)으로 표현된다. "),ls=t("br"),rs=u(`
r은 극(원점)에서의 거리를 의미하고, `),us=t("br"),ks=u(`
θ는 0°(직교 좌표계의 x축 양의 방향에 해당)에서의 각도를 의미한다. `),is=t("br"),ds=o(),_=t("p"),ms=u("극좌표계에 위치한 한 점(r, θ)을 "),ys=t("br"),fs=u(`
직교 좌표계의 한 점(x, y)으로 바꾸기 위한 공식은 다음과 같다.`),bs=t("br"),ws=u(`
𝑥= 𝑟cos⁡𝜃`),gs=t("br"),_s=u(`
𝑦= 𝑟sin⁡𝜃`),vs=o(),B=t("p"),Es=u("사용자로부터 반지름(r), 각도(°)를 입력받아 입력한 위치에 해당하는 "),hs=t("br"),Ms=u(`
극좌표계의 점을 직교좌표계의 좌표(x, y)로 출력하는 프로그램을 작성하시오.`),Rs=o(),an=t("p"),xs=u("입력 예시"),Ps=o(),q=t("pre"),Ss=o(),tn=t("p"),Bs=u("츨력 예시"),Ts=o(),F=t("pre"),As=o(),Ls=t("br"),Ds=o(),R=t("details"),pn=t("summary"),Is=u("정답"),Us=o(),C=t("pre"),this.h()},l(a){f=p(a,"IFRAME",{width:!0,height:!0,src:!0,title:!0,frameborder:!0,allow:!0}),e(f).forEach(s),en=c(a),on=p(a,"BR",{}),cn=p(a,"BR",{}),ln=c(a),w=p(a,"DETAILS",{markdown:!0});var r=e(w);X=p(r,"SUMMARY",{});var Fs=e(X);Mn=k(Fs,"예제 1 [tkinter]"),Fs.forEach(s),Rn=c(r),S=p(r,"P",{});var gn=e(S);xn=k(gn,"Drag&Drop이 가능한 tkinter button을 설계합니다"),Pn=p(gn,"BR",{}),Sn=k(gn,`
Drag event :`),gn.forEach(s),Bn=c(r),Tn=p(r,"BR",{}),An=c(r),h=p(r,"DETAILS",{markdown:!0});var _n=e(h);z=p(_n,"SUMMARY",{});var Cs=e(z);Ln=k(Cs,"정답"),Cs.forEach(s),Dn=c(_n),A=p(_n,"PRE",{class:!0});var da=e(A);da.forEach(s),_n.forEach(s),r.forEach(s),rn=c(a),un=p(a,"BR",{}),kn=c(a),g=p(a,"DETAILS",{markdown:!0});var x=e(g);N=p(x,"SUMMARY",{});var Gs=e(N);In=k(Gs,"예제 2 [String Method]"),Gs.forEach(s),Un=c(x),L=p(x,"P",{});var Ys=e(L);Yn=k(Ys,"아래 구문을 실행하였을 때 어떤 결과가 출력될 지 예상하시오"),Hn=p(Ys,"BR",{}),Ys.forEach(s),Kn=c(x),D=p(x,"PRE",{class:!0});var ma=e(D);ma.forEach(s),qn=c(x),M=p(x,"DETAILS",{markdown:!0});var vn=e(M);j=p(vn,"SUMMARY",{});var Xs=e(j);Fn=k(Xs,"정답"),Xs.forEach(s),Cn=c(vn),I=p(vn,"PRE",{class:!0});var ya=e(I);ya.forEach(s),vn.forEach(s),x.forEach(s),dn=c(a),mn=p(a,"BR",{}),yn=c(a),m=p(a,"DETAILS",{markdown:!0});var b=e(m);J=p(b,"SUMMARY",{});var zs=e(J);Gn=k(zs,"예제 3 [Conditional Statement]"),zs.forEach(s),Xn=c(b),O=p(b,"P",{});var Ns=e(O);zn=k(Ns,"한 자리수 또는 두 자리수 자연수를 입력받아 이를 한글로 표기하는 코드를 작성하시오."),Ns.forEach(s),Nn=c(b),Q=p(b,"P",{});var js=e(Q);jn=k(js,"입력 예시"),js.forEach(s),Jn=c(b),U=p(b,"PRE",{class:!0});var fa=e(U);fa.forEach(s),On=c(b),V=p(b,"P",{});var Js=e(V);Qn=k(Js,"출력 예시"),Js.forEach(s),Vn=c(b),Y=p(b,"PRE",{class:!0});var ba=e(Y);ba.forEach(s),Wn=c(b),v=p(b,"DETAILS",{markdown:!0});var G=e(v);W=p(G,"SUMMARY",{});var Os=e(W);Zn=k(Os,"정답"),Os.forEach(s),$n=c(G),H=p(G,"PRE",{class:!0});var wa=e(H);wa.forEach(s),ns=c(G),Z=p(G,"P",{});var Qs=e(Z);ss=k(Qs,"getKorean 함수는 배열의 인덱스를 이용하면 훨씬 간단하게 구현 가능합니다."),Qs.forEach(s),G.forEach(s),b.forEach(s),fn=c(a),bn=p(a,"BR",{}),wn=c(a),l=p(a,"DETAILS",{markdown:!0});var d=e(l);$=p(d,"SUMMARY",{});var Vs=e($);as=k(Vs,"예제 4 [Math Module]"),Vs.forEach(s),ts=c(d),nn=p(d,"P",{});var Ws=e(nn);K=p(Ws,"IMG",{src:!0,alt:!0}),Ws.forEach(s),ps=c(d),sn=p(d,"P",{});var Zs=e(sn);es=k(Zs,"님들 미분적분학에서 배울거^^"),Zs.forEach(s),os=c(d),E=p(d,"P",{});var T=e(E);cs=k(T,"극좌표계는 위 그림과 같이, 반지름r과 각(θ)으로 표현된다. "),ls=p(T,"BR",{}),rs=k(T,`
r은 극(원점)에서의 거리를 의미하고, `),us=p(T,"BR",{}),ks=k(T,`
θ는 0°(직교 좌표계의 x축 양의 방향에 해당)에서의 각도를 의미한다. `),is=p(T,"BR",{}),T.forEach(s),ds=c(d),_=p(d,"P",{});var P=e(_);ms=k(P,"극좌표계에 위치한 한 점(r, θ)을 "),ys=p(P,"BR",{}),fs=k(P,`
직교 좌표계의 한 점(x, y)으로 바꾸기 위한 공식은 다음과 같다.`),bs=p(P,"BR",{}),ws=k(P,`
𝑥= 𝑟cos⁡𝜃`),gs=p(P,"BR",{}),_s=k(P,`
𝑦= 𝑟sin⁡𝜃`),P.forEach(s),vs=c(d),B=p(d,"P",{});var En=e(B);Es=k(En,"사용자로부터 반지름(r), 각도(°)를 입력받아 입력한 위치에 해당하는 "),hs=p(En,"BR",{}),Ms=k(En,`
극좌표계의 점을 직교좌표계의 좌표(x, y)로 출력하는 프로그램을 작성하시오.`),En.forEach(s),Rs=c(d),an=p(d,"P",{});var $s=e(an);xs=k($s,"입력 예시"),$s.forEach(s),Ps=c(d),q=p(d,"PRE",{class:!0});var ga=e(q);ga.forEach(s),Ss=c(d),tn=p(d,"P",{});var na=e(tn);Bs=k(na,"츨력 예시"),na.forEach(s),Ts=c(d),F=p(d,"PRE",{class:!0});var _a=e(F);_a.forEach(s),As=c(d),Ls=p(d,"BR",{}),Ds=c(d),R=p(d,"DETAILS",{markdown:!0});var hn=e(R);pn=p(hn,"SUMMARY",{});var sa=e(pn);Is=k(sa,"정답"),sa.forEach(s),Us=c(hn),C=p(hn,"PRE",{class:!0});var va=e(C);va.forEach(s),hn.forEach(s),d.forEach(s),this.h()},h(){i(f,"width","800"),i(f,"height","500"),aa(f.src,Ks="https://www.youtube.com/embed/zXF6vrFqjmE")||i(f,"src",Ks),i(f,"title","YouTube video player"),i(f,"frameborder","0"),i(f,"allow","accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"),f.allowFullscreen=!0,i(A,"class","language-python"),i(h,"markdown","1"),i(w,"markdown","1"),i(D,"class","language-python"),i(I,"class","language-python"),i(M,"markdown","1"),i(g,"markdown","1"),i(U,"class","language-python"),i(Y,"class","language-python"),i(H,"class","language-python"),i(v,"markdown","1"),i(m,"markdown","1"),aa(K.src,qs="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR1p569xyGBCJcMoVoo7-7L2-XNOexkDQ5niw&usqp=CAU")||i(K,"src",qs),i(K,"alt","Polar"),i(q,"class","language-python"),i(F,"class","language-python"),i(C,"class","language-python"),i(R,"markdown","1"),i(l,"markdown","1")},m(a,r){y(a,f,r),y(a,en,r),y(a,on,r),y(a,cn,r),y(a,ln,r),y(a,w,r),n(w,X),n(X,Mn),n(w,Rn),n(w,S),n(S,xn),n(S,Pn),n(S,Sn),n(w,Bn),n(w,Tn),n(w,An),n(w,h),n(h,z),n(z,Ln),n(h,Dn),n(h,A),A.innerHTML=pa,y(a,rn,r),y(a,un,r),y(a,kn,r),y(a,g,r),n(g,N),n(N,In),n(g,Un),n(g,L),n(L,Yn),n(L,Hn),n(g,Kn),n(g,D),D.innerHTML=ea,n(g,qn),n(g,M),n(M,j),n(j,Fn),n(M,Cn),n(M,I),I.innerHTML=oa,y(a,dn,r),y(a,mn,r),y(a,yn,r),y(a,m,r),n(m,J),n(J,Gn),n(m,Xn),n(m,O),n(O,zn),n(m,Nn),n(m,Q),n(Q,jn),n(m,Jn),n(m,U),U.innerHTML=ca,n(m,On),n(m,V),n(V,Qn),n(m,Vn),n(m,Y),Y.innerHTML=la,n(m,Wn),n(m,v),n(v,W),n(W,Zn),n(v,$n),n(v,H),H.innerHTML=ra,n(v,ns),n(v,Z),n(Z,ss),y(a,fn,r),y(a,bn,r),y(a,wn,r),y(a,l,r),n(l,$),n($,as),n(l,ts),n(l,nn),n(nn,K),n(l,ps),n(l,sn),n(sn,es),n(l,os),n(l,E),n(E,cs),n(E,ls),n(E,rs),n(E,us),n(E,ks),n(E,is),n(l,ds),n(l,_),n(_,ms),n(_,ys),n(_,fs),n(_,bs),n(_,ws),n(_,gs),n(_,_s),n(l,vs),n(l,B),n(B,Es),n(B,hs),n(B,Ms),n(l,Rs),n(l,an),n(an,xs),n(l,Ps),n(l,q),q.innerHTML=ua,n(l,Ss),n(l,tn),n(tn,Bs),n(l,Ts),n(l,F),F.innerHTML=ka,n(l,As),n(l,Ls),n(l,Ds),n(l,R),n(R,pn),n(pn,Is),n(R,Us),n(R,C),C.innerHTML=ia},p:Hs,i:Hs,o:Hs,d(a){a&&s(f),a&&s(en),a&&s(on),a&&s(cn),a&&s(ln),a&&s(w),a&&s(rn),a&&s(un),a&&s(kn),a&&s(g),a&&s(dn),a&&s(mn),a&&s(yn),a&&s(m),a&&s(fn),a&&s(bn),a&&s(wn),a&&s(l)}}}const Pa={title:"4. GUI Programming",date:"2022-04-01T00:00:00.000Z",excerpt:"implement GUI with tkinter",categories:["동아리교육"],coverImage:"/post_img/동아리교육/22-1_return_python/cover.png",coverWidth:16,coverHeight:9,indexed:!1,exposed:!1};class Sa extends Ea{constructor(f){super(),ha(this,f,null,Ra,Ma,{})}}export{Sa as default,Pa as metadata};
