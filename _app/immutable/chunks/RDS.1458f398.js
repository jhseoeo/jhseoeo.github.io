import{S as nf,i as rf,s as pf,k as a,q as u,a as o,y as k,l,m as r,h as e,r as c,c as i,z as E,n as f,b as p,E as s,A as m,M as of,g as v,d,B as _}from"./index.d78780bf.js";import{I as b}from"./Image.605b14b5.js";function ff(Gi){let R,G,vs,rn,Fs,hs,Js,Xt,pn,Xs,gt,on,gs,te,fn,ta,ea,sa,aa,V,U,ds,un,la,na,ra,Dt,pa,At,oa,Rt,ia,Tt,fa,Pt,ua,S,_s,cn,kn,ee,En,bs,mn,vn,$s,dn,_n,D,bn,Ss,$n,Sn,Ds,Dn,An,As,Rn,Tn,ca,se,yt,Pn,yn,wn,ka,wt,Ct,Cn,Bn,Ea,ma,va,Bt,da,_a,ba,$a,z,K,Rs,Hn,Sa,Da,Aa,Ht,Ra,Mt,Ta,Pa,ya,wa,Y,j,Ts,Mn,Ca,Ba,Ha,ae,Ln,Ma,La,qa,F,h,Ps,qn,xa,Lt,Oa,Za,Wa,J,X,ys,xn,Ia,qt,Na,le,On,Qa,ne,Zn,Ga,re,Wn,Va,g,ws,P,pe,In,Nn,oe,Qn,Gn,ie,Vn,Un,$,y,fe,zn,Kn,ue,Yn,jn,ce,Fn,hn,w,ke,Jn,Xn,Ee,gn,tr,me,er,sr,C,ve,ar,lr,tt,Cs,nr,rr,pr,or,et,Bs,ir,fr,ur,cr,B,de,kr,Er,_e,mr,vr,be,dr,_r,H,$e,br,$r,Se,Sr,Dr,De,Ar,Ua,za,Ka,st,at,Hs,Rr,Ya,xt,ja,Fa,ha,lt,nt,Ms,Tr,Ja,Ot,Xa,rt,Ls,M,ga,Pr,Ae,yr,wr,Re,Cr,Br,L,q,qs,Hr,Mr,Te,Lr,qr,Pe,xr,Or,x,xs,Zr,Wr,ye,Ir,Nr,we,Qr,Gr,O,Os,Vr,Ur,Ce,zr,Kr,Be,Yr,tl,pt,Zs,Z,el,jr,He,Fr,hr,Me,Jr,Xr,A,W,Ws,gr,tp,Le,ep,sp,qe,ap,lp,I,Is,np,rp,xe,pp,op,Oe,ip,fp,N,Ns,up,cp,Ze,kp,Ep,We,mp,vp,Q,Qs,dp,_p,Ie,bp,$p,Ne,Sp,sl,al,ll,ot,it,Gs,Dp,nl,Zt,rl,Wt,pl,Qe,Ap,ol,Ge,Rp,il,fl,ul,cl,ft,ut,Vs,Tp,kl,Ve,Pp,El,ml,vl,ct,kt,Us,yp,dl,Ue,wp,_l,ze,Cp,bl,It,Vi=`<code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> update
<span class="token function">sudo</span> <span class="token function">apt-get</span> upgrade
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> postgresql-client</code>`,$l,Ke,Bp,Sl,Nt,Ui=`<code class="language-bash">psql <span class="token punctuation"></span>
<span class="token parameter variable">--host</span><span class="token operator">=</span><span class="token operator">&lt;</span>엔드포인트<span class="token operator">></span> <span class="token punctuation"></span>
<span class="token parameter variable">--port</span><span class="token operator">=</span><span class="token operator">&lt;</span>포트번호<span class="token operator">></span> <span class="token punctuation"></span>
<span class="token parameter variable">--username</span><span class="token operator">=</span><span class="token operator">&lt;</span>사용자명<span class="token operator">></span> <span class="token punctuation"></span>
<span class="token parameter variable">--password</span> <span class="token punctuation"></span>
<span class="token parameter variable">--dbname</span><span class="token operator">=</span>postgres</code>`,Dl,Ye,zs,Hp,Al,Rl,Tl,je,Mp,Pl,Qt,zi=`<code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">database</span> mydb<span class="token punctuation">;</span>
q<span class="token punctuation">;</span></code>`,yl,Gt,Ki=`<code class="language-bash">psql <span class="token punctuation"></span>
<span class="token parameter variable">--host</span><span class="token operator">=</span><span class="token operator">&lt;</span>엔드포인트<span class="token operator">></span> <span class="token punctuation"></span>
<span class="token parameter variable">--port</span><span class="token operator">=</span><span class="token operator">&lt;</span>포트번호<span class="token operator">></span> <span class="token punctuation"></span>
<span class="token parameter variable">--username</span><span class="token operator">=</span><span class="token operator">&lt;</span>사용자명<span class="token operator">></span> <span class="token punctuation"></span>
<span class="token parameter variable">--password</span> <span class="token punctuation"></span>
<span class="token parameter variable">--dbname</span><span class="token operator">=</span>mydb</code>`,wl,Vt,Yi=`<code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">table</span> mytable <span class="token punctuation">(</span>
    id <span class="token keyword">int</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>
    name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">insert</span> <span class="token keyword">into</span> mytable <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'ㅎㅇ'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>`,Cl,Bl,Hl,Et,Ut,Lp,Ks,qp,xp,Op,Fe,ji=`<code class="language-bash">psql <span class="token punctuation"></span>
<span class="token parameter variable">--host</span><span class="token operator">=</span><span class="token operator">&lt;</span>엔드포인트<span class="token operator">></span> <span class="token punctuation"></span>
<span class="token parameter variable">--port</span><span class="token operator">=</span><span class="token operator">&lt;</span>포트번호<span class="token operator">></span> <span class="token punctuation"></span>
<span class="token parameter variable">--username</span><span class="token operator">=</span><span class="token operator">&lt;</span>사용자명<span class="token operator">></span> <span class="token punctuation"></span>
<span class="token parameter variable">--password</span> <span class="token punctuation"></span>
<span class="token parameter variable">--dbname</span><span class="token operator">=</span>mydb</code>`,Ml,zt,Fi='<code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> mytable<span class="token punctuation">;</span></code>',Ll,ql,xl,mt,vt,Ys,Zp,Ol,Kt,Yt,Wp,Ip,Zl,jt,Wl,he,Np,Il,Ft,Nl,Ql,Gl,Je,Qp,Vl,ht,Ul,zl,Kl,Yl,dt,_t,js,Gp,jl,Xe,Vp,Fl,Jt,hi=`<code class="language-python"><span class="token keyword">from</span> sqlalchemy <span class="token keyword">import</span> create_engine
<span class="token keyword">from</span> dotenv <span class="token keyword">import</span> load_dotenv
<span class="token keyword">from</span> sqlalchemy<span class="token punctuation">.</span>orm <span class="token keyword">import</span> sessionmaker
<span class="token keyword">import</span> os

load_dotenv<span class="token punctuation">(</span><span class="token punctuation">)</span>

HOST <span class="token operator">=</span> os<span class="token punctuation">.</span>environ<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"DB_HOST"</span><span class="token punctuation">)</span>
PORT <span class="token operator">=</span> os<span class="token punctuation">.</span>environ<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"DB_PORT"</span><span class="token punctuation">)</span>
ID <span class="token operator">=</span> os<span class="token punctuation">.</span>environ<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"DB_ID"</span><span class="token punctuation">)</span>
PW <span class="token operator">=</span> os<span class="token punctuation">.</span>environ<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"DB_PW"</span><span class="token punctuation">)</span>
DB <span class="token operator">=</span> os<span class="token punctuation">.</span>environ<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"DB_DB"</span><span class="token punctuation">)</span>

URL <span class="token operator">=</span> <span class="token string">"postgresql://&#123;&#125;:&#123;&#125;@&#123;&#125;:&#123;&#125;/&#123;&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>ID<span class="token punctuation">,</span> PW<span class="token punctuation">,</span> HOST<span class="token punctuation">,</span> PORT<span class="token punctuation">,</span> DB<span class="token punctuation">)</span>

db <span class="token operator">=</span> create_engine<span class="token punctuation">(</span>URL<span class="token punctuation">)</span>
Session <span class="token operator">=</span> sessionmaker<span class="token punctuation">(</span>db<span class="token punctuation">)</span>
session <span class="token operator">=</span> Session<span class="token punctuation">(</span><span class="token punctuation">)</span>

rows <span class="token operator">=</span> session<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token string">"SELECT * FROM mytable"</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> row <span class="token keyword">in</span> rows<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span>

session<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span></code>`,hl,ge,Up,Jl;return Dt=new b({props:{alt:" ",src:"/post_img/Cloud/AWS/RDS/2023-01-06-17-49-45.png"}}),At=new b({props:{alt:" ",src:"/post_img/Cloud/AWS/RDS/2023-01-06-17-50-27.png"}}),Rt=new b({props:{alt:" ",src:"/post_img/Cloud/AWS/RDS/2023-01-06-18-02-47.png"}}),Tt=new b({props:{alt:" ",src:"/post_img/Cloud/AWS/RDS/2023-01-06-18-05-11.png"}}),Pt=new b({props:{alt:" ",src:"/post_img/Cloud/AWS/RDS/2023-01-06-18-05-37.png"}}),Bt=new b({props:{alt:" ",src:"/post_img/Cloud/AWS/RDS/2023-01-06-17-45-50.png"}}),Ht=new b({props:{alt:" ",src:"/post_img/Cloud/AWS/RDS/2023-01-06-14-20-02.png"}}),Mt=new b({props:{alt:" ",src:"/post_img/Cloud/AWS/RDS/2023-01-06-14-20-57.png"}}),Lt=new b({props:{alt:" ",src:"/post_img/Cloud/AWS/RDS/2023-01-06-12-24-05.png"}}),qt=new b({props:{alt:" ",src:"/post_img/Cloud/AWS/RDS/2023-01-06-12-05-06.png"}}),xt=new b({props:{alt:" ",src:"/post_img/Cloud/AWS/RDS/2023-01-06-14-32-43.png"}}),Ot=new b({props:{alt:" ",src:"/post_img/Cloud/AWS/RDS/2023-01-06-14-35-07.png"}}),Zt=new b({props:{alt:" ",src:"/post_img/Cloud/AWS/RDS/2023-01-06-14-41-18.png"}}),Wt=new b({props:{alt:" ",src:"/post_img/Cloud/AWS/RDS/2023-01-06-14-43-59.png"}}),jt=new b({props:{alt:" ",src:"/post_img/Cloud/AWS/RDS/2023-01-06-20-57-47.png"}}),Ft=new b({props:{alt:" ",src:"/post_img/Cloud/AWS/RDS/2023-01-06-20-59-27.png"}}),ht=new b({props:{alt:" ",src:"/post_img/Cloud/AWS/RDS/2023-01-06-21-07-07.png"}}),{c(){R=a("h2"),G=a("a"),vs=a("span"),rn=u("RDS란?"),Fs=o(),hs=a("hr"),Js=o(),Xt=a("p"),pn=u("RDS는 MySQL, PostgreSQL, Oracle, Microsoft SQL Server, Amazon Aurora와 같은 다양한 데이터베이스 엔진을 클라우드 환경에서 쉽게 구축, 운영, 확장할 수 있도록 지원하는 Amazon Web Services의 관리형 관계형 데이터베이스 서비스이다."),Xs=o(),gt=a("p"),on=u("데이터베이스 인스턴스를 생성하고 구성하는 프로세스를 자동화함으로써 개발자와 시스템 관리자가 데이터베이스를 관리하는 데 필요한 대부분의 작업을 간소화한다. 또한 백업, 복원, 패치, 모니터링 및 확장과 같은 관리 작업을 수행하는 데 필요한 다양한 기능을 제공한다."),gs=o(),te=a("p"),fn=u("이 뿐만 아니라 RDS는 보안, 가용성, 확장성 등에 대한 기본적인 지원을 제공하기 때문에 사용자가 애플리케이션에 필요한 데이터베이스 서비스를 쉽게 사용할 수 있다. 이러한 요소들로 인해 RDS는 클라우드 환경에서 안전하고 신뢰할 수 있는 데이터베이스가 된다."),ta=o(),ea=a("br"),sa=a("br"),aa=o(),V=a("h2"),U=a("a"),ds=a("span"),un=u("VPC 설정"),la=o(),na=a("hr"),ra=o(),k(Dt.$$.fragment),pa=o(),k(At.$$.fragment),oa=o(),k(Rt.$$.fragment),ia=o(),k(Tt.$$.fragment),fa=o(),k(Pt.$$.fragment),ua=o(),S=a("ul"),_s=a("li"),cn=u("VPC"),kn=o(),ee=a("li"),En=u("서로 다른 AZ의 Subnet "),bs=a("em"),mn=u("세 개"),vn=o(),$s=a("li"),dn=u("Internet Gateway"),_n=o(),D=a("li"),bn=u("인바운드 포트로 "),Ss=a("code"),$n=u("22"),Sn=u(", "),Ds=a("code"),Dn=u("80"),An=u(", "),As=a("code"),Rn=u("25432"),Tn=u(" 세 개 뚫어놓은 Security Group"),ca=o(),se=a("blockquote"),yt=a("p"),Pn=u("rds cluster를 만들 때 서로 다른 AZ에 속하는 subnet이 최소 세 개 필요"),yn=a("br"),wn=u(`
5432가 postgresql 기본 포트이고, 25432는 추후 연결시 변경한 포트`),ka=o(),wt=a("p"),Ct=a("a"),Cn=u("여기를 참조하여"),Bn=u(" VPC는 위와 같이 세팅해놓았다."),Ea=o(),ma=a("br"),va=o(),k(Bt.$$.fragment),da=u(`
만들어진 vpc에 Actions > Edit VPC settings 해서 DNS setting을 모두 체크해주었다. 아마 Public Access할 때 필요한 옵션이다.
`),_a=a("br"),ba=a("br"),$a=o(),z=a("h2"),K=a("a"),Rs=a("span"),Hn=u("EC2 Instance 생성"),Sa=o(),Da=a("hr"),Aa=o(),k(Ht.$$.fragment),Ra=o(),k(Mt.$$.fragment),Ta=u(`  
EC2 특이사항은 없고 생성할 때 VPC, SG에 등록해준다.
`),Pa=a("br"),ya=a("br"),wa=o(),Y=a("h2"),j=a("a"),Ts=a("span"),Mn=u("RDS 생성"),Ca=o(),Ba=a("hr"),Ha=o(),ae=a("p"),Ln=u("주요 설정은 아래 사진과 같다."),Ma=o(),La=a("br"),qa=o(),F=a("h3"),h=a("a"),Ps=a("span"),qn=u("데이터베이스 버전"),xa=o(),k(Lt.$$.fragment),Oa=u(`  
PostgreSQL로 인스턴스를 생성할 것이며, 기본 버전인 PostgreSQL 13.7-R1로 생성하였다.
`),Za=a("br"),Wa=o(),J=a("h3"),X=a("a"),ys=a("span"),xn=u("Template 및 Availability"),Ia=o(),k(qt.$$.fragment),Na=u(`  
프로덕션용/개발용 여부인지에 따라서 Production이랑 Dev/Test 중 골라서 선택해주면 될 듯 하다.
`),le=a("p"),On=u("그 아래 Deployment options은 Multi-AZ cluster, Multi-AZ instance, single instance 세 개의 option이 있다."),Qa=o(),ne=a("p"),Zn=u("single instance는 당연히 하나의 인스턴스만 띄우는 것인데 반해, Multi-AZ가 붙은 옵션은 AZ에 문제가 생기는 경우를 상정하여 다른 AZ에 스탠바이 인스턴스를 띄운다."),Ga=o(),re=a("p"),Wn=u("multi-AZ cluster에서는 writer 인스턴스와 reader 인스턴스가 분리되어 있으며, 쓰기 작업은 writer 인스턴스, 읽기 작업은 reader 인스턴스에서 진행된다. 반면 Multi-AZ instance나 Single Instance에서는 하나의 인스턴스에서 읽기/쓰기가 모두 진행된다."),Va=o(),g=a("table"),ws=a("thead"),P=a("tr"),pe=a("th"),In=u("항목"),Nn=o(),oe=a("th"),Qn=u("Multi-AZ cluster"),Gn=o(),ie=a("th"),Vn=u("Multi-AZ instance"),Un=o(),$=a("tbody"),y=a("tr"),fe=a("td"),zn=u("인스턴스 타입"),Kn=o(),ue=a("td"),Yn=u("read/write 인스턴스 분리"),jn=o(),ce=a("td"),Fn=u("read/write 인스턴스 통합"),hn=o(),w=a("tr"),ke=a("td"),Jn=u("인스턴스 수"),Xn=o(),Ee=a("td"),gn=u("reader 2개 + writer 1개"),tr=o(),me=a("td"),er=u("active 1개 + standby 1개"),sr=o(),C=a("tr"),ve=a("td"),ar=u("비용"),lr=o(),tt=a("td"),Cs=a("strong"),nr=u("비쌈"),rr=a("br"),pr=u("($0.804 per hour)"),or=o(),et=a("td"),Bs=a("strong"),ir=u("덜 비쌈"),fr=a("br"),ur=u("($0.441 per hour)"),cr=o(),B=a("tr"),de=a("td"),kr=u("autoscaling"),Er=o(),_e=a("td"),mr=u("불가능"),vr=o(),be=a("td"),dr=u("가능"),_r=o(),H=a("tr"),$e=a("td"),br=u("언제 쓸까?"),$r=o(),Se=a("td"),Sr=u("서비스가 더 커질 것을 전망"),Dr=o(),De=a("td"),Ar=u("돈 아끼고 싶을 때"),Ua=o(),za=a("br"),Ka=o(),st=a("h3"),at=a("a"),Hs=a("span"),Rr=u("Authentification Settings"),Ya=o(),k(xt.$$.fragment),ja=u(`  
master username, master password를 설정해준다.
`),Fa=a("br"),ha=o(),lt=a("h3"),nt=a("a"),Ms=a("span"),Tr=u("Instance Type"),Ja=o(),k(Ot.$$.fragment),Xa=u(`
인스턴스 타입이나 스토리지 타입을 적절히 설정해준다. 마찬가지로 아래 표로 정리하였다.
`),rt=a("table"),Ls=a("thead"),M=a("tr"),ga=a("th"),Pr=o(),Ae=a("th"),yr=u("용도"),wr=o(),Re=a("th"),Cr=u("상황"),Br=o(),L=a("tbody"),q=a("tr"),qs=a("td"),Hr=u("db.m~"),Mr=o(),Te=a("td"),Lr=u("범용"),qr=o(),Pe=a("td"),xr=u("일반적인 경우"),Or=o(),x=a("tr"),xs=a("td"),Zr=u("db.r~"),Wr=o(),ye=a("td"),Ir=u("메모리 최적화"),Nr=o(),we=a("td"),Qr=u("저장하는 데이터가 많은 경우"),Gr=o(),O=a("tr"),Os=a("td"),Vr=u("db.t~"),Ur=o(),Ce=a("td"),zr=u("CPU 버스트"),Kr=o(),Be=a("td"),Yr=u("읽기/쓰기 빈도가 높은 경우"),tl=o(),pt=a("table"),Zs=a("thead"),Z=a("tr"),el=a("th"),jr=o(),He=a("th"),Fr=u("용도"),hr=o(),Me=a("th"),Jr=u("상황"),Xr=o(),A=a("tbody"),W=a("tr"),Ws=a("td"),gr=u("General Purpose SSD (gp2)"),tp=o(),Le=a("td"),ep=u("범용"),sp=o(),qe=a("td"),ap=u("일반적인 경우"),lp=o(),I=a("tr"),Is=a("td"),np=u("General Purpose SSD (gp3)"),rp=o(),xe=a("td"),pp=u("범용 + 확장성"),op=o(),Oe=a("td"),ip=u("일반적인 경우 + 확장 가능성"),fp=o(),N=a("tr"),Ns=a("td"),up=u("Provisioned IOPS (io)"),cp=o(),Ze=a("td"),kp=u("I/O 최적화"),Ep=o(),We=a("td"),mp=u("읽기/쓰기 빈도가 높은 경우"),vp=o(),Q=a("tr"),Qs=a("td"),dp=u("Magnetic"),_p=o(),Ie=a("td"),bp=u("Deprecated"),$p=o(),Ne=a("td"),Sp=u("쓰지마세용"),sl=o(),al=a("br"),ll=o(),ot=a("h3"),it=a("a"),Gs=a("span"),Dp=u("Connectivity"),nl=o(),k(Zt.$$.fragment),rl=o(),k(Wt.$$.fragment),pl=u(`
EC2에 직접 연결을 하면 public access가 블록된다. public access를 허용하려면 EC2에 연결하지 않고 public access를 허용해주면 되며, VPC 및 SG를 설정해주면 EC2에서도 연결이 가능하다. 추가로 사진엔 반영되지 않았는데 포트까지 25432로 변경해보았다.
`),Qe=a("p"),Ap=u("additional configuration에 cloudwatch 설정같은 것도 있는 듯 하니, 필요하다면 설정해도 될 듯 하다."),ol=o(),Ge=a("p"),Rp=u("이후 인스턴스를 생성하면 얼마 후 연결이 가능할 것이다."),il=o(),fl=a("br"),ul=a("br"),cl=o(),ft=a("h2"),ut=a("a"),Vs=a("span"),Tp=u("RDS 접속"),kl=o(),Ve=a("p"),Pp=u("이제 접속이 잘 되는지 확인해보자."),El=o(),ml=a("hr"),vl=o(),ct=a("h3"),kt=a("a"),Us=a("span"),yp=u("(EC2에서) RDS 연결"),dl=o(),Ue=a("p"),wp=u("만약 public access를 활성화했다면 로컬에서도 연결이 가능하다. 비활성화 했다면 EC2에서만 접근이 가능하다."),_l=o(),ze=a("p"),Cp=u("우선 EC2 인스턴스에 postgresql client를 설치해주자. postgresql client가 설치되어 있다면 이 과정은 생략해도 좋다."),bl=o(),It=a("pre"),$l=o(),Ke=a("p"),Bp=u(`rds 인스턴스의 접속 엔드포인트를 확인한 후, 다음과 같은 명령어로 rds 인스턴스에 접속한다.
만약 인스턴스를 생성할 때 Multi-AZ cluster로 생성하였다면 writer의 엔드포인트로 접속해야 한다.`),Sl=o(),Nt=a("pre"),Dl=o(),Ye=a("blockquote"),zs=a("p"),Hp=u("dbname의 postgres는 PostgreSQL의 마스터 유저로, 초기 접속시에는 postgres로 접속해야 한다."),Al=o(),Rl=a("br"),Tl=o(),je=a("p"),Mp=u("접속했다면, 데이터베이스를 생성하고 다시 접속하여 테스트 데이터를 만들어보자."),Pl=o(),Qt=a("pre"),yl=o(),Gt=a("pre"),wl=o(),Vt=a("pre"),Cl=o(),Bl=a("br"),Hl=o(),Et=a("blockquote"),Ut=a("p"),Lp=u("Multi-AZ cluster라면 "),Ks=a("code"),qp=u("\\q"),xp=u("로 나간 후 reader로 재접속하여 endpoint로 rds에 접속해서 확인해보자."),Op=o(),Fe=a("pre"),Ml=o(),zt=a("pre"),Ll=o(),ql=a("br"),xl=o(),mt=a("h3"),vt=a("a"),Ys=a("span"),Zp=u("gui tools"),Ol=o(),Kt=a("p"),Yt=a("a"),Wp=u("어느 블로그 포스트"),Ip=u("를 보니 모니터링 툴 중 TablePlus란 게 그렇게 좋다고 한다. 써보니 우분투는 아직 알파 릴리즈라 오류가 좀 나는 듯."),Zl=o(),k(jt.$$.fragment),Wl=o(),he=a("p"),Np=u("보이는 필드들을 모두 채워주면 된다."),Il=o(),k(Ft.$$.fragment),Nl=o(),Ql=a("br"),Gl=o(),Je=a("p"),Qp=u("접속하고 나서 이것저것 시도해보니 이렇게 데이터를 보여줍니다."),Vl=o(),k(ht.$$.fragment),Ul=o(),zl=a("br"),Kl=a("br"),Yl=o(),dt=a("h3"),_t=a("a"),js=a("span"),Gp=u("ORM 연결"),jl=o(),Xe=a("p"),Vp=u("ORM으로 Python의 SQL Alchemy를 써서 연결해보았다."),Fl=o(),Jt=a("pre"),hl=o(),ge=a("p"),Up=u("모델 코드 짜기 귀찮아서 로우쿼리 날렸는데 잘 받아와진다."),this.h()},l(t){R=l(t,"H2",{id:!0});var n=r(R);G=l(n,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var ro=r(G);vs=l(ro,"SPAN",{class:!0}),r(vs).forEach(e),ro.forEach(e),rn=c(n,"RDS란?"),n.forEach(e),Fs=i(t),hs=l(t,"HR",{}),Js=i(t),Xt=l(t,"P",{});var po=r(Xt);pn=c(po,"RDS는 MySQL, PostgreSQL, Oracle, Microsoft SQL Server, Amazon Aurora와 같은 다양한 데이터베이스 엔진을 클라우드 환경에서 쉽게 구축, 운영, 확장할 수 있도록 지원하는 Amazon Web Services의 관리형 관계형 데이터베이스 서비스이다."),po.forEach(e),Xs=i(t),gt=l(t,"P",{});var oo=r(gt);on=c(oo,"데이터베이스 인스턴스를 생성하고 구성하는 프로세스를 자동화함으로써 개발자와 시스템 관리자가 데이터베이스를 관리하는 데 필요한 대부분의 작업을 간소화한다. 또한 백업, 복원, 패치, 모니터링 및 확장과 같은 관리 작업을 수행하는 데 필요한 다양한 기능을 제공한다."),oo.forEach(e),gs=i(t),te=l(t,"P",{});var io=r(te);fn=c(io,"이 뿐만 아니라 RDS는 보안, 가용성, 확장성 등에 대한 기본적인 지원을 제공하기 때문에 사용자가 애플리케이션에 필요한 데이터베이스 서비스를 쉽게 사용할 수 있다. 이러한 요소들로 인해 RDS는 클라우드 환경에서 안전하고 신뢰할 수 있는 데이터베이스가 된다."),io.forEach(e),ta=i(t),ea=l(t,"BR",{}),sa=l(t,"BR",{}),aa=i(t),V=l(t,"H2",{id:!0});var zp=r(V);U=l(zp,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var fo=r(U);ds=l(fo,"SPAN",{class:!0}),r(ds).forEach(e),fo.forEach(e),un=c(zp,"VPC 설정"),zp.forEach(e),la=i(t),na=l(t,"HR",{}),ra=i(t),E(Dt.$$.fragment,t),pa=i(t),E(At.$$.fragment,t),oa=i(t),E(Rt.$$.fragment,t),ia=i(t),E(Tt.$$.fragment,t),fa=i(t),E(Pt.$$.fragment,t),ua=i(t),S=l(t,"UL",{});var bt=r(S);_s=l(bt,"LI",{});var uo=r(_s);cn=c(uo,"VPC"),uo.forEach(e),kn=i(bt),ee=l(bt,"LI",{});var Kp=r(ee);En=c(Kp,"서로 다른 AZ의 Subnet "),bs=l(Kp,"EM",{});var co=r(bs);mn=c(co,"세 개"),co.forEach(e),Kp.forEach(e),vn=i(bt),$s=l(bt,"LI",{});var ko=r($s);dn=c(ko,"Internet Gateway"),ko.forEach(e),_n=i(bt),D=l(bt,"LI",{});var $t=r(D);bn=c($t,"인바운드 포트로 "),Ss=l($t,"CODE",{});var Eo=r(Ss);$n=c(Eo,"22"),Eo.forEach(e),Sn=c($t,", "),Ds=l($t,"CODE",{});var mo=r(Ds);Dn=c(mo,"80"),mo.forEach(e),An=c($t,", "),As=l($t,"CODE",{});var vo=r(As);Rn=c(vo,"25432"),vo.forEach(e),Tn=c($t," 세 개 뚫어놓은 Security Group"),$t.forEach(e),bt.forEach(e),ca=i(t),se=l(t,"BLOCKQUOTE",{});var _o=r(se);yt=l(_o,"P",{});var Xl=r(yt);Pn=c(Xl,"rds cluster를 만들 때 서로 다른 AZ에 속하는 subnet이 최소 세 개 필요"),yn=l(Xl,"BR",{}),wn=c(Xl,`
5432가 postgresql 기본 포트이고, 25432는 추후 연결시 변경한 포트`),Xl.forEach(e),_o.forEach(e),ka=i(t),wt=l(t,"P",{});var Yp=r(wt);Ct=l(Yp,"A",{href:!0,rel:!0});var bo=r(Ct);Cn=c(bo,"여기를 참조하여"),bo.forEach(e),Bn=c(Yp," VPC는 위와 같이 세팅해놓았다."),Yp.forEach(e),Ea=i(t),ma=l(t,"BR",{}),va=i(t),E(Bt.$$.fragment,t),da=c(t,`
만들어진 vpc에 Actions > Edit VPC settings 해서 DNS setting을 모두 체크해주었다. 아마 Public Access할 때 필요한 옵션이다.
`),_a=l(t,"BR",{}),ba=l(t,"BR",{}),$a=i(t),z=l(t,"H2",{id:!0});var jp=r(z);K=l(jp,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var $o=r(K);Rs=l($o,"SPAN",{class:!0}),r(Rs).forEach(e),$o.forEach(e),Hn=c(jp,"EC2 Instance 생성"),jp.forEach(e),Sa=i(t),Da=l(t,"HR",{}),Aa=i(t),E(Ht.$$.fragment,t),Ra=i(t),E(Mt.$$.fragment,t),Ta=c(t,`  
EC2 특이사항은 없고 생성할 때 VPC, SG에 등록해준다.
`),Pa=l(t,"BR",{}),ya=l(t,"BR",{}),wa=i(t),Y=l(t,"H2",{id:!0});var Fp=r(Y);j=l(Fp,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var So=r(j);Ts=l(So,"SPAN",{class:!0}),r(Ts).forEach(e),So.forEach(e),Mn=c(Fp,"RDS 생성"),Fp.forEach(e),Ca=i(t),Ba=l(t,"HR",{}),Ha=i(t),ae=l(t,"P",{});var Do=r(ae);Ln=c(Do,"주요 설정은 아래 사진과 같다."),Do.forEach(e),Ma=i(t),La=l(t,"BR",{}),qa=i(t),F=l(t,"H3",{id:!0});var hp=r(F);h=l(hp,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Ao=r(h);Ps=l(Ao,"SPAN",{class:!0}),r(Ps).forEach(e),Ao.forEach(e),qn=c(hp,"데이터베이스 버전"),hp.forEach(e),xa=i(t),E(Lt.$$.fragment,t),Oa=c(t,`  
PostgreSQL로 인스턴스를 생성할 것이며, 기본 버전인 PostgreSQL 13.7-R1로 생성하였다.
`),Za=l(t,"BR",{}),Wa=i(t),J=l(t,"H3",{id:!0});var Jp=r(J);X=l(Jp,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Ro=r(X);ys=l(Ro,"SPAN",{class:!0}),r(ys).forEach(e),Ro.forEach(e),xn=c(Jp,"Template 및 Availability"),Jp.forEach(e),Ia=i(t),E(qt.$$.fragment,t),Na=c(t,`  
프로덕션용/개발용 여부인지에 따라서 Production이랑 Dev/Test 중 골라서 선택해주면 될 듯 하다.
`),le=l(t,"P",{});var To=r(le);On=c(To,"그 아래 Deployment options은 Multi-AZ cluster, Multi-AZ instance, single instance 세 개의 option이 있다."),To.forEach(e),Qa=i(t),ne=l(t,"P",{});var Po=r(ne);Zn=c(Po,"single instance는 당연히 하나의 인스턴스만 띄우는 것인데 반해, Multi-AZ가 붙은 옵션은 AZ에 문제가 생기는 경우를 상정하여 다른 AZ에 스탠바이 인스턴스를 띄운다."),Po.forEach(e),Ga=i(t),re=l(t,"P",{});var yo=r(re);Wn=c(yo,"multi-AZ cluster에서는 writer 인스턴스와 reader 인스턴스가 분리되어 있으며, 쓰기 작업은 writer 인스턴스, 읽기 작업은 reader 인스턴스에서 진행된다. 반면 Multi-AZ instance나 Single Instance에서는 하나의 인스턴스에서 읽기/쓰기가 모두 진행된다."),yo.forEach(e),Va=i(t),g=l(t,"TABLE",{});var gl=r(g);ws=l(gl,"THEAD",{});var wo=r(ws);P=l(wo,"TR",{});var ts=r(P);pe=l(ts,"TH",{align:!0});var Co=r(pe);In=c(Co,"항목"),Co.forEach(e),Nn=i(ts),oe=l(ts,"TH",{align:!0});var Bo=r(oe);Qn=c(Bo,"Multi-AZ cluster"),Bo.forEach(e),Gn=i(ts),ie=l(ts,"TH",{align:!0});var Ho=r(ie);Vn=c(Ho,"Multi-AZ instance"),Ho.forEach(e),ts.forEach(e),wo.forEach(e),Un=i(gl),$=l(gl,"TBODY",{});var T=r($);y=l(T,"TR",{});var es=r(y);fe=l(es,"TD",{align:!0});var Mo=r(fe);zn=c(Mo,"인스턴스 타입"),Mo.forEach(e),Kn=i(es),ue=l(es,"TD",{align:!0});var Lo=r(ue);Yn=c(Lo,"read/write 인스턴스 분리"),Lo.forEach(e),jn=i(es),ce=l(es,"TD",{align:!0});var qo=r(ce);Fn=c(qo,"read/write 인스턴스 통합"),qo.forEach(e),es.forEach(e),hn=i(T),w=l(T,"TR",{});var ss=r(w);ke=l(ss,"TD",{align:!0});var xo=r(ke);Jn=c(xo,"인스턴스 수"),xo.forEach(e),Xn=i(ss),Ee=l(ss,"TD",{align:!0});var Oo=r(Ee);gn=c(Oo,"reader 2개 + writer 1개"),Oo.forEach(e),tr=i(ss),me=l(ss,"TD",{align:!0});var Zo=r(me);er=c(Zo,"active 1개 + standby 1개"),Zo.forEach(e),ss.forEach(e),sr=i(T),C=l(T,"TR",{});var as=r(C);ve=l(as,"TD",{align:!0});var Wo=r(ve);ar=c(Wo,"비용"),Wo.forEach(e),lr=i(as),tt=l(as,"TD",{align:!0});var tn=r(tt);Cs=l(tn,"STRONG",{});var Io=r(Cs);nr=c(Io,"비쌈"),Io.forEach(e),rr=l(tn,"BR",{}),pr=c(tn,"($0.804 per hour)"),tn.forEach(e),or=i(as),et=l(as,"TD",{align:!0});var en=r(et);Bs=l(en,"STRONG",{});var No=r(Bs);ir=c(No,"덜 비쌈"),No.forEach(e),fr=l(en,"BR",{}),ur=c(en,"($0.441 per hour)"),en.forEach(e),as.forEach(e),cr=i(T),B=l(T,"TR",{});var ls=r(B);de=l(ls,"TD",{align:!0});var Qo=r(de);kr=c(Qo,"autoscaling"),Qo.forEach(e),Er=i(ls),_e=l(ls,"TD",{align:!0});var Go=r(_e);mr=c(Go,"불가능"),Go.forEach(e),vr=i(ls),be=l(ls,"TD",{align:!0});var Vo=r(be);dr=c(Vo,"가능"),Vo.forEach(e),ls.forEach(e),_r=i(T),H=l(T,"TR",{});var ns=r(H);$e=l(ns,"TD",{align:!0});var Uo=r($e);br=c(Uo,"언제 쓸까?"),Uo.forEach(e),$r=i(ns),Se=l(ns,"TD",{align:!0});var zo=r(Se);Sr=c(zo,"서비스가 더 커질 것을 전망"),zo.forEach(e),Dr=i(ns),De=l(ns,"TD",{align:!0});var Ko=r(De);Ar=c(Ko,"돈 아끼고 싶을 때"),Ko.forEach(e),ns.forEach(e),T.forEach(e),gl.forEach(e),Ua=i(t),za=l(t,"BR",{}),Ka=i(t),st=l(t,"H3",{id:!0});var Xp=r(st);at=l(Xp,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Yo=r(at);Hs=l(Yo,"SPAN",{class:!0}),r(Hs).forEach(e),Yo.forEach(e),Rr=c(Xp,"Authentification Settings"),Xp.forEach(e),Ya=i(t),E(xt.$$.fragment,t),ja=c(t,`  
master username, master password를 설정해준다.
`),Fa=l(t,"BR",{}),ha=i(t),lt=l(t,"H3",{id:!0});var gp=r(lt);nt=l(gp,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var jo=r(nt);Ms=l(jo,"SPAN",{class:!0}),r(Ms).forEach(e),jo.forEach(e),Tr=c(gp,"Instance Type"),gp.forEach(e),Ja=i(t),E(Ot.$$.fragment,t),Xa=c(t,`
인스턴스 타입이나 스토리지 타입을 적절히 설정해준다. 마찬가지로 아래 표로 정리하였다.
`),rt=l(t,"TABLE",{});var sn=r(rt);Ls=l(sn,"THEAD",{});var Fo=r(Ls);M=l(Fo,"TR",{});var rs=r(M);ga=l(rs,"TH",{}),r(ga).forEach(e),Pr=i(rs),Ae=l(rs,"TH",{align:!0});var ho=r(Ae);yr=c(ho,"용도"),ho.forEach(e),wr=i(rs),Re=l(rs,"TH",{align:!0});var Jo=r(Re);Cr=c(Jo,"상황"),Jo.forEach(e),rs.forEach(e),Fo.forEach(e),Br=i(sn),L=l(sn,"TBODY",{});var ps=r(L);q=l(ps,"TR",{});var os=r(q);qs=l(os,"TD",{});var Xo=r(qs);Hr=c(Xo,"db.m~"),Xo.forEach(e),Mr=i(os),Te=l(os,"TD",{align:!0});var go=r(Te);Lr=c(go,"범용"),go.forEach(e),qr=i(os),Pe=l(os,"TD",{align:!0});var ti=r(Pe);xr=c(ti,"일반적인 경우"),ti.forEach(e),os.forEach(e),Or=i(ps),x=l(ps,"TR",{});var is=r(x);xs=l(is,"TD",{});var ei=r(xs);Zr=c(ei,"db.r~"),ei.forEach(e),Wr=i(is),ye=l(is,"TD",{align:!0});var si=r(ye);Ir=c(si,"메모리 최적화"),si.forEach(e),Nr=i(is),we=l(is,"TD",{align:!0});var ai=r(we);Qr=c(ai,"저장하는 데이터가 많은 경우"),ai.forEach(e),is.forEach(e),Gr=i(ps),O=l(ps,"TR",{});var fs=r(O);Os=l(fs,"TD",{});var li=r(Os);Vr=c(li,"db.t~"),li.forEach(e),Ur=i(fs),Ce=l(fs,"TD",{align:!0});var ni=r(Ce);zr=c(ni,"CPU 버스트"),ni.forEach(e),Kr=i(fs),Be=l(fs,"TD",{align:!0});var ri=r(Be);Yr=c(ri,"읽기/쓰기 빈도가 높은 경우"),ri.forEach(e),fs.forEach(e),ps.forEach(e),sn.forEach(e),tl=i(t),pt=l(t,"TABLE",{});var an=r(pt);Zs=l(an,"THEAD",{});var pi=r(Zs);Z=l(pi,"TR",{});var us=r(Z);el=l(us,"TH",{}),r(el).forEach(e),jr=i(us),He=l(us,"TH",{align:!0});var oi=r(He);Fr=c(oi,"용도"),oi.forEach(e),hr=i(us),Me=l(us,"TH",{align:!0});var ii=r(Me);Jr=c(ii,"상황"),ii.forEach(e),us.forEach(e),pi.forEach(e),Xr=i(an),A=l(an,"TBODY",{});var St=r(A);W=l(St,"TR",{});var cs=r(W);Ws=l(cs,"TD",{});var fi=r(Ws);gr=c(fi,"General Purpose SSD (gp2)"),fi.forEach(e),tp=i(cs),Le=l(cs,"TD",{align:!0});var ui=r(Le);ep=c(ui,"범용"),ui.forEach(e),sp=i(cs),qe=l(cs,"TD",{align:!0});var ci=r(qe);ap=c(ci,"일반적인 경우"),ci.forEach(e),cs.forEach(e),lp=i(St),I=l(St,"TR",{});var ks=r(I);Is=l(ks,"TD",{});var ki=r(Is);np=c(ki,"General Purpose SSD (gp3)"),ki.forEach(e),rp=i(ks),xe=l(ks,"TD",{align:!0});var Ei=r(xe);pp=c(Ei,"범용 + 확장성"),Ei.forEach(e),op=i(ks),Oe=l(ks,"TD",{align:!0});var mi=r(Oe);ip=c(mi,"일반적인 경우 + 확장 가능성"),mi.forEach(e),ks.forEach(e),fp=i(St),N=l(St,"TR",{});var Es=r(N);Ns=l(Es,"TD",{});var vi=r(Ns);up=c(vi,"Provisioned IOPS (io)"),vi.forEach(e),cp=i(Es),Ze=l(Es,"TD",{align:!0});var di=r(Ze);kp=c(di,"I/O 최적화"),di.forEach(e),Ep=i(Es),We=l(Es,"TD",{align:!0});var _i=r(We);mp=c(_i,"읽기/쓰기 빈도가 높은 경우"),_i.forEach(e),Es.forEach(e),vp=i(St),Q=l(St,"TR",{});var ms=r(Q);Qs=l(ms,"TD",{});var bi=r(Qs);dp=c(bi,"Magnetic"),bi.forEach(e),_p=i(ms),Ie=l(ms,"TD",{align:!0});var $i=r(Ie);bp=c($i,"Deprecated"),$i.forEach(e),$p=i(ms),Ne=l(ms,"TD",{align:!0});var Si=r(Ne);Sp=c(Si,"쓰지마세용"),Si.forEach(e),ms.forEach(e),St.forEach(e),an.forEach(e),sl=i(t),al=l(t,"BR",{}),ll=i(t),ot=l(t,"H3",{id:!0});var to=r(ot);it=l(to,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Di=r(it);Gs=l(Di,"SPAN",{class:!0}),r(Gs).forEach(e),Di.forEach(e),Dp=c(to,"Connectivity"),to.forEach(e),nl=i(t),E(Zt.$$.fragment,t),rl=i(t),E(Wt.$$.fragment,t),pl=c(t,`
EC2에 직접 연결을 하면 public access가 블록된다. public access를 허용하려면 EC2에 연결하지 않고 public access를 허용해주면 되며, VPC 및 SG를 설정해주면 EC2에서도 연결이 가능하다. 추가로 사진엔 반영되지 않았는데 포트까지 25432로 변경해보았다.
`),Qe=l(t,"P",{});var Ai=r(Qe);Ap=c(Ai,"additional configuration에 cloudwatch 설정같은 것도 있는 듯 하니, 필요하다면 설정해도 될 듯 하다."),Ai.forEach(e),ol=i(t),Ge=l(t,"P",{});var Ri=r(Ge);Rp=c(Ri,"이후 인스턴스를 생성하면 얼마 후 연결이 가능할 것이다."),Ri.forEach(e),il=i(t),fl=l(t,"BR",{}),ul=l(t,"BR",{}),cl=i(t),ft=l(t,"H2",{id:!0});var eo=r(ft);ut=l(eo,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Ti=r(ut);Vs=l(Ti,"SPAN",{class:!0}),r(Vs).forEach(e),Ti.forEach(e),Tp=c(eo,"RDS 접속"),eo.forEach(e),kl=i(t),Ve=l(t,"P",{});var Pi=r(Ve);Pp=c(Pi,"이제 접속이 잘 되는지 확인해보자."),Pi.forEach(e),El=i(t),ml=l(t,"HR",{}),vl=i(t),ct=l(t,"H3",{id:!0});var so=r(ct);kt=l(so,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var yi=r(kt);Us=l(yi,"SPAN",{class:!0}),r(Us).forEach(e),yi.forEach(e),yp=c(so,"(EC2에서) RDS 연결"),so.forEach(e),dl=i(t),Ue=l(t,"P",{});var wi=r(Ue);wp=c(wi,"만약 public access를 활성화했다면 로컬에서도 연결이 가능하다. 비활성화 했다면 EC2에서만 접근이 가능하다."),wi.forEach(e),_l=i(t),ze=l(t,"P",{});var Ci=r(ze);Cp=c(Ci,"우선 EC2 인스턴스에 postgresql client를 설치해주자. postgresql client가 설치되어 있다면 이 과정은 생략해도 좋다."),Ci.forEach(e),bl=i(t),It=l(t,"PRE",{class:!0});var Ji=r(It);Ji.forEach(e),$l=i(t),Ke=l(t,"P",{});var Bi=r(Ke);Bp=c(Bi,`rds 인스턴스의 접속 엔드포인트를 확인한 후, 다음과 같은 명령어로 rds 인스턴스에 접속한다.
만약 인스턴스를 생성할 때 Multi-AZ cluster로 생성하였다면 writer의 엔드포인트로 접속해야 한다.`),Bi.forEach(e),Sl=i(t),Nt=l(t,"PRE",{class:!0});var Xi=r(Nt);Xi.forEach(e),Dl=i(t),Ye=l(t,"BLOCKQUOTE",{});var Hi=r(Ye);zs=l(Hi,"P",{});var Mi=r(zs);Hp=c(Mi,"dbname의 postgres는 PostgreSQL의 마스터 유저로, 초기 접속시에는 postgres로 접속해야 한다."),Mi.forEach(e),Hi.forEach(e),Al=i(t),Rl=l(t,"BR",{}),Tl=i(t),je=l(t,"P",{});var Li=r(je);Mp=c(Li,"접속했다면, 데이터베이스를 생성하고 다시 접속하여 테스트 데이터를 만들어보자."),Li.forEach(e),Pl=i(t),Qt=l(t,"PRE",{class:!0});var gi=r(Qt);gi.forEach(e),yl=i(t),Gt=l(t,"PRE",{class:!0});var tf=r(Gt);tf.forEach(e),wl=i(t),Vt=l(t,"PRE",{class:!0});var ef=r(Vt);ef.forEach(e),Cl=i(t),Bl=l(t,"BR",{}),Hl=i(t),Et=l(t,"BLOCKQUOTE",{});var ln=r(Et);Ut=l(ln,"P",{});var nn=r(Ut);Lp=c(nn,"Multi-AZ cluster라면 "),Ks=l(nn,"CODE",{});var qi=r(Ks);qp=c(qi,"\\q"),qi.forEach(e),xp=c(nn,"로 나간 후 reader로 재접속하여 endpoint로 rds에 접속해서 확인해보자."),nn.forEach(e),Op=i(ln),Fe=l(ln,"PRE",{class:!0});var sf=r(Fe);sf.forEach(e),ln.forEach(e),Ml=i(t),zt=l(t,"PRE",{class:!0});var af=r(zt);af.forEach(e),Ll=i(t),ql=l(t,"BR",{}),xl=i(t),mt=l(t,"H3",{id:!0});var ao=r(mt);vt=l(ao,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var xi=r(vt);Ys=l(xi,"SPAN",{class:!0}),r(Ys).forEach(e),xi.forEach(e),Zp=c(ao,"gui tools"),ao.forEach(e),Ol=i(t),Kt=l(t,"P",{});var lo=r(Kt);Yt=l(lo,"A",{href:!0,rel:!0});var Oi=r(Yt);Wp=c(Oi,"어느 블로그 포스트"),Oi.forEach(e),Ip=c(lo,"를 보니 모니터링 툴 중 TablePlus란 게 그렇게 좋다고 한다. 써보니 우분투는 아직 알파 릴리즈라 오류가 좀 나는 듯."),lo.forEach(e),Zl=i(t),E(jt.$$.fragment,t),Wl=i(t),he=l(t,"P",{});var Zi=r(he);Np=c(Zi,"보이는 필드들을 모두 채워주면 된다."),Zi.forEach(e),Il=i(t),E(Ft.$$.fragment,t),Nl=i(t),Ql=l(t,"BR",{}),Gl=i(t),Je=l(t,"P",{});var Wi=r(Je);Qp=c(Wi,"접속하고 나서 이것저것 시도해보니 이렇게 데이터를 보여줍니다."),Wi.forEach(e),Vl=i(t),E(ht.$$.fragment,t),Ul=i(t),zl=l(t,"BR",{}),Kl=l(t,"BR",{}),Yl=i(t),dt=l(t,"H3",{id:!0});var no=r(dt);_t=l(no,"A",{"aria-hidden":!0,tabindex:!0,href:!0});var Ii=r(_t);js=l(Ii,"SPAN",{class:!0}),r(js).forEach(e),Ii.forEach(e),Gp=c(no,"ORM 연결"),no.forEach(e),jl=i(t),Xe=l(t,"P",{});var Ni=r(Xe);Vp=c(Ni,"ORM으로 Python의 SQL Alchemy를 써서 연결해보았다."),Ni.forEach(e),Fl=i(t),Jt=l(t,"PRE",{class:!0});var lf=r(Jt);lf.forEach(e),hl=i(t),ge=l(t,"P",{});var Qi=r(ge);Up=c(Qi,"모델 코드 짜기 귀찮아서 로우쿼리 날렸는데 잘 받아와진다."),Qi.forEach(e),this.h()},h(){f(vs,"class","icon icon-link"),f(G,"aria-hidden","true"),f(G,"tabindex","-1"),f(G,"href","#rds란"),f(R,"id","rds란"),f(ds,"class","icon icon-link"),f(U,"aria-hidden","true"),f(U,"tabindex","-1"),f(U,"href","#vpc-설정"),f(V,"id","vpc-설정"),f(Ct,"href","https://tech.cloud.nongshim.co.kr/2018/10/16/4-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EA%B5%AC%EC%84%B1%ED%95%98%EA%B8%B0vpc-subnet-route-table-internet-gateway/"),f(Ct,"rel","nofollow"),f(Rs,"class","icon icon-link"),f(K,"aria-hidden","true"),f(K,"tabindex","-1"),f(K,"href","#ec2-instance-생성"),f(z,"id","ec2-instance-생성"),f(Ts,"class","icon icon-link"),f(j,"aria-hidden","true"),f(j,"tabindex","-1"),f(j,"href","#rds-생성"),f(Y,"id","rds-생성"),f(Ps,"class","icon icon-link"),f(h,"aria-hidden","true"),f(h,"tabindex","-1"),f(h,"href","#데이터베이스-버전"),f(F,"id","데이터베이스-버전"),f(ys,"class","icon icon-link"),f(X,"aria-hidden","true"),f(X,"tabindex","-1"),f(X,"href","#template-및-availability"),f(J,"id","template-및-availability"),f(pe,"align","left"),f(oe,"align","center"),f(ie,"align","center"),f(fe,"align","left"),f(ue,"align","center"),f(ce,"align","center"),f(ke,"align","left"),f(Ee,"align","center"),f(me,"align","center"),f(ve,"align","left"),f(tt,"align","center"),f(et,"align","center"),f(de,"align","left"),f(_e,"align","center"),f(be,"align","center"),f($e,"align","left"),f(Se,"align","center"),f(De,"align","center"),f(Hs,"class","icon icon-link"),f(at,"aria-hidden","true"),f(at,"tabindex","-1"),f(at,"href","#authentification-settings"),f(st,"id","authentification-settings"),f(Ms,"class","icon icon-link"),f(nt,"aria-hidden","true"),f(nt,"tabindex","-1"),f(nt,"href","#instance-type"),f(lt,"id","instance-type"),f(Ae,"align","center"),f(Re,"align","center"),f(Te,"align","center"),f(Pe,"align","center"),f(ye,"align","center"),f(we,"align","center"),f(Ce,"align","center"),f(Be,"align","center"),f(He,"align","center"),f(Me,"align","center"),f(Le,"align","center"),f(qe,"align","center"),f(xe,"align","center"),f(Oe,"align","center"),f(Ze,"align","center"),f(We,"align","center"),f(Ie,"align","center"),f(Ne,"align","center"),f(Gs,"class","icon icon-link"),f(it,"aria-hidden","true"),f(it,"tabindex","-1"),f(it,"href","#connectivity"),f(ot,"id","connectivity"),f(Vs,"class","icon icon-link"),f(ut,"aria-hidden","true"),f(ut,"tabindex","-1"),f(ut,"href","#rds-접속"),f(ft,"id","rds-접속"),f(Us,"class","icon icon-link"),f(kt,"aria-hidden","true"),f(kt,"tabindex","-1"),f(kt,"href","#ec2에서-rds-연결"),f(ct,"id","ec2에서-rds-연결"),f(It,"class","language-bash"),f(Nt,"class","language-bash"),f(Qt,"class","language-sql"),f(Gt,"class","language-bash"),f(Vt,"class","language-sql"),f(Fe,"class","language-bash"),f(zt,"class","language-sql"),f(Ys,"class","icon icon-link"),f(vt,"aria-hidden","true"),f(vt,"tabindex","-1"),f(vt,"href","#gui-tools"),f(mt,"id","gui-tools"),f(Yt,"href","https://americanopeople.tistory.com/316"),f(Yt,"rel","nofollow"),f(js,"class","icon icon-link"),f(_t,"aria-hidden","true"),f(_t,"tabindex","-1"),f(_t,"href","#orm-연결"),f(dt,"id","orm-연결"),f(Jt,"class","language-python")},m(t,n){p(t,R,n),s(R,G),s(G,vs),s(R,rn),p(t,Fs,n),p(t,hs,n),p(t,Js,n),p(t,Xt,n),s(Xt,pn),p(t,Xs,n),p(t,gt,n),s(gt,on),p(t,gs,n),p(t,te,n),s(te,fn),p(t,ta,n),p(t,ea,n),p(t,sa,n),p(t,aa,n),p(t,V,n),s(V,U),s(U,ds),s(V,un),p(t,la,n),p(t,na,n),p(t,ra,n),m(Dt,t,n),p(t,pa,n),m(At,t,n),p(t,oa,n),m(Rt,t,n),p(t,ia,n),m(Tt,t,n),p(t,fa,n),m(Pt,t,n),p(t,ua,n),p(t,S,n),s(S,_s),s(_s,cn),s(S,kn),s(S,ee),s(ee,En),s(ee,bs),s(bs,mn),s(S,vn),s(S,$s),s($s,dn),s(S,_n),s(S,D),s(D,bn),s(D,Ss),s(Ss,$n),s(D,Sn),s(D,Ds),s(Ds,Dn),s(D,An),s(D,As),s(As,Rn),s(D,Tn),p(t,ca,n),p(t,se,n),s(se,yt),s(yt,Pn),s(yt,yn),s(yt,wn),p(t,ka,n),p(t,wt,n),s(wt,Ct),s(Ct,Cn),s(wt,Bn),p(t,Ea,n),p(t,ma,n),p(t,va,n),m(Bt,t,n),p(t,da,n),p(t,_a,n),p(t,ba,n),p(t,$a,n),p(t,z,n),s(z,K),s(K,Rs),s(z,Hn),p(t,Sa,n),p(t,Da,n),p(t,Aa,n),m(Ht,t,n),p(t,Ra,n),m(Mt,t,n),p(t,Ta,n),p(t,Pa,n),p(t,ya,n),p(t,wa,n),p(t,Y,n),s(Y,j),s(j,Ts),s(Y,Mn),p(t,Ca,n),p(t,Ba,n),p(t,Ha,n),p(t,ae,n),s(ae,Ln),p(t,Ma,n),p(t,La,n),p(t,qa,n),p(t,F,n),s(F,h),s(h,Ps),s(F,qn),p(t,xa,n),m(Lt,t,n),p(t,Oa,n),p(t,Za,n),p(t,Wa,n),p(t,J,n),s(J,X),s(X,ys),s(J,xn),p(t,Ia,n),m(qt,t,n),p(t,Na,n),p(t,le,n),s(le,On),p(t,Qa,n),p(t,ne,n),s(ne,Zn),p(t,Ga,n),p(t,re,n),s(re,Wn),p(t,Va,n),p(t,g,n),s(g,ws),s(ws,P),s(P,pe),s(pe,In),s(P,Nn),s(P,oe),s(oe,Qn),s(P,Gn),s(P,ie),s(ie,Vn),s(g,Un),s(g,$),s($,y),s(y,fe),s(fe,zn),s(y,Kn),s(y,ue),s(ue,Yn),s(y,jn),s(y,ce),s(ce,Fn),s($,hn),s($,w),s(w,ke),s(ke,Jn),s(w,Xn),s(w,Ee),s(Ee,gn),s(w,tr),s(w,me),s(me,er),s($,sr),s($,C),s(C,ve),s(ve,ar),s(C,lr),s(C,tt),s(tt,Cs),s(Cs,nr),s(tt,rr),s(tt,pr),s(C,or),s(C,et),s(et,Bs),s(Bs,ir),s(et,fr),s(et,ur),s($,cr),s($,B),s(B,de),s(de,kr),s(B,Er),s(B,_e),s(_e,mr),s(B,vr),s(B,be),s(be,dr),s($,_r),s($,H),s(H,$e),s($e,br),s(H,$r),s(H,Se),s(Se,Sr),s(H,Dr),s(H,De),s(De,Ar),p(t,Ua,n),p(t,za,n),p(t,Ka,n),p(t,st,n),s(st,at),s(at,Hs),s(st,Rr),p(t,Ya,n),m(xt,t,n),p(t,ja,n),p(t,Fa,n),p(t,ha,n),p(t,lt,n),s(lt,nt),s(nt,Ms),s(lt,Tr),p(t,Ja,n),m(Ot,t,n),p(t,Xa,n),p(t,rt,n),s(rt,Ls),s(Ls,M),s(M,ga),s(M,Pr),s(M,Ae),s(Ae,yr),s(M,wr),s(M,Re),s(Re,Cr),s(rt,Br),s(rt,L),s(L,q),s(q,qs),s(qs,Hr),s(q,Mr),s(q,Te),s(Te,Lr),s(q,qr),s(q,Pe),s(Pe,xr),s(L,Or),s(L,x),s(x,xs),s(xs,Zr),s(x,Wr),s(x,ye),s(ye,Ir),s(x,Nr),s(x,we),s(we,Qr),s(L,Gr),s(L,O),s(O,Os),s(Os,Vr),s(O,Ur),s(O,Ce),s(Ce,zr),s(O,Kr),s(O,Be),s(Be,Yr),p(t,tl,n),p(t,pt,n),s(pt,Zs),s(Zs,Z),s(Z,el),s(Z,jr),s(Z,He),s(He,Fr),s(Z,hr),s(Z,Me),s(Me,Jr),s(pt,Xr),s(pt,A),s(A,W),s(W,Ws),s(Ws,gr),s(W,tp),s(W,Le),s(Le,ep),s(W,sp),s(W,qe),s(qe,ap),s(A,lp),s(A,I),s(I,Is),s(Is,np),s(I,rp),s(I,xe),s(xe,pp),s(I,op),s(I,Oe),s(Oe,ip),s(A,fp),s(A,N),s(N,Ns),s(Ns,up),s(N,cp),s(N,Ze),s(Ze,kp),s(N,Ep),s(N,We),s(We,mp),s(A,vp),s(A,Q),s(Q,Qs),s(Qs,dp),s(Q,_p),s(Q,Ie),s(Ie,bp),s(Q,$p),s(Q,Ne),s(Ne,Sp),p(t,sl,n),p(t,al,n),p(t,ll,n),p(t,ot,n),s(ot,it),s(it,Gs),s(ot,Dp),p(t,nl,n),m(Zt,t,n),p(t,rl,n),m(Wt,t,n),p(t,pl,n),p(t,Qe,n),s(Qe,Ap),p(t,ol,n),p(t,Ge,n),s(Ge,Rp),p(t,il,n),p(t,fl,n),p(t,ul,n),p(t,cl,n),p(t,ft,n),s(ft,ut),s(ut,Vs),s(ft,Tp),p(t,kl,n),p(t,Ve,n),s(Ve,Pp),p(t,El,n),p(t,ml,n),p(t,vl,n),p(t,ct,n),s(ct,kt),s(kt,Us),s(ct,yp),p(t,dl,n),p(t,Ue,n),s(Ue,wp),p(t,_l,n),p(t,ze,n),s(ze,Cp),p(t,bl,n),p(t,It,n),It.innerHTML=Vi,p(t,$l,n),p(t,Ke,n),s(Ke,Bp),p(t,Sl,n),p(t,Nt,n),Nt.innerHTML=Ui,p(t,Dl,n),p(t,Ye,n),s(Ye,zs),s(zs,Hp),p(t,Al,n),p(t,Rl,n),p(t,Tl,n),p(t,je,n),s(je,Mp),p(t,Pl,n),p(t,Qt,n),Qt.innerHTML=zi,p(t,yl,n),p(t,Gt,n),Gt.innerHTML=Ki,p(t,wl,n),p(t,Vt,n),Vt.innerHTML=Yi,p(t,Cl,n),p(t,Bl,n),p(t,Hl,n),p(t,Et,n),s(Et,Ut),s(Ut,Lp),s(Ut,Ks),s(Ks,qp),s(Ut,xp),s(Et,Op),s(Et,Fe),Fe.innerHTML=ji,p(t,Ml,n),p(t,zt,n),zt.innerHTML=Fi,p(t,Ll,n),p(t,ql,n),p(t,xl,n),p(t,mt,n),s(mt,vt),s(vt,Ys),s(mt,Zp),p(t,Ol,n),p(t,Kt,n),s(Kt,Yt),s(Yt,Wp),s(Kt,Ip),p(t,Zl,n),m(jt,t,n),p(t,Wl,n),p(t,he,n),s(he,Np),p(t,Il,n),m(Ft,t,n),p(t,Nl,n),p(t,Ql,n),p(t,Gl,n),p(t,Je,n),s(Je,Qp),p(t,Vl,n),m(ht,t,n),p(t,Ul,n),p(t,zl,n),p(t,Kl,n),p(t,Yl,n),p(t,dt,n),s(dt,_t),s(_t,js),s(dt,Gp),p(t,jl,n),p(t,Xe,n),s(Xe,Vp),p(t,Fl,n),p(t,Jt,n),Jt.innerHTML=hi,p(t,hl,n),p(t,ge,n),s(ge,Up),Jl=!0},p:of,i(t){Jl||(v(Dt.$$.fragment,t),v(At.$$.fragment,t),v(Rt.$$.fragment,t),v(Tt.$$.fragment,t),v(Pt.$$.fragment,t),v(Bt.$$.fragment,t),v(Ht.$$.fragment,t),v(Mt.$$.fragment,t),v(Lt.$$.fragment,t),v(qt.$$.fragment,t),v(xt.$$.fragment,t),v(Ot.$$.fragment,t),v(Zt.$$.fragment,t),v(Wt.$$.fragment,t),v(jt.$$.fragment,t),v(Ft.$$.fragment,t),v(ht.$$.fragment,t),Jl=!0)},o(t){d(Dt.$$.fragment,t),d(At.$$.fragment,t),d(Rt.$$.fragment,t),d(Tt.$$.fragment,t),d(Pt.$$.fragment,t),d(Bt.$$.fragment,t),d(Ht.$$.fragment,t),d(Mt.$$.fragment,t),d(Lt.$$.fragment,t),d(qt.$$.fragment,t),d(xt.$$.fragment,t),d(Ot.$$.fragment,t),d(Zt.$$.fragment,t),d(Wt.$$.fragment,t),d(jt.$$.fragment,t),d(Ft.$$.fragment,t),d(ht.$$.fragment,t),Jl=!1},d(t){t&&e(R),t&&e(Fs),t&&e(hs),t&&e(Js),t&&e(Xt),t&&e(Xs),t&&e(gt),t&&e(gs),t&&e(te),t&&e(ta),t&&e(ea),t&&e(sa),t&&e(aa),t&&e(V),t&&e(la),t&&e(na),t&&e(ra),_(Dt,t),t&&e(pa),_(At,t),t&&e(oa),_(Rt,t),t&&e(ia),_(Tt,t),t&&e(fa),_(Pt,t),t&&e(ua),t&&e(S),t&&e(ca),t&&e(se),t&&e(ka),t&&e(wt),t&&e(Ea),t&&e(ma),t&&e(va),_(Bt,t),t&&e(da),t&&e(_a),t&&e(ba),t&&e($a),t&&e(z),t&&e(Sa),t&&e(Da),t&&e(Aa),_(Ht,t),t&&e(Ra),_(Mt,t),t&&e(Ta),t&&e(Pa),t&&e(ya),t&&e(wa),t&&e(Y),t&&e(Ca),t&&e(Ba),t&&e(Ha),t&&e(ae),t&&e(Ma),t&&e(La),t&&e(qa),t&&e(F),t&&e(xa),_(Lt,t),t&&e(Oa),t&&e(Za),t&&e(Wa),t&&e(J),t&&e(Ia),_(qt,t),t&&e(Na),t&&e(le),t&&e(Qa),t&&e(ne),t&&e(Ga),t&&e(re),t&&e(Va),t&&e(g),t&&e(Ua),t&&e(za),t&&e(Ka),t&&e(st),t&&e(Ya),_(xt,t),t&&e(ja),t&&e(Fa),t&&e(ha),t&&e(lt),t&&e(Ja),_(Ot,t),t&&e(Xa),t&&e(rt),t&&e(tl),t&&e(pt),t&&e(sl),t&&e(al),t&&e(ll),t&&e(ot),t&&e(nl),_(Zt,t),t&&e(rl),_(Wt,t),t&&e(pl),t&&e(Qe),t&&e(ol),t&&e(Ge),t&&e(il),t&&e(fl),t&&e(ul),t&&e(cl),t&&e(ft),t&&e(kl),t&&e(Ve),t&&e(El),t&&e(ml),t&&e(vl),t&&e(ct),t&&e(dl),t&&e(Ue),t&&e(_l),t&&e(ze),t&&e(bl),t&&e(It),t&&e($l),t&&e(Ke),t&&e(Sl),t&&e(Nt),t&&e(Dl),t&&e(Ye),t&&e(Al),t&&e(Rl),t&&e(Tl),t&&e(je),t&&e(Pl),t&&e(Qt),t&&e(yl),t&&e(Gt),t&&e(wl),t&&e(Vt),t&&e(Cl),t&&e(Bl),t&&e(Hl),t&&e(Et),t&&e(Ml),t&&e(zt),t&&e(Ll),t&&e(ql),t&&e(xl),t&&e(mt),t&&e(Ol),t&&e(Kt),t&&e(Zl),_(jt,t),t&&e(Wl),t&&e(he),t&&e(Il),_(Ft,t),t&&e(Nl),t&&e(Ql),t&&e(Gl),t&&e(Je),t&&e(Vl),_(ht,t),t&&e(Ul),t&&e(zl),t&&e(Kl),t&&e(Yl),t&&e(dt),t&&e(jl),t&&e(Xe),t&&e(Fl),t&&e(Jt),t&&e(hl),t&&e(ge)}}}const kf={title:"RDS로 Postgresql 인스턴스 설정 과정",date:"2023-02-28",excerpt:"RDS로 Postgresql 인스턴스를 띄우며 정리한 내용들을 써보았습니다",categories:["AWS","RDS","Database"],coverImage:"/post_img/Cloud/AWS/RDS/cover.jpg",coverWidth:16,coverHeight:9,indexed:!0,exposed:!0};class Ef extends nf{constructor(R){super(),rf(this,R,null,ff,pf,{})}}export{Ef as default,kf as metadata};
