{"type":"data","nodes":[{"type":"data","data":[null],"uses":{}},{"type":"data","data":[{"posts":1,"total":110},[2,15,24,30,37,47,53,60,66,72,80,86,92,98,104],{"title":3,"slug":4,"excerpt":5,"coverImage":6,"coverWidth":7,"coverHeight":8,"date":9,"categories":10,"indexed":14},"Domain Driven Design의 역사","Backend/DDD/DDD1","History of Domain Driven Design","/post_img/ddd/cover.png",16,9,"2023-07-04T00:00:00.000Z",[11,12,13],"Golang","Backend","Domain Driven Design",true,{"title":16,"slug":17,"excerpt":18,"coverImage":19,"coverWidth":7,"coverHeight":8,"date":20,"categories":21,"indexed":14},"RFC8836: Congestion Control Requirements for Interactive Real-Time Media 정리","Networking/WebRTC/RFC8835","RFC8836을 정리해보았습니다","/post_img/WebRTC/cover.png","2023-04-17T00:00:00.000Z",[22,23],"WebRTC","논문정리",{"title":25,"slug":26,"excerpt":27,"coverImage":19,"coverWidth":7,"coverHeight":8,"date":28,"categories":29,"indexed":14},"RFC8828: WebRTC IP Address Handling Requirements 정리","Networking/WebRTC/RFC8828","RFC8828을 읽고 WebRTC의 IP주소 처리 정책을 정리해보았습니다","2023-03-15T00:00:00.000Z",[22,23],{"title":31,"slug":32,"excerpt":33,"coverImage":34,"coverWidth":7,"coverHeight":8,"date":35,"categories":36,"indexed":14},"Generics in Go","Go/Golang Basics/GO15","'Learning Go'를 읽고, Go의 제네릭 프로그래밍에 대해 알아보았습니다","/post_img/Golang_basics/cover.png","2023-03-01T00:00:00.000Z",[11],{"title":38,"slug":39,"excerpt":40,"coverImage":41,"coverWidth":7,"coverHeight":8,"date":42,"categories":43,"indexed":14},"RDS로 Postgresql 인스턴스 설정 과정","Cloud/AWS/RDS","RDS로 Postgresql 인스턴스를 띄우며 정리한 내용들을 써보았습니다","/post_img/Cloud/RDS/cover.jpg","2023-02-28",[44,45,46],"AWS","RDS","Database",{"title":48,"slug":49,"excerpt":50,"coverImage":34,"coverWidth":7,"coverHeight":8,"date":51,"categories":52,"indexed":14},"Reflect, Unsafe, Cgo","Go/Golang Basics/GO14","'Learning Go'를 읽고, Go의 런타입 타입 확인을 위한 Reflect, 에 대해 정리해보았습니다","2023-02-21T00:00:00.000Z",[11],{"title":54,"slug":55,"excerpt":56,"coverImage":19,"coverWidth":7,"coverHeight":8,"date":57,"categories":58,"indexed":14},"Golang으로 WebRTC Mesh Server 구현하기","Networking/WebRTC/many to many signaling server","Golang을 통해 M:N WebRTC 시그널링 서버를 만들어보았습니다","2023-02-18T00:00:00.000Z",[22,11,59],"Signaling Server",{"title":61,"slug":62,"excerpt":63,"coverImage":34,"coverWidth":7,"coverHeight":8,"date":64,"categories":65,"indexed":14},"테스트 작성","Go/Golang Basics/GO13","Writing Tests","2023-02-06T00:00:00.000Z",[11],{"title":67,"slug":68,"excerpt":69,"coverImage":19,"coverWidth":7,"coverHeight":8,"date":70,"categories":71,"indexed":14},"WebRTC에 관하여 정리해보았다","Networking/WebRTC/webrtc","교내 프로젝트, 교과목, 스터디를 하며 정리한 WebRTC 관련 내용을 기록해보았습니다","2023-01-22T00:00:00.000Z",[22],{"title":73,"slug":74,"excerpt":75,"coverImage":76,"coverWidth":7,"coverHeight":8,"date":77,"categories":78,"indexed":14},"Amazon KVS WebRTC signaling channels 사용기","Cloud/AWS/AWS Kinesis Video Streaming","Amazon KVS WebRTC signaling channel에 대해 알아보자","/post_img/Cloud/AWS_KVS_webrtc_signaling_channel/cover.png","2023-01-01",[44,79,22],"AWS Kinesis Video Stream",{"title":81,"slug":82,"excerpt":83,"coverImage":34,"coverWidth":7,"coverHeight":8,"date":84,"categories":85,"indexed":14},"컨텍스트","Go/Golang Basics/GO12","The Context","2022-09-09T00:00:00.000Z",[11],{"title":87,"slug":88,"excerpt":89,"coverImage":34,"coverWidth":7,"coverHeight":8,"date":90,"categories":91,"indexed":14},"표준 라이브러리","Go/Golang Basics/GO11","The Standard Library","2022-09-05T00:00:00.000Z",[11],{"title":93,"slug":94,"excerpt":95,"coverImage":34,"coverWidth":7,"coverHeight":8,"date":96,"categories":97,"indexed":14},"Go의 동시성","Go/Golang Basics/GO10","Concurrency in Go","2022-08-30T00:00:00.000Z",[11],{"title":99,"slug":100,"excerpt":101,"coverImage":34,"coverWidth":7,"coverHeight":8,"date":102,"categories":103,"indexed":14},"모듈, 패키지, 임포트","Go/Golang Basics/GO9","Modules, Packages, Imports","2022-08-24T00:00:00.000Z",[11],{"title":105,"slug":106,"excerpt":107,"coverImage":34,"coverWidth":7,"coverHeight":8,"date":108,"categories":109,"indexed":14},"에러 처리","Go/Golang Basics/GO8","Errors","2022-08-19T00:00:00.000Z",[11],33],"uses":{}}]}
