{"type":"data","nodes":[null,{"type":"data","data":[{"PostContent":1,"meta":2},"\u003Ch2 id=\"rds란\"\u003E\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#rds란\"\u003E\u003Cspan class=\"icon icon-link\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fa\u003ERDS란?\u003C\u002Fh2\u003E\n\u003Chr\u003E\n\u003Cp\u003ERDS는 MySQL, PostgreSQL, Oracle, Microsoft SQL Server, Amazon Aurora와 같은 다양한 데이터베이스 엔진을 클라우드 환경에서 쉽게 구축, 운영, 확장할 수 있도록 지원하는 Amazon Web Services의 관리형 관계형 데이터베이스 서비스이다.\u003C\u002Fp\u003E\n\u003Cp\u003E데이터베이스 인스턴스를 생성하고 구성하는 프로세스를 자동화함으로써 개발자와 시스템 관리자가 데이터베이스를 관리하는 데 필요한 대부분의 작업을 간소화한다. 또한 백업, 복원, 패치, 모니터링 및 확장과 같은 관리 작업을 수행하는 데 필요한 다양한 기능을 제공한다.\u003C\u002Fp\u003E\n\u003Cp\u003E이 뿐만 아니라 RDS는 보안, 가용성, 확장성 등에 대한 기본적인 지원을 제공하기 때문에 사용자가 애플리케이션에 필요한 데이터베이스 서비스를 쉽게 사용할 수 있다. 이러한 요소들로 인해 RDS는 클라우드 환경에서 안전하고 신뢰할 수 있는 데이터베이스가 된다.\u003C\u002Fp\u003E\n\u003Cbr\u003E\u003Cbr\u003E\n\u003Ch2 id=\"vpc-설정\"\u003E\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#vpc-설정\"\u003E\u003Cspan class=\"icon icon-link\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fa\u003EVPC 설정\u003C\u002Fh2\u003E\n\u003Chr\u003E\n\u003Cp\u003E\u003Cimg src=\"\u002Fpost_img\u002FCloud\u002FRDS\u002F2023-01-06-17-49-45.png\" alt=\" \"\u003E\u003Cbr\u003E\n\u003Cimg src=\"\u002Fpost_img\u002FCloud\u002FRDS\u002F2023-01-06-17-50-27.png\" alt=\" \"\u003E\u003Cbr\u003E\n\u003Cimg src=\"\u002Fpost_img\u002FCloud\u002FRDS\u002F2023-01-06-18-02-47.png\" alt=\" \"\u003E\u003Cbr\u003E\n\u003Cimg src=\"\u002Fpost_img\u002FCloud\u002FRDS\u002F2023-01-06-18-05-11.png\" alt=\" \"\u003E\u003Cbr\u003E\n\u003Cimg src=\"\u002Fpost_img\u002FCloud\u002FRDS\u002F2023-01-06-18-05-37.png\" alt=\" \"\u003E\u003C\u002Fp\u003E\n\u003Cul\u003E\u003Cli\u003EVPC\u003C\u002Fli\u003E\n\u003Cli\u003E서로 다른 AZ의 Subnet \u003Cem\u003E세 개\u003C\u002Fem\u003E\u003C\u002Fli\u003E\n\u003Cli\u003EInternet Gateway\u003C\u002Fli\u003E\n\u003Cli\u003E인바운드 포트로 \u003Ccode\u003E22\u003C\u002Fcode\u003E, \u003Ccode\u003E80\u003C\u002Fcode\u003E, \u003Ccode\u003E25432\u003C\u002Fcode\u003E 세 개 뚫어놓은 Security Group\u003C\u002Fli\u003E\u003C\u002Ful\u003E\n\u003Cblockquote\u003E\u003Cp\u003Erds cluster를 만들 때 서로 다른 AZ에 속하는 subnet이 최소 세 개 필요\u003Cbr\u003E\n5432가 postgresql 기본 포트이고, 25432는 추후 연결시 변경한 포트\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Ftech.cloud.nongshim.co.kr\u002F2018\u002F10\u002F16\u002F4-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%EA%B5%AC%EC%84%B1%ED%95%98%EA%B8%B0vpc-subnet-route-table-internet-gateway\u002F\" rel=\"nofollow\"\u003E여기를 참조하여\u003C\u002Fa\u003E VPC는 위와 같이 세팅해놓았다.\u003C\u002Fp\u003E\n\u003Cbr\u003E\n\u003Cp\u003E\u003Cimg src=\"\u002Fpost_img\u002FCloud\u002FRDS\u002F2023-01-06-17-45-50.png\" alt=\" \"\u003E\n만들어진 vpc에 Actions &gt; Edit VPC settings 해서 DNS setting을 모두 체크해주었다. 아마 Public Access할 때 필요한 옵션이다.\u003C\u002Fp\u003E\n\u003Cbr\u003E\u003Cbr\u003E\n\u003Ch2 id=\"ec2-instance-생성\"\u003E\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#ec2-instance-생성\"\u003E\u003Cspan class=\"icon icon-link\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fa\u003EEC2 Instance 생성\u003C\u002Fh2\u003E\n\u003Chr\u003E\n\u003Cp\u003E\u003Cimg src=\"\u002Fpost_img\u002FCloud\u002FRDS\u002F2023-01-06-14-20-02.png\" alt=\" \"\u003E\n\u003Cimg src=\"\u002Fpost_img\u002FCloud\u002FRDS\u002F2023-01-06-14-20-57.png\" alt=\" \"\u003E\u003Cbr\u003E\nEC2 특이사항은 없고 생성할 때 VPC, SG에 등록해준다.\u003C\u002Fp\u003E\n\u003Cbr\u003E\u003Cbr\u003E\n\u003Ch2 id=\"rds-생성\"\u003E\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#rds-생성\"\u003E\u003Cspan class=\"icon icon-link\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fa\u003ERDS 생성\u003C\u002Fh2\u003E\n\u003Chr\u003E\n\u003Cp\u003E주요 설정은 아래 사진과 같다.\u003C\u002Fp\u003E\n\u003Cbr\u003E\n\u003Ch3 id=\"데이터베이스-버전\"\u003E\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#데이터베이스-버전\"\u003E\u003Cspan class=\"icon icon-link\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fa\u003E데이터베이스 버전\u003C\u002Fh3\u003E\n\u003Cp\u003E\u003Cimg src=\"\u002Fpost_img\u002FCloud\u002FRDS\u002F2023-01-06-12-24-05.png\" alt=\" \"\u003E\u003Cbr\u003E\nPostgreSQL로 인스턴스를 생성할 것이며, 기본 버전인 PostgreSQL 13.7-R1로 생성하였다.\u003C\u002Fp\u003E\n\u003Cbr\u003E\n\u003Ch3 id=\"template-및-availability\"\u003E\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#template-및-availability\"\u003E\u003Cspan class=\"icon icon-link\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fa\u003ETemplate 및 Availability\u003C\u002Fh3\u003E\n\u003Cp\u003E\u003Cimg src=\"\u002Fpost_img\u002FCloud\u002FRDS\u002F2023-01-06-12-05-06.png\" alt=\" \"\u003E\u003Cbr\u003E\n프로덕션용\u002F개발용 여부인지에 따라서 Production이랑 Dev\u002FTest 중 골라서 선택해주면 될 듯 하다.\u003C\u002Fp\u003E\n\u003Cp\u003E그 아래 Deployment options은 Multi-AZ cluster, Multi-AZ instance, single instance 세 개의 option이 있다.\u003C\u002Fp\u003E\n\u003Cp\u003Esingle instance는 당연히 하나의 인스턴스만 띄우는 것인데 반해, Multi-AZ가 붙은 옵션은 AZ에 문제가 생기는 경우를 상정하여 다른 AZ에 스탠바이 인스턴스를 띄운다.\u003C\u002Fp\u003E\n\u003Cp\u003Emulti-AZ cluster에서는 writer 인스턴스와 reader 인스턴스가 분리되어 있으며, 쓰기 작업은 writer 인스턴스, 읽기 작업은 reader 인스턴스에서 진행된다. 반면 Multi-AZ instance나 Single Instance에서는 하나의 인스턴스에서 읽기\u002F쓰기가 모두 진행된다.\u003C\u002Fp\u003E\n\u003Ctable\u003E\u003Cthead\u003E\u003Ctr\u003E\u003Cth align=\"left\"\u003E항목\u003C\u002Fth\u003E\n\u003Cth align=\"center\"\u003EMulti-AZ cluster\u003C\u002Fth\u003E\n\u003Cth align=\"center\"\u003EMulti-AZ instance\u003C\u002Fth\u003E\u003C\u002Ftr\u003E\u003C\u002Fthead\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd align=\"left\"\u003E인스턴스 타입\u003C\u002Ftd\u003E\n\u003Ctd align=\"center\"\u003Eread\u002Fwrite 인스턴스 분리\u003C\u002Ftd\u003E\n\u003Ctd align=\"center\"\u003Eread\u002Fwrite 인스턴스 통합\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\n\u003Ctr\u003E\u003Ctd align=\"left\"\u003E인스턴스 수\u003C\u002Ftd\u003E\n\u003Ctd align=\"center\"\u003Ereader 2개 + writer 1개\u003C\u002Ftd\u003E\n\u003Ctd align=\"center\"\u003Eactive 1개 + standby 1개\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\n\u003Ctr\u003E\u003Ctd align=\"left\"\u003E비용\u003C\u002Ftd\u003E\n\u003Ctd align=\"center\"\u003E\u003Cstrong\u003E비쌈\u003C\u002Fstrong\u003E\u003Cbr\u003E($0.804 per hour)\u003C\u002Ftd\u003E\n\u003Ctd align=\"center\"\u003E\u003Cstrong\u003E덜 비쌈\u003C\u002Fstrong\u003E\u003Cbr\u003E($0.441 per hour)\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\n\u003Ctr\u003E\u003Ctd align=\"left\"\u003Eautoscaling\u003C\u002Ftd\u003E\n\u003Ctd align=\"center\"\u003E불가능\u003C\u002Ftd\u003E\n\u003Ctd align=\"center\"\u003E가능\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\n\u003Ctr\u003E\u003Ctd align=\"left\"\u003E언제 쓸까?\u003C\u002Ftd\u003E\n\u003Ctd align=\"center\"\u003E서비스가 더 커질 것을 전망\u003C\u002Ftd\u003E\n\u003Ctd align=\"center\"\u003E돈 아끼고 싶을 때\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003C\u002Ftbody\u003E\u003C\u002Ftable\u003E\n\u003Cbr\u003E\n\u003Ch3 id=\"authentification-settings\"\u003E\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#authentification-settings\"\u003E\u003Cspan class=\"icon icon-link\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fa\u003EAuthentification Settings\u003C\u002Fh3\u003E\n\u003Cp\u003E\u003Cimg src=\"\u002Fpost_img\u002FCloud\u002FRDS\u002F2023-01-06-14-32-43.png\" alt=\" \"\u003E\u003Cbr\u003E\nmaster username, master password를 설정해준다.\u003C\u002Fp\u003E\n\u003Cbr\u003E\n\u003Ch3 id=\"instance-type\"\u003E\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#instance-type\"\u003E\u003Cspan class=\"icon icon-link\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fa\u003EInstance Type\u003C\u002Fh3\u003E\n\u003Cp\u003E\u003Cimg src=\"\u002Fpost_img\u002FCloud\u002FRDS\u002F2023-01-06-14-35-07.png\" alt=\" \"\u003E\n인스턴스 타입이나 스토리지 타입을 적절히 설정해준다. 마찬가지로 아래 표로 정리하였다.\u003C\u002Fp\u003E\n\u003Ctable\u003E\u003Cthead\u003E\u003Ctr\u003E\u003Cth\u003E\u003C\u002Fth\u003E\n\u003Cth align=\"center\"\u003E용도\u003C\u002Fth\u003E\n\u003Cth align=\"center\"\u003E상황\u003C\u002Fth\u003E\u003C\u002Ftr\u003E\u003C\u002Fthead\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003Edb.m~\u003C\u002Ftd\u003E\n\u003Ctd align=\"center\"\u003E범용\u003C\u002Ftd\u003E\n\u003Ctd align=\"center\"\u003E일반적인 경우\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\n\u003Ctr\u003E\u003Ctd\u003Edb.r~\u003C\u002Ftd\u003E\n\u003Ctd align=\"center\"\u003E메모리 최적화\u003C\u002Ftd\u003E\n\u003Ctd align=\"center\"\u003E저장하는 데이터가 많은 경우\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\n\u003Ctr\u003E\u003Ctd\u003Edb.t~\u003C\u002Ftd\u003E\n\u003Ctd align=\"center\"\u003ECPU 버스트\u003C\u002Ftd\u003E\n\u003Ctd align=\"center\"\u003E읽기\u002F쓰기 빈도가 높은 경우\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003C\u002Ftbody\u003E\u003C\u002Ftable\u003E\n\u003Ctable\u003E\u003Cthead\u003E\u003Ctr\u003E\u003Cth\u003E\u003C\u002Fth\u003E\n\u003Cth align=\"center\"\u003E용도\u003C\u002Fth\u003E\n\u003Cth align=\"center\"\u003E상황\u003C\u002Fth\u003E\u003C\u002Ftr\u003E\u003C\u002Fthead\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003EGeneral Purpose SSD (gp2)\u003C\u002Ftd\u003E\n\u003Ctd align=\"center\"\u003E범용\u003C\u002Ftd\u003E\n\u003Ctd align=\"center\"\u003E일반적인 경우\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\n\u003Ctr\u003E\u003Ctd\u003EGeneral Purpose SSD (gp3)\u003C\u002Ftd\u003E\n\u003Ctd align=\"center\"\u003E범용 + 확장성\u003C\u002Ftd\u003E\n\u003Ctd align=\"center\"\u003E일반적인 경우 + 확장 가능성\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\n\u003Ctr\u003E\u003Ctd\u003EProvisioned IOPS (io)\u003C\u002Ftd\u003E\n\u003Ctd align=\"center\"\u003EI\u002FO 최적화\u003C\u002Ftd\u003E\n\u003Ctd align=\"center\"\u003E읽기\u002F쓰기 빈도가 높은 경우\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\n\u003Ctr\u003E\u003Ctd\u003EMagnetic\u003C\u002Ftd\u003E\n\u003Ctd align=\"center\"\u003EDeprecated\u003C\u002Ftd\u003E\n\u003Ctd align=\"center\"\u003E쓰지마세용\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003C\u002Ftbody\u003E\u003C\u002Ftable\u003E\n\u003Cbr\u003E\n\u003Ch3 id=\"connectivity\"\u003E\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#connectivity\"\u003E\u003Cspan class=\"icon icon-link\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fa\u003EConnectivity\u003C\u002Fh3\u003E\n\u003Cp\u003E\u003Cimg src=\"\u002Fpost_img\u002FCloud\u002FRDS\u002F2023-01-06-14-41-18.png\" alt=\" \"\u003E\n\u003Cimg src=\"\u002Fpost_img\u002FCloud\u002FRDS\u002F2023-01-06-14-43-59.png\" alt=\" \"\u003E\nEC2에 직접 연결을 하면 public access가 블록된다. public access를 허용하려면 EC2에 연결하지 않고 public access를 허용해주면 되며, VPC 및 SG를 설정해주면 EC2에서도 연결이 가능하다. 추가로 사진엔 반영되지 않았는데 포트까지 25432로 변경해보았다.\u003C\u002Fp\u003E\n\u003Cp\u003Eadditional configuration에 cloudwatch 설정같은 것도 있는 듯 하니, 필요하다면 설정해도 될 듯 하다.\u003C\u002Fp\u003E\n\u003Cp\u003E이후 인스턴스를 생성하면 얼마 후 연결이 가능할 것이다.\u003C\u002Fp\u003E\n\u003Cbr\u003E\u003Cbr\u003E\n\u003Ch2 id=\"rds-접속\"\u003E\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#rds-접속\"\u003E\u003Cspan class=\"icon icon-link\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fa\u003ERDS 접속\u003C\u002Fh2\u003E\n\u003Cp\u003E이제 접속이 잘 되는지 확인해보자.\u003C\u002Fp\u003E\n\u003Chr\u003E\n\u003Ch3 id=\"ec2에서-rds-연결\"\u003E\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#ec2에서-rds-연결\"\u003E\u003Cspan class=\"icon icon-link\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fa\u003E(EC2에서) RDS 연결\u003C\u002Fh3\u003E\n\u003Cp\u003E만약 public access를 활성화했다면 로컬에서도 연결이 가능하다. 비활성화 했다면 EC2에서만 접근이 가능하다.\u003C\u002Fp\u003E\n\u003Cp\u003E우선 EC2 인스턴스에 postgresql client를 설치해주자. postgresql client가 설치되어 있다면 이 과정은 생략해도 좋다.\u003C\u002Fp\u003E\n\u003Cpre class=\"language-bash\"\u003E\u003C!-- HTML_TAG_START --\u003E\u003Ccode class=\"language-bash\"\u003E\u003Cspan class=\"token function\"\u003Esudo\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Eapt-get\u003C\u002Fspan\u003E update\n\u003Cspan class=\"token function\"\u003Esudo\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Eapt-get\u003C\u002Fspan\u003E upgrade\n\u003Cspan class=\"token function\"\u003Esudo\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Eapt-get\u003C\u002Fspan\u003E \u003Cspan class=\"token function\"\u003Einstall\u003C\u002Fspan\u003E postgresql-client\u003C\u002Fcode\u003E\u003C!-- HTML_TAG_END --\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003Erds 인스턴스의 접속 엔드포인트를 확인한 후, 다음과 같은 명령어로 rds 인스턴스에 접속한다.\n만약 인스턴스를 생성할 때 Multi-AZ cluster로 생성하였다면 writer의 엔드포인트로 접속해야 한다.\u003C\u002Fp\u003E\n\u003Cpre class=\"language-bash\"\u003E\u003C!-- HTML_TAG_START --\u003E\u003Ccode class=\"language-bash\"\u003Epsql \u003Cspan class=\"token punctuation\"\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"token parameter variable\"\u003E--host\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E&lt;\u003C\u002Fspan\u003E엔드포인트\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"token parameter variable\"\u003E--port\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E&lt;\u003C\u002Fspan\u003E포트번호\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"token parameter variable\"\u003E--username\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E&lt;\u003C\u002Fspan\u003E사용자명\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"token parameter variable\"\u003E--password\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"token parameter variable\"\u003E--dbname\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003Epostgres\u003C\u002Fcode\u003E\u003C!-- HTML_TAG_END --\u003E\u003C\u002Fpre\u003E\n\u003Cblockquote\u003E\u003Cp\u003Edbname의 postgres는 PostgreSQL의 마스터 유저로, 초기 접속시에는 postgres로 접속해야 한다.\u003C\u002Fp\u003E\u003C\u002Fblockquote\u003E\n\u003Cbr\u003E\n\u003Cp\u003E접속했다면, 데이터베이스를 생성하고 다시 접속하여 테스트 데이터를 만들어보자.\u003C\u002Fp\u003E\n\u003Cpre class=\"language-sql\"\u003E\u003C!-- HTML_TAG_START --\u003E\u003Ccode class=\"language-sql\"\u003E\u003Cspan class=\"token keyword\"\u003Ecreate\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Edatabase\u003C\u002Fspan\u003E mydb\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\nq\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C!-- HTML_TAG_END --\u003E\u003C\u002Fpre\u003E\n\u003Cpre class=\"language-bash\"\u003E\u003C!-- HTML_TAG_START --\u003E\u003Ccode class=\"language-bash\"\u003Epsql \u003Cspan class=\"token punctuation\"\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"token parameter variable\"\u003E--host\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E&lt;\u003C\u002Fspan\u003E엔드포인트\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"token parameter variable\"\u003E--port\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E&lt;\u003C\u002Fspan\u003E포트번호\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"token parameter variable\"\u003E--username\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E&lt;\u003C\u002Fspan\u003E사용자명\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"token parameter variable\"\u003E--password\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"token parameter variable\"\u003E--dbname\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003Emydb\u003C\u002Fcode\u003E\u003C!-- HTML_TAG_END --\u003E\u003C\u002Fpre\u003E\n\u003Cpre class=\"language-sql\"\u003E\u003C!-- HTML_TAG_START --\u003E\u003Ccode class=\"language-sql\"\u003E\u003Cspan class=\"token keyword\"\u003Ecreate\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Etable\u003C\u002Fspan\u003E mytable \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\n    id \u003Cspan class=\"token keyword\"\u003Eint\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003Enot\u003C\u002Fspan\u003E \u003Cspan class=\"token boolean\"\u003Enull\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Eprimary\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Ekey\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E\n    name \u003Cspan class=\"token keyword\"\u003Evarchar\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token number\"\u003E20\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003Enot\u003C\u002Fspan\u003E \u003Cspan class=\"token boolean\"\u003Enull\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Einsert\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Einto\u003C\u002Fspan\u003E mytable \u003Cspan class=\"token keyword\"\u003Evalues\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token number\"\u003E1\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E'ㅎㅇ'\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C!-- HTML_TAG_END --\u003E\u003C\u002Fpre\u003E\n\u003Cbr\u003E\n\u003Cblockquote\u003E\u003Cp\u003EMulti-AZ cluster라면 \u003Ccode\u003E\\q\u003C\u002Fcode\u003E로 나간 후 reader로 재접속하여 endpoint로 rds에 접속해서 확인해보자.\u003C\u002Fp\u003E\n\u003Cpre class=\"language-bash\"\u003E\u003C!-- HTML_TAG_START --\u003E\u003Ccode class=\"language-bash\"\u003Epsql \u003Cspan class=\"token punctuation\"\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"token parameter variable\"\u003E--host\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E&lt;\u003C\u002Fspan\u003E엔드포인트\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"token parameter variable\"\u003E--port\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E&lt;\u003C\u002Fspan\u003E포트번호\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"token parameter variable\"\u003E--username\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E&lt;\u003C\u002Fspan\u003E사용자명\u003Cspan class=\"token operator\"\u003E\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"token parameter variable\"\u003E--password\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"token parameter variable\"\u003E--dbname\u003C\u002Fspan\u003E\u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003Emydb\u003C\u002Fcode\u003E\u003C!-- HTML_TAG_END --\u003E\u003C\u002Fpre\u003E\u003C\u002Fblockquote\u003E\n\u003Cpre class=\"language-sql\"\u003E\u003C!-- HTML_TAG_START --\u003E\u003Ccode class=\"language-sql\"\u003E\u003Cspan class=\"token keyword\"\u003Eselect\u003C\u002Fspan\u003E \u003Cspan class=\"token operator\"\u003E*\u003C\u002Fspan\u003E \u003Cspan class=\"token keyword\"\u003Efrom\u003C\u002Fspan\u003E mytable\u003Cspan class=\"token punctuation\"\u003E;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C!-- HTML_TAG_END --\u003E\u003C\u002Fpre\u003E\n\u003Cbr\u003E\n\u003Ch3 id=\"gui-tools\"\u003E\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#gui-tools\"\u003E\u003Cspan class=\"icon icon-link\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fa\u003Egui tools\u003C\u002Fh3\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Famericanopeople.tistory.com\u002F316\" rel=\"nofollow\"\u003E어느 블로그 포스트\u003C\u002Fa\u003E를 보니 모니터링 툴 중 TablePlus란 게 그렇게 좋다고 한다. 써보니 우분투는 아직 알파 릴리즈라 오류가 좀 나는 듯.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"\u002Fpost_img\u002FCloud\u002FRDS\u002F2023-01-06-20-57-47.png\" alt=\" \"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E보이는 필드들을 모두 채워주면 된다.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"\u002Fpost_img\u002FCloud\u002FRDS\u002F2023-01-06-20-59-27.png\" alt=\" \"\u003E\u003C\u002Fp\u003E\n\u003Cbr\u003E\n\u003Cp\u003E접속하고 나서 이것저것 시도해보니 이렇게 데이터를 보여줍니다.\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"\u002Fpost_img\u002FCloud\u002FRDS\u002F2023-01-06-21-07-07.png\" alt=\" \"\u003E\u003C\u002Fp\u003E\n\u003Cbr\u003E\u003Cbr\u003E\n\u003Ch3 id=\"orm-연결\"\u003E\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#orm-연결\"\u003E\u003Cspan class=\"icon icon-link\"\u003E\u003C\u002Fspan\u003E\u003C\u002Fa\u003EORM 연결\u003C\u002Fh3\u003E\n\u003Cp\u003EORM으로 Python의 SQL Alchemy를 써서 연결해보았다.\u003C\u002Fp\u003E\n\u003Cpre class=\"language-python\"\u003E\u003C!-- HTML_TAG_START --\u003E\u003Ccode class=\"language-python\"\u003E\u003Cspan class=\"token keyword\"\u003Efrom\u003C\u002Fspan\u003E sqlalchemy \u003Cspan class=\"token keyword\"\u003Eimport\u003C\u002Fspan\u003E create_engine\n\u003Cspan class=\"token keyword\"\u003Efrom\u003C\u002Fspan\u003E dotenv \u003Cspan class=\"token keyword\"\u003Eimport\u003C\u002Fspan\u003E load_dotenv\n\u003Cspan class=\"token keyword\"\u003Efrom\u003C\u002Fspan\u003E sqlalchemy\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eorm \u003Cspan class=\"token keyword\"\u003Eimport\u003C\u002Fspan\u003E sessionmaker\n\u003Cspan class=\"token keyword\"\u003Eimport\u003C\u002Fspan\u003E os\n\nload_dotenv\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\nHOST \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E os\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eenviron\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eget\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E\"DB_HOST\"\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\nPORT \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E os\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eenviron\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eget\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E\"DB_PORT\"\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\nID \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E os\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eenviron\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eget\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E\"DB_ID\"\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\nPW \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E os\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eenviron\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eget\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E\"DB_PW\"\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\nDB \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E os\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eenviron\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eget\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E\"DB_DB\"\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\nURL \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E \u003Cspan class=\"token string\"\u003E\"postgresql:\u002F\u002F&#123;&#125;:&#123;&#125;@&#123;&#125;:&#123;&#125;\u002F&#123;&#125;\"\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003E\u003Cspan class=\"token builtin\"\u003Eformat\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EID\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E PW\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E HOST\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E PORT\u003Cspan class=\"token punctuation\"\u003E,\u003C\u002Fspan\u003E DB\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\ndb \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E create_engine\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003EURL\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\nSession \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E sessionmaker\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Edb\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\nsession \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E Session\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\nrows \u003Cspan class=\"token operator\"\u003E=\u003C\u002Fspan\u003E session\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eexecute\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token string\"\u003E\"SELECT * FROM mytable\"\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\u003Cspan class=\"token keyword\"\u003Efor\u003C\u002Fspan\u003E row \u003Cspan class=\"token keyword\"\u003Ein\u003C\u002Fspan\u003E rows\u003Cspan class=\"token punctuation\"\u003E:\u003C\u002Fspan\u003E\n    \u003Cspan class=\"token keyword\"\u003Eprint\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003Erow\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\n\nsession\u003Cspan class=\"token punctuation\"\u003E.\u003C\u002Fspan\u003Eclose\u003Cspan class=\"token punctuation\"\u003E(\u003C\u002Fspan\u003E\u003Cspan class=\"token punctuation\"\u003E)\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C!-- HTML_TAG_END --\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E모델 코드 짜기 귀찮아서 로우쿼리 날렸는데 잘 받아와진다.\u003C\u002Fp\u003E",{"title":3,"date":4,"excerpt":5,"categories":6,"coverImage":10,"coverWidth":11,"coverHeight":12,"slug":13},"RDS로 Postgresql 인스턴스 설정 과정","2023-02-28","RDS로 Postgresql 인스턴스를 띄우며 정리한 내용들을 써보았습니다",[7,8,9],"AWS","RDS","Database","\u002Fpost_img\u002FCloud\u002FRDS\u002Fcover.jpg",16,9,"Cloud\u002FAWS\u002FRDS"],"uses":{"params":["post"]}}]}