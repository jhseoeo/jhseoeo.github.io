{"type":"data","nodes":[{"type":"data","data":[null],"uses":{}},{"type":"data","data":[{"PostContent":1,"meta":2},"\u003Ciframe width=\"800\" height=\"500\" src=\"https://www.youtube.com/embed/zXF6vrFqjmE\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\u003C/iframe>\n\u003Cbr>\u003Cbr>\n\u003Cdetails markdown=\"1\">\u003Csummary>예제 1 [tkinter]\u003C/summary>\n\u003Cp>Drag&amp;Drop이 가능한 tkinter button을 설계합니다\u003Cbr>\nDrag event :\u003C/p>\n\u003Cbr>\n\u003Cdetails markdown=\"1\">\u003Csummary>정답\u003C/summary>\n\u003Cpre class=\"language-python\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-python\">\u003Cspan class=\"token keyword\">import\u003C/span> tkinter \u003Cspan class=\"token keyword\">as\u003C/span> tk\n\n\u003Cspan class=\"token keyword\">def\u003C/span> \u003Cspan class=\"token function\">on_drag_start\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>event\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span>\n    widget \u003Cspan class=\"token operator\">=\u003C/span> event\u003Cspan class=\"token punctuation\">.\u003C/span>widget\n    widget\u003Cspan class=\"token punctuation\">.\u003C/span>_drag_start_x \u003Cspan class=\"token operator\">=\u003C/span> event\u003Cspan class=\"token punctuation\">.\u003C/span>x\n    widget\u003Cspan class=\"token punctuation\">.\u003C/span>_drag_start_y \u003Cspan class=\"token operator\">=\u003C/span> event\u003Cspan class=\"token punctuation\">.\u003C/span>y\n\n\u003Cspan class=\"token keyword\">def\u003C/span> \u003Cspan class=\"token function\">on_drag_motion\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>event\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span>\n    widget \u003Cspan class=\"token operator\">=\u003C/span> event\u003Cspan class=\"token punctuation\">.\u003C/span>widget\n    x \u003Cspan class=\"token operator\">=\u003C/span> widget\u003Cspan class=\"token punctuation\">.\u003C/span>winfo_x\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token operator\">-\u003C/span> widget\u003Cspan class=\"token punctuation\">.\u003C/span>_drag_start_x \u003Cspan class=\"token operator\">+\u003C/span> event\u003Cspan class=\"token punctuation\">.\u003C/span>x\n    y \u003Cspan class=\"token operator\">=\u003C/span> widget\u003Cspan class=\"token punctuation\">.\u003C/span>winfo_y\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token operator\">-\u003C/span> widget\u003Cspan class=\"token punctuation\">.\u003C/span>_drag_start_y \u003Cspan class=\"token operator\">+\u003C/span> event\u003Cspan class=\"token punctuation\">.\u003C/span>y\n    widget\u003Cspan class=\"token punctuation\">.\u003C/span>place\u003Cspan class=\"token punctuation\">(\u003C/span>x\u003Cspan class=\"token operator\">=\u003C/span>x\u003Cspan class=\"token punctuation\">,\u003C/span> y\u003Cspan class=\"token operator\">=\u003C/span>y\u003Cspan class=\"token punctuation\">)\u003C/span>\n\nroot \u003Cspan class=\"token operator\">=\u003C/span> tk\u003Cspan class=\"token punctuation\">.\u003C/span>Tk\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\nroot\u003Cspan class=\"token punctuation\">.\u003C/span>resizable\u003Cspan class=\"token punctuation\">(\u003C/span>width\u003Cspan class=\"token operator\">=\u003C/span>\u003Cspan class=\"token boolean\">False\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> height\u003Cspan class=\"token operator\">=\u003C/span>\u003Cspan class=\"token boolean\">False\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\nroot\u003Cspan class=\"token punctuation\">.\u003C/span>geometry\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"800x600\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\nbutton \u003Cspan class=\"token operator\">=\u003C/span> tk\u003Cspan class=\"token punctuation\">.\u003C/span>Button\u003Cspan class=\"token punctuation\">(\u003C/span>root\u003Cspan class=\"token punctuation\">,\u003C/span> width\u003Cspan class=\"token operator\">=\u003C/span>\u003Cspan class=\"token number\">20\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> height\u003Cspan class=\"token operator\">=\u003C/span>\u003Cspan class=\"token number\">20\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> text\u003Cspan class=\"token operator\">=\u003C/span>\u003Cspan class=\"token string\">\"응애\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> font\u003Cspan class=\"token operator\">=\u003C/span>\u003Cspan class=\"token string\">\"24pt\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\nbutton\u003Cspan class=\"token punctuation\">.\u003C/span>place\u003Cspan class=\"token punctuation\">(\u003C/span>x\u003Cspan class=\"token operator\">=\u003C/span>\u003Cspan class=\"token number\">60\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> y\u003Cspan class=\"token operator\">=\u003C/span>\u003Cspan class=\"token number\">60\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\nbutton\u003Cspan class=\"token punctuation\">.\u003C/span>bind\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"&amp;lt;Button-1&amp;gt;\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> func\u003Cspan class=\"token operator\">=\u003C/span>on_drag_start\u003Cspan class=\"token punctuation\">)\u003C/span>\nbutton\u003Cspan class=\"token punctuation\">.\u003C/span>bind\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"&amp;lt;B1-Motion&amp;gt;\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> func\u003Cspan class=\"token operator\">=\u003C/span>on_drag_motion\u003Cspan class=\"token punctuation\">)\u003C/span>\n\nroot\u003Cspan class=\"token punctuation\">.\u003C/span>mainloop\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\u003C/details>\u003C/details>\n\u003Cbr>\n\u003Cdetails markdown=\"1\">\u003Csummary>예제 2 [String Method]\u003C/summary>\n\u003Cp>아래 구문을 실행하였을 때 어떤 결과가 출력될 지 예상하시오\u003Cbr>\u003C/p>\n\u003Cpre class=\"language-python\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-python\">s \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token string\">\"-----     Hello world      -----\"\u003C/span>\ns\u003Cspan class=\"token punctuation\">.\u003C/span>strip\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">'-'\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>strip\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>swapcase\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>count\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">'L'\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\n\u003Cdetails markdown=\"1\">\u003Csummary>정답\u003C/summary>\n\u003Cpre class=\"language-python\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-python\">    \u003Cspan class=\"token number\">3\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\u003C/details>\u003C/details>\n\u003Cbr>\n\u003Cdetails markdown=\"1\">\u003Csummary>예제 3 [Conditional Statement]\u003C/summary>\n\u003Cp>한 자리수 또는 두 자리수 자연수를 입력받아 이를 한글로 표기하는 코드를 작성하시오.\u003C/p>\n\u003Cp>입력 예시\u003C/p>\n\u003Cpre class=\"language-python\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-python\">    convertKorean\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token number\">24\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n    convertKorean\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token number\">60\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n    convertKorean\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token number\">9\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n    convertKorean\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token number\">0\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n    convertKorean\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token number\">100\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\n\u003Cp>출력 예시\u003C/p>\n\u003Cpre class=\"language-python\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-python\">    이십사\n    육십\n    구\n    범위에서 벗어났어요\n    범위에서 벗어났어요\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\n\u003Cdetails markdown=\"1\">\u003Csummary>정답\u003C/summary>\n\u003Cpre class=\"language-python\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-python\">\u003Cspan class=\"token keyword\">def\u003C/span> \u003Cspan class=\"token function\">getKorean\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>num\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span>\n    \u003Cspan class=\"token keyword\">if\u003C/span> num \u003Cspan class=\"token operator\">==\u003C/span> \u003Cspan class=\"token number\">1\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span>\n        \u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token string\">'일'\u003C/span>\n    \u003Cspan class=\"token keyword\">elif\u003C/span> num \u003Cspan class=\"token operator\">==\u003C/span> \u003Cspan class=\"token number\">2\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span>\n        \u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token string\">'이'\u003C/span>\n    \u003Cspan class=\"token keyword\">elif\u003C/span> num \u003Cspan class=\"token operator\">==\u003C/span> \u003Cspan class=\"token number\">3\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span>\n        \u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token string\">'삼'\u003C/span>\n    \u003Cspan class=\"token keyword\">elif\u003C/span> num \u003Cspan class=\"token operator\">==\u003C/span> \u003Cspan class=\"token number\">4\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span>\n        \u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token string\">'사'\u003C/span>\n    \u003Cspan class=\"token keyword\">elif\u003C/span> num \u003Cspan class=\"token operator\">==\u003C/span> \u003Cspan class=\"token number\">5\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span>\n        \u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token string\">'오'\u003C/span>\n    \u003Cspan class=\"token keyword\">elif\u003C/span> num \u003Cspan class=\"token operator\">==\u003C/span> \u003Cspan class=\"token number\">6\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span>\n        \u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token string\">'육'\u003C/span>\n    \u003Cspan class=\"token keyword\">elif\u003C/span> num \u003Cspan class=\"token operator\">==\u003C/span> \u003Cspan class=\"token number\">7\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span>\n        \u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token string\">'칠'\u003C/span>\n    \u003Cspan class=\"token keyword\">elif\u003C/span> num \u003Cspan class=\"token operator\">==\u003C/span> \u003Cspan class=\"token number\">8\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span>\n        \u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token string\">'팔'\u003C/span>\n    \u003Cspan class=\"token keyword\">elif\u003C/span> num \u003Cspan class=\"token operator\">==\u003C/span> \u003Cspan class=\"token number\">9\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span>\n        \u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token string\">'구'\u003C/span>\n\n    \u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token string\">'뭐임'\u003C/span>\n\n\nx \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token builtin\">int\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token builtin\">input\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n\u003Cspan class=\"token keyword\">if\u003C/span> x \u003Cspan class=\"token operator\">&lt;=\u003C/span> \u003Cspan class=\"token number\">0\u003C/span> \u003Cspan class=\"token keyword\">or\u003C/span> x \u003Cspan class=\"token operator\">>=\u003C/span> \u003Cspan class=\"token number\">100\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span>\n    \u003Cspan class=\"token keyword\">print\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"범위를 벗어났어요\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n\u003Cspan class=\"token keyword\">else\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span>\n    ten \u003Cspan class=\"token operator\">=\u003C/span> x\u003Cspan class=\"token operator\">//\u003C/span>\u003Cspan class=\"token number\">10\u003C/span>\n    one \u003Cspan class=\"token operator\">=\u003C/span> x \u003Cspan class=\"token operator\">%\u003C/span> \u003Cspan class=\"token number\">10\u003C/span>\n\n    \u003Cspan class=\"token keyword\">if\u003C/span> ten \u003Cspan class=\"token operator\">>\u003C/span> \u003Cspan class=\"token number\">1\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span>\n        \u003Cspan class=\"token keyword\">print\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>getKorean\u003Cspan class=\"token punctuation\">(\u003C/span>ten\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> end\u003Cspan class=\"token operator\">=\u003C/span>\u003Cspan class=\"token string\">''\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n    \u003Cspan class=\"token keyword\">if\u003C/span> ten \u003Cspan class=\"token operator\">!=\u003C/span> \u003Cspan class=\"token number\">0\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span>\n        \u003Cspan class=\"token keyword\">print\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>end\u003Cspan class=\"token operator\">=\u003C/span>\u003Cspan class=\"token string\">\"십\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n    \u003Cspan class=\"token keyword\">print\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>getKorean\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"원\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\n\u003Cp>getKorean 함수는 배열의 인덱스를 이용하면 훨씬 간단하게 구현 가능합니다.\u003C/p>\u003C/details>\u003C/details>\n\u003Cbr>\n\u003Cdetails markdown=\"1\">\u003Csummary>예제 4 [Math Module]\u003C/summary>\n\u003Cp>\u003Cimg src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR1p569xyGBCJcMoVoo7-7L2-XNOexkDQ5niw&usqp=CAU\" alt=\"Polar\">\u003C/p>\n\u003Cp>님들 미분적분학에서 배울거^^\u003C/p>\n\u003Cp>극좌표계는 위 그림과 같이, 반지름r과 각(θ)으로 표현된다. \u003Cbr>\nr은 극(원점)에서의 거리를 의미하고, \u003Cbr>\nθ는 0°(직교 좌표계의 x축 양의 방향에 해당)에서의 각도를 의미한다. \u003Cbr>\u003C/p>\n\u003Cp>극좌표계에 위치한 한 점(r, θ)을 \u003Cbr>\n직교 좌표계의 한 점(x, y)으로 바꾸기 위한 공식은 다음과 같다.\u003Cbr>\n𝑥= 𝑟cos⁡𝜃\u003Cbr>\n𝑦= 𝑟sin⁡𝜃\u003C/p>\n\u003Cp>사용자로부터 반지름(r), 각도(°)를 입력받아 입력한 위치에 해당하는 \u003Cbr>\n극좌표계의 점을 직교좌표계의 좌표(x, y)로 출력하는 프로그램을 작성하시오.\u003C/p>\n\u003Cp>입력 예시\u003C/p>\n\u003Cpre class=\"language-python\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-python\">    Enter r\u003Cspan class=\"token punctuation\">:\u003C/span> \u003Cspan class=\"token number\">5\u003C/span>\n    Enter degree\u003Cspan class=\"token punctuation\">:\u003C/span> \u003Cspan class=\"token number\">90\u003C/span>\n\n    Enter r\u003Cspan class=\"token punctuation\">:\u003C/span> \u003Cspan class=\"token number\">5\u003C/span>\n    Enter degree\u003Cspan class=\"token punctuation\">:\u003C/span> \u003Cspan class=\"token number\">180\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\n\u003Cp>츨력 예시\u003C/p>\n\u003Cpre class=\"language-python\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-python\">    \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token number\">0.0\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token number\">5.0\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n    \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token operator\">-\u003C/span>\u003Cspan class=\"token number\">5.0\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token number\">0.0\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\n\u003Cbr>\n\u003Cdetails markdown=\"1\">\u003Csummary>정답\u003C/summary>\n\u003Cpre class=\"language-python\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-python\">\u003Cspan class=\"token keyword\">import\u003C/span> math\n\n\u003Cspan class=\"token keyword\">def\u003C/span> \u003Cspan class=\"token function\">convertX\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>r\u003Cspan class=\"token punctuation\">,\u003C/span> degree\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span>\n    \u003Cspan class=\"token keyword\">return\u003C/span> r \u003Cspan class=\"token operator\">*\u003C/span> math\u003Cspan class=\"token punctuation\">.\u003C/span>cos\u003Cspan class=\"token punctuation\">(\u003C/span>math\u003Cspan class=\"token punctuation\">.\u003C/span>radians\u003Cspan class=\"token punctuation\">(\u003C/span>degree\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n    \u003Cspan class=\"token comment\"># 또는, rad = deg * pi / 180 인 것을 이용해도 된다.\u003C/span>\n    \u003Cspan class=\"token comment\"># return r * math.cos(degree * math.pi / 180)\u003C/span>\n\n\u003Cspan class=\"token keyword\">def\u003C/span> \u003Cspan class=\"token function\">convertY\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>r\u003Cspan class=\"token punctuation\">,\u003C/span> degree\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span>\n    \u003Cspan class=\"token keyword\">return\u003C/span> r \u003Cspan class=\"token operator\">*\u003C/span> math\u003Cspan class=\"token punctuation\">.\u003C/span>sin\u003Cspan class=\"token punctuation\">(\u003C/span>math\u003Cspan class=\"token punctuation\">.\u003C/span>radians\u003Cspan class=\"token punctuation\">(\u003C/span>degree\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n\nr \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token builtin\">float\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token builtin\">input\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"Enter r: \"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\ndegree \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token builtin\">float\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token builtin\">input\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"Enter degree: \"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n\u003Cspan class=\"token keyword\">print\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"(&#123;0:.1f&#125;, &#123;1:.1f&#125;)\"\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span> \u003Cspan class=\"token builtin\">format\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>convertX\u003Cspan class=\"token punctuation\">(\u003C/span>r\u003Cspan class=\"token punctuation\">,\u003C/span> degree\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> convertY\u003Cspan class=\"token punctuation\">(\u003C/span>r\u003Cspan class=\"token punctuation\">,\u003C/span> degree\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\u003C/details>\u003C/details>",{"title":3,"date":4,"excerpt":5,"categories":6,"coverImage":8,"coverWidth":9,"coverHeight":10,"indexed":11,"slug":12},"4. GUI Programming","2022-04-01T00:00:00.000Z","implement GUI with tkinter",[7],"동아리교육","/post_img/동아리교육/22-1_return_python/cover.png",16,9,false,"동아리교육/Python/PY4"],"uses":{"params":["post"]}}]}
