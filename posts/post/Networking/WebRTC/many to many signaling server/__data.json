{"type":"data","nodes":[{"type":"data","data":[null],"uses":{}},{"type":"data","data":[{"PostContent":1,"meta":2},"\u003Cp>Golang으로 하는 첫 프로젝트로, WebRTC many-to-many 시그널링 서버를 만들게 되었다.\u003C/p>\n\u003Cbr>\u003Cbr>\n\u003Ch2 id=\"basic-11-signaling\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#basic-11-signaling\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Basic 1:1 Signaling\u003C/h2>\n\u003Cp>우선 가장 기본적인 예제인, 1:1 연결 시그널링 서버의 예제부터 구현하였다. 1:1 시그널링 서버는 언어를 막론하고 예제가 많이 존재한다.\n본인 또한 참고한 예제가 있다. \u003Ca href=\"https://github.com/shanet/WebRTC-Example\" rel=\"nofollow\">https://github.com/shanet/WebRTC-Example\u003C/a>의 예제를 확인하면 간단한 웹 클라이언트와, Node.js 및 WebSocket 기반의 간단한 시그널링 서버를 찾아볼 수 있다.\u003C/p>\n\u003Cbr>\n\u003Cp>서버쪽 소스코드는 너무나도 간단하다. ICE나 SDP 등 WebRTC 연결 정보를 전달해주는 역할을 하는 코드는 이 정도밖에 안된다.\u003C/p>\n\u003Cpre class=\"language-javascript\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-javascript\">\u003Cspan class=\"token keyword\">const\u003C/span> wss \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">new\u003C/span> \u003Cspan class=\"token class-name\">WebSocketServer\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">&#123;\u003C/span> \u003Cspan class=\"token literal-property property\">server\u003C/span>\u003Cspan class=\"token operator\">:\u003C/span> httpsServer \u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\nwss\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">on\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">'connection'\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token keyword\">function\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">ws\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\tws\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">on\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">'message'\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token keyword\">function\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">message\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\u003Cspan class=\"token comment\">// Broadcast any received message to all clients\u003C/span>\n\t\tconsole\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">log\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">'received: %s'\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> message\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\t\twss\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">broadcast\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>message\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\nwss\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function-variable function\">broadcast\u003C/span> \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token keyword\">function\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">data\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\u003Cspan class=\"token keyword\">this\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>clients\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">forEach\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">function\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token parameter\">client\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">if\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>client\u003Cspan class=\"token punctuation\">.\u003C/span>readyState \u003Cspan class=\"token operator\">===\u003C/span> WebSocket\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token constant\">OPEN\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\tclient\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">send\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>data\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\n\u003Cp>한쪽 피어가 보낸 메시지를 다른 피어한테 웹소켓을 통해 전송해주는 로직으로, 사실상 채팅 서버와 거의 동일하다고 볼 수 있다.\n그래서 Go로 작성된 웹소켓 기반 채팅서버 예제를 참조하여 금방 시그널링 서버를 구현할 수 있었다.\n\u003Ca href=\"https://github.com/jos-/gofiber-websocket-chat-example\" rel=\"nofollow\">https://github.com/jos-/gofiber-websocket-chat-example\u003C/a>의 예제를 참조하여 동일 클라이언트 코드를 사용하는 Go 예제로 옮겨보았다.\u003C/p>\n\u003Cp>프로젝트는 \u003Ca href=\"https://github.com/gofiber/fiber\" rel=\"nofollow\">GoFiber\u003C/a>의 \u003Ca href=\"https://github.com/gofiber/websocket\" rel=\"nofollow\">웹소켓 extension\u003C/a>을 사용하여 진행하였다.\n웹소켓 관련 Go 라이브러리 중에서 가장 일반적으로 사용되는 게 \u003Ca href=\"https://github.com/gorilla/websocket\" rel=\"nofollow\">Gorilla WebSocket\u003C/a>으로 알고 있는데, 2022년 12월 쯤 Gorilla WebSocket의 깃허브 레포지토리가 archived 상태가 되었다.\n괜찮은 대체제를 찾는 겸, Fiber 연습하는 겸 GoFiber WebSocket extension를 사용하게 되었다.\u003C/p>\n\u003Cbr>\n\u003Cp>먼저, 다음과 같이 유저가 접속하거나 나갈 때 데이터를 전송할 채널과, 채널에 들어온 데이터를 받아서 처리할 고루틴을 작성해주었다.\u003C/p>\n\u003Cpre class=\"language-go\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-go\">\u003Cspan class=\"token keyword\">type\u003C/span> channelSet \u003Cspan class=\"token keyword\">struct\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\tregister   \u003Cspan class=\"token keyword\">chan\u003C/span> \u003Cspan class=\"token operator\">*\u003C/span>ws\u003Cspan class=\"token punctuation\">.\u003C/span>Conn\n\tunregister \u003Cspan class=\"token keyword\">chan\u003C/span> \u003Cspan class=\"token operator\">*\u003C/span>ws\u003Cspan class=\"token punctuation\">.\u003C/span>Conn\n\tbroadcast  \u003Cspan class=\"token keyword\">chan\u003C/span> \u003Cspan class=\"token builtin\">string\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\u003Cspan class=\"token keyword\">type\u003C/span> client \u003Cspan class=\"token keyword\">struct\u003C/span>\u003Cspan class=\"token punctuation\">&#123;\u003C/span>\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">var\u003C/span> clients \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token function\">make\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">map\u003C/span>\u003Cspan class=\"token punctuation\">[\u003C/span>\u003Cspan class=\"token operator\">*\u003C/span>ws\u003Cspan class=\"token punctuation\">.\u003C/span>Conn\u003Cspan class=\"token punctuation\">]\u003C/span>client\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token function\">sendBroadcastMessage\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>cs \u003Cspan class=\"token operator\">*\u003C/span>channelSet\u003Cspan class=\"token punctuation\">,\u003C/span> message \u003Cspan class=\"token builtin\">string\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\u003Cspan class=\"token keyword\">for\u003C/span> c \u003Cspan class=\"token operator\">:=\u003C/span> \u003Cspan class=\"token keyword\">range\u003C/span> clients \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">if\u003C/span> err \u003Cspan class=\"token operator\">:=\u003C/span> c\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">WriteMessage\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>ws\u003Cspan class=\"token punctuation\">.\u003C/span>TextMessage\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token punctuation\">[\u003C/span>\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token function\">byte\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>message\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span> err \u003Cspan class=\"token operator\">!=\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\tfmt\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Println\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"write error: err\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\t\tc\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">WriteMessage\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>ws\u003Cspan class=\"token punctuation\">.\u003C/span>CloseMessage\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token punctuation\">[\u003C/span>\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token builtin\">byte\u003C/span>\u003Cspan class=\"token punctuation\">&#123;\u003C/span>\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\t\tc\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Close\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token function\">userHub\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>cs \u003Cspan class=\"token operator\">*\u003C/span>channelSet\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\u003Cspan class=\"token keyword\">for\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">select\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">case\u003C/span> registerUser \u003Cspan class=\"token operator\">:=\u003C/span> \u003Cspan class=\"token operator\">&lt;-\u003C/span>cs\u003Cspan class=\"token punctuation\">.\u003C/span>register\u003Cspan class=\"token punctuation\">:\u003C/span>\n\t\t\tclients\u003Cspan class=\"token punctuation\">[\u003C/span>registerUser\u003Cspan class=\"token punctuation\">]\u003C/span> \u003Cspan class=\"token operator\">=\u003C/span> client\u003Cspan class=\"token punctuation\">&#123;\u003C/span>\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\t\t\tfmt\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Println\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"new client is connected\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n\t\t\u003Cspan class=\"token keyword\">case\u003C/span> unregisterUser \u003Cspan class=\"token operator\">:=\u003C/span> \u003Cspan class=\"token operator\">&lt;-\u003C/span>cs\u003Cspan class=\"token punctuation\">.\u003C/span>unregister\u003Cspan class=\"token punctuation\">:\u003C/span>\n\t\t\t\u003Cspan class=\"token function\">delete\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>clients\u003Cspan class=\"token punctuation\">,\u003C/span> unregisterUser\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\t\tfmt\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Println\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"connection terminated\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token function\">messageHub\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>cs \u003Cspan class=\"token operator\">*\u003C/span>channelSet\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\u003Cspan class=\"token keyword\">for\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">select\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">case\u003C/span> message \u003Cspan class=\"token operator\">:=\u003C/span> \u003Cspan class=\"token operator\">&lt;-\u003C/span>cs\u003Cspan class=\"token punctuation\">.\u003C/span>broadcast\u003Cspan class=\"token punctuation\">:\u003C/span>\n\t\t\tfmt\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Println\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"message received\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\t\t\u003Cspan class=\"token function\">sendBroadcastMessage\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>cs\u003Cspan class=\"token punctuation\">,\u003C/span> message\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token function\">main\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\u003Cspan class=\"token keyword\">var\u003C/span> channels \u003Cspan class=\"token operator\">=\u003C/span> channelSet\u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\tregister\u003Cspan class=\"token punctuation\">:\u003C/span>   \u003Cspan class=\"token function\">make\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">chan\u003C/span> \u003Cspan class=\"token operator\">*\u003C/span>ws\u003Cspan class=\"token punctuation\">.\u003C/span>Conn\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\tunregister\u003Cspan class=\"token punctuation\">:\u003C/span> \u003Cspan class=\"token function\">make\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">chan\u003C/span> \u003Cspan class=\"token operator\">*\u003C/span>ws\u003Cspan class=\"token punctuation\">.\u003C/span>Conn\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\tbroadcast\u003Cspan class=\"token punctuation\">:\u003C/span>  \u003Cspan class=\"token function\">make\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">chan\u003C/span> \u003Cspan class=\"token builtin\">string\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\t\u003Cspan class=\"token keyword\">go\u003C/span> \u003Cspan class=\"token function\">userHub\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token operator\">&amp;\u003C/span>channels\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token keyword\">go\u003C/span> \u003Cspan class=\"token function\">messageHub\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token operator\">&amp;\u003C/span>channels\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n\t\u003Cspan class=\"token operator\">...\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\n\u003Cp>각각 \u003Ccode>register\u003C/code> 채널에 유저 정보가 입력되면 유저를 전역변수 \u003Ccode>clients\u003C/code>에 추가하고, \u003Ccode>unregister\u003C/code> 채널에 입력되면 유저를 제거한다. \u003Ccode>broadcast\u003C/code> 채널에 메시지가 입력되면 메시지를 모든 유저에게 전달한다.\u003C/p>\n\u003Cp>\u003Ccode>*ws.Conn\u003C/code> 타입의 인스턴스는 각 웹소켓 클라이언트에 해당하는 것으로, \u003Ccode>*ws.Conn\u003C/code>의 \u003Ccode>ReadMessage()\u003C/code> 등을 호출하여 데이터를 읽거나 쓸 수 있다.\u003C/p>\n\u003Cbr>\n\u003Cp>유저의 웹소켓 세션에 관련된 부분은 다음과 같다.\u003C/p>\n\u003Cpre class=\"language-go\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-go\">\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token function\">main\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\u003Cspan class=\"token operator\">...\u003C/span>\n\n\tapp\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Get\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"/ws/\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\t\t\u003Cspan class=\"token keyword\">func\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>c \u003Cspan class=\"token operator\">*\u003C/span>fiber\u003Cspan class=\"token punctuation\">.\u003C/span>Ctx\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token builtin\">error\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\t\t\u003Cspan class=\"token keyword\">if\u003C/span> ws\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">IsWebSocketUpgrade\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>c\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\t\t\tc\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Next\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\t\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\t\t\t\t\u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span>\n\t\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\t\tws\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">New\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">func\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>c \u003Cspan class=\"token operator\">*\u003C/span>ws\u003Cspan class=\"token punctuation\">.\u003C/span>Conn\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\t\t\u003Cspan class=\"token keyword\">defer\u003C/span> \u003Cspan class=\"token keyword\">func\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\t\t\tchannels\u003Cspan class=\"token punctuation\">.\u003C/span>unregister \u003Cspan class=\"token operator\">&lt;-\u003C/span> c\n\t\t\t\t\tc\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Close\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\t\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n\t\t\t\tchannels\u003Cspan class=\"token punctuation\">.\u003C/span>register \u003Cspan class=\"token operator\">&lt;-\u003C/span> c\n\n\t\t\t\t\u003Cspan class=\"token keyword\">for\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\t\t\tmessageType\u003Cspan class=\"token punctuation\">,\u003C/span> message\u003Cspan class=\"token punctuation\">,\u003C/span> err \u003Cspan class=\"token operator\">:=\u003C/span> c\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">ReadMessage\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\t\t\t\t\u003Cspan class=\"token keyword\">if\u003C/span> err \u003Cspan class=\"token operator\">!=\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\t\t\t\t\u003Cspan class=\"token keyword\">if\u003C/span> ws\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">IsUnexpectedCloseError\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>err\u003Cspan class=\"token punctuation\">,\u003C/span> ws\u003Cspan class=\"token punctuation\">.\u003C/span>CloseGoingAway\u003Cspan class=\"token punctuation\">,\u003C/span> ws\u003Cspan class=\"token punctuation\">.\u003C/span>CloseAbnormalClosure\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\t\t\t\t\tfmt\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Println\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"read error:\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> err\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\t\t\t\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\t\t\t\t\t\t\u003Cspan class=\"token keyword\">return\u003C/span>\n\t\t\t\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\t\t\t\t\t\u003Cspan class=\"token keyword\">if\u003C/span> messageType \u003Cspan class=\"token operator\">==\u003C/span> ws\u003Cspan class=\"token punctuation\">.\u003C/span>TextMessage \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\t\t\t\tchannels\u003Cspan class=\"token punctuation\">.\u003C/span>broadcast \u003Cspan class=\"token operator\">&lt;-\u003C/span> \u003Cspan class=\"token function\">string\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>message\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\t\t\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span> \u003Cspan class=\"token keyword\">else\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\t\t\t\tfmt\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Println\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"websocket message recived of type\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> messageType\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\t\t\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\t\t\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\t\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\n\u003Cp>먼저 웹소켓을 사용할 수 있는지 검사한 후, 사용 가능하다면 웹소켓 연결을 생성한다.\n웹소켓 연결이 생성되면 \u003Ccode>register\u003C/code> 채널에 클라이언트 정보를 보내고, defer문을 통해 클라이언트가 웹소켓 연결을 끊으면 \u003Ccode>unregister\u003C/code> 채널에 클라이언트 정보를 보낼 수 있게끔 하였다.\u003C/p>\n\u003Cp>1:1 연결에서는 이러한 100줄 정도의 코드만으로도 시그널링 서버를 구현할 수 있다.\u003C/p>\n\u003Cbr>\n\u003Cp>전체 코드는 \u003Ca href=\"https://github.com/junhyuk0801/webrtc-mesh-server/tree/5d435d745a48ba3be0c1299163029364ec31a3bf\" rel=\"nofollow\">https://github.com/junhyuk0801/webrtc-mesh-server/tree/5d435d745a48ba3be0c1299163029364ec31a3bf\u003C/a>에서 찾아볼 수 있다.\u003C/p>\n\u003Cbr>\u003Cbr>\n\u003Ch2 id=\"개선할-점\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#개선할-점\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>개선할 점\u003C/h2>\n\u003Cp>일단 M:M으로 나아가기에 앞서, 위 예제에서 몇 가지 문제점을 찾아볼 수 있다.\u003C/p>\n\u003Cul>\u003Cli>서버가 1:1 연결 하나만 처리할 수 있음… 세션 정도는 만들어줄 필요가 있음.\u003C/li>\n\u003Cli>클라이언트 코드도 마찬가지로 상대방이 한 명이라고 가정하여 작성되어 있음. 여러 명의 유저와 통신할 수 있게끔 수정해야 함.\u003C/li>\n\u003Cli>유저가 나갈 때에 대한 처리가 부족함. 한 유저가 나가면 \u003Ccode>RTCPeerConnection\u003C/code>을 통해 유저가 나갔다는 사실을 전달받을 수 있겠지만, 그걸 통해 \u003Ccode>&lt;video&gt;\u003C/code> element를 지운다던지 하는 처리가 전혀 없음.\u003C/li>\n\u003Cli>고루틴을 여러 개 띄워서 전역 변수인 \u003Ccode>client\u003C/code>에 읽기/쓰기를 시도하는 반면, \u003Ccode>client\u003C/code>는 뮤텍스 등을 통해 보호되지 않음. 이 때문에 새로고침을 막 눌러서 연결을 빡세게 시도하면 data race로 인한 panic이 일어나서 서버가 곧잘 죽는 것을 확인할 수 있음\u003C/li>\n\u003Cli>모든 컴포넌트가 \u003Ccode>main.go\u003C/code> 한 파일에 몰려있음. 리팩토링을 통해 디커플링하는 겸 변수 이름도 Convention에 맞게 다시 지어주면 좋을 듯 함.\u003C/li>\u003C/ul>\n\u003Cp>또한 Mesh 형태의 many-to-many 연결을 구현하기 위해서는 시그널링 서버에서 특정 유저한테만 메시지를 보낼 수 있는 방법이 추가되어야 한다. WebRTC 연결을 생성하려는 대상이 아닌 다른 대상에게까지 메시지가 전달되면 오류가 발생하여 연결 설정이 제대로 안될 수 있기 때문이다.\u003C/p>\n\u003Cp>다음으로 다룰 예제에서 위 사항을 충족시킨 코드를 확인할 수 있을 것이다.\u003C/p>\n\u003Cbr>\u003Cbr>\n\u003Ch2 id=\"many-to-many-mesh-server\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#many-to-many-mesh-server\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>Many-to-Many Mesh Server\u003C/h2>\n\u003Cp>\u003Ccode>main.go\u003C/code>의 변경사항이다.\u003C/p>\n\u003Cpre class=\"language-go\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-go\">\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token function\">main\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\thub \u003Cspan class=\"token operator\">:=\u003C/span> \u003Cspan class=\"token function\">CreateHub\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n\t\u003Cspan class=\"token operator\">...\u003C/span>\n\n\tapp\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Get\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"/ws/:session\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">func\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>c \u003Cspan class=\"token operator\">*\u003C/span>fiber\u003Cspan class=\"token punctuation\">.\u003C/span>Ctx\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token builtin\">error\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span> \u003Cspan class=\"token comment\">// check if a client can establish websocket connection\u003C/span>\n\t\t\t\u003Cspan class=\"token keyword\">if\u003C/span> ws\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">IsWebSocketUpgrade\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>c\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\t\tc\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Next\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\t\t\t\u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span>\n\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\tws\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">New\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">func\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>conn \u003Cspan class=\"token operator\">*\u003C/span>ws\u003Cspan class=\"token punctuation\">.\u003C/span>Conn\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\t\u003Cspan class=\"token function\">WebsocketConnectionLoop\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>clientDataStore\u003Cspan class=\"token punctuation\">,\u003C/span> hub\u003Cspan class=\"token punctuation\">,\u003C/span> conn\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\n\u003Cp>우선, 이전에 전역변수로 선언되던 \u003Ccode>clients\u003C/code>는 각 세션별로 존재하며, 각 세션은 \u003Ccode>Hub\u003C/code>에서 만들어진다.\u003Cbr>\n또한 클라이언트별 웹소켓 루프를 별도의 함수로 지정하였다.\u003C/p>\n\u003Cbr>\n\u003Cp>웹소켓 루프 함수를 살펴보자.\u003C/p>\n\u003Cpre class=\"language-go\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-go\">\u003Cspan class=\"token comment\">// Websocket Session Loop for each client\u003C/span>\n\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token function\">WebsocketConnectionLoop\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>hub \u003Cspan class=\"token operator\">*\u003C/span>MessageHub\u003Cspan class=\"token punctuation\">,\u003C/span> conn \u003Cspan class=\"token operator\">*\u003C/span>ws\u003Cspan class=\"token punctuation\">.\u003C/span>Conn\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\tsession \u003Cspan class=\"token operator\">:=\u003C/span> \u003Cspan class=\"token function\">SessionName\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>conn\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Params\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"session\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n\tuuid\u003Cspan class=\"token punctuation\">,\u003C/span> err \u003Cspan class=\"token operator\">:=\u003C/span> \u003Cspan class=\"token function\">getUUID\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>conn\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token keyword\">if\u003C/span> err \u003Cspan class=\"token operator\">!=\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\tfmt\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Println\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"an error occurred getting uuid:\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> err\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\tconn\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Close\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\tfmt\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Printf\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"user %s joined on %s&#92;n\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> uuid\u003Cspan class=\"token punctuation\">,\u003C/span> session\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n\tclient \u003Cspan class=\"token operator\">:=\u003C/span> Client\u003Cspan class=\"token punctuation\">&#123;\u003C/span>Conn\u003Cspan class=\"token punctuation\">:\u003C/span> conn\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\thub\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">RegisterUser\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>session\u003Cspan class=\"token punctuation\">,\u003C/span> uuid\u003Cspan class=\"token punctuation\">,\u003C/span> client\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token comment\">// add current user's information to users list\u003C/span>\n\n\t\u003Cspan class=\"token keyword\">defer\u003C/span> \u003Cspan class=\"token keyword\">func\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span> \u003Cspan class=\"token comment\">// when user leaves\u003C/span>\n\t\tfmt\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Printf\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"user %s leaved from %s&#92;n\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> uuid\u003Cspan class=\"token punctuation\">,\u003C/span> session\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\thub\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">UnregisterUser\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>session\u003Cspan class=\"token punctuation\">,\u003C/span> uuid\u003Cspan class=\"token punctuation\">,\u003C/span> client\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token comment\">// delete current user's information from users list\u003C/span>\n\t\tconn\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Close\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n\t\u003Cspan class=\"token keyword\">for\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">var\u003C/span> messageData MessageData\n\t\terr \u003Cspan class=\"token operator\">:=\u003C/span> conn\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">ReadJSON\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token operator\">&amp;\u003C/span>messageData\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n\t\t\u003Cspan class=\"token keyword\">if\u003C/span> err \u003Cspan class=\"token operator\">!=\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\t\u003Cspan class=\"token keyword\">if\u003C/span> ws\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">IsUnexpectedCloseError\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>err\u003Cspan class=\"token punctuation\">,\u003C/span> ws\u003Cspan class=\"token punctuation\">.\u003C/span>CloseGoingAway\u003Cspan class=\"token punctuation\">,\u003C/span> ws\u003Cspan class=\"token punctuation\">.\u003C/span>CloseAbnormalClosure\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\t\tfmt\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Println\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"read error:\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> err\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\t\t\t\u003Cspan class=\"token keyword\">return\u003C/span>\n\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\t\thub\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">SendSignallingMessage\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>session\u003Cspan class=\"token punctuation\">,\u003C/span> uuid\u003Cspan class=\"token punctuation\">,\u003C/span> messageData\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\n\u003Cp>클라이언트가 접속하면 자신의 UUID를 보낸다. 클라이언트가 접속한 세션 정보와 이 UUID 정보를 바탕으로 \u003Ccode>RegisterUser()\u003C/code> 메소드를 호출하면 클라이언트가 세션에 등록된다. 클라이언트가 접속을 종료할 때는 \u003Ccode>UnregisterUser()\u003C/code>를 호출하여 유저의 퇴장을 처리한다.\u003C/p>\n\u003Cp>이후, ICE나 SDP 등 시그널링 메시지를 처리하는 단계로 진입한다. \u003Ccode>SendSignallingMessage()\u003C/code> 메소드를 통해 UUID로 구분하여 특정 대상에게 시그널링 메시지를 전달할 수 있다.\u003C/p>\n\u003Cbr>\n\u003Cp>다음으로, \u003Ccode>SessionDataStore\u003C/code>에 대해 살펴보자.\u003C/p>\n\u003Cpre class=\"language-go\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-go\">\u003Cspan class=\"token comment\">// Client struct type. you can add any data here\u003C/span>\n\u003Cspan class=\"token comment\">// Client struct type. you can add any data here\u003C/span>\n\u003Cspan class=\"token keyword\">type\u003C/span> Client \u003Cspan class=\"token keyword\">struct\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\tConn \u003Cspan class=\"token operator\">*\u003C/span>ws\u003Cspan class=\"token punctuation\">.\u003C/span>Conn\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token comment\">// Datastore of client\u003C/span>\n\u003Cspan class=\"token keyword\">type\u003C/span> SessionDataStore \u003Cspan class=\"token keyword\">struct\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\tmutex     sync\u003Cspan class=\"token punctuation\">.\u003C/span>RWMutex\n\tdataStore \u003Cspan class=\"token keyword\">map\u003C/span>\u003Cspan class=\"token punctuation\">[\u003C/span>UUIDType\u003Cspan class=\"token punctuation\">]\u003C/span>Client\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token comment\">// Create new datastore\u003C/span>\n\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token function\">MakeSessionDataStore\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token operator\">*\u003C/span>SessionDataStore \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token operator\">&amp;\u003C/span>SessionDataStore\u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\tdataStore\u003Cspan class=\"token punctuation\">:\u003C/span> \u003Cspan class=\"token function\">make\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">map\u003C/span>\u003Cspan class=\"token punctuation\">[\u003C/span>UUIDType\u003Cspan class=\"token punctuation\">]\u003C/span>Client\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\n\u003Cp>\u003Ccode>SessionDataStore\u003C/code>는 세션별로 유저들의 정보가 저장되는 자료구조로, \u003Ccode>GetSessionData()\u003C/code>, \u003Ccode>SetUserData()\u003C/code>, \u003Ccode>DeleteUserData()\u003C/code> 메소드를 통해 접근할 수 있다.\n\u003Ccode>RWMutex\u003C/code>를 설정하여 여러 고루틴에서 동시에 접근하여 생길 수 있는 Data race 문제를 해결하였다.\u003C/p>\n\u003Cbr>\n\u003Cp>채널을 관리하는 \u003Ccode>Hub\u003C/code>쪽을 살펴보자.\u003C/p>\n\u003Cpre class=\"language-go\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-go\">\u003Cspan class=\"token operator\">...\u003C/span>\n\n\u003Cspan class=\"token comment\">// Message data protocol\u003C/span>\n\u003Cspan class=\"token keyword\">type\u003C/span> MessageData \u003Cspan class=\"token keyword\">struct\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\tType    \u003Cspan class=\"token builtin\">string\u003C/span>      \u003Cspan class=\"token string\">&#96;json:\"type\"&#96;\u003C/span>\n\tData    \u003Cspan class=\"token keyword\">interface\u003C/span>\u003Cspan class=\"token punctuation\">&#123;\u003C/span>\u003Cspan class=\"token punctuation\">&#125;\u003C/span> \u003Cspan class=\"token string\">&#96;json:\"data\"&#96;\u003C/span>\n\tSrcUUID UUIDType    \u003Cspan class=\"token string\">&#96;json:\"srcuuid\"&#96;\u003C/span>\n\tDstUUID UUIDType    \u003Cspan class=\"token string\">&#96;json:\"dstuuid\"&#96;\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">type\u003C/span> ChannelSet \u003Cspan class=\"token keyword\">struct\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\tregister      \u003Cspan class=\"token keyword\">chan\u003C/span> UserInfo\n\tunregister    \u003Cspan class=\"token keyword\">chan\u003C/span> UserInfo\n\tdeleteSession \u003Cspan class=\"token keyword\">chan\u003C/span> \u003Cspan class=\"token builtin\">bool\u003C/span>\n\tbroadcast     \u003Cspan class=\"token keyword\">chan\u003C/span> MessageInfo\n\tsignaling     \u003Cspan class=\"token keyword\">chan\u003C/span> MessageInfo\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token comment\">// Set of channels\u003C/span>\n\u003Cspan class=\"token keyword\">type\u003C/span> Hub \u003Cspan class=\"token keyword\">struct\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\tmutex    sync\u003Cspan class=\"token punctuation\">.\u003C/span>RWMutex\n\tchannels \u003Cspan class=\"token keyword\">map\u003C/span>\u003Cspan class=\"token punctuation\">[\u003C/span>SessionName\u003Cspan class=\"token punctuation\">]\u003C/span>ChannelSet\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token function\">CreateHub\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token operator\">*\u003C/span>Hub \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\thub \u003Cspan class=\"token operator\">:=\u003C/span> Hub\u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\tchannels\u003Cspan class=\"token punctuation\">:\u003C/span> \u003Cspan class=\"token function\">make\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">map\u003C/span>\u003Cspan class=\"token punctuation\">[\u003C/span>SessionName\u003Cspan class=\"token punctuation\">]\u003C/span>ChannelSet\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\t\u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token operator\">&amp;\u003C/span>hub\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>h \u003Cspan class=\"token operator\">*\u003C/span>Hub\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token function\">SendBroadcastMessage\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>session SessionName\u003Cspan class=\"token punctuation\">,\u003C/span> uuid UUIDType\u003Cspan class=\"token punctuation\">,\u003C/span> message MessageData\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\th\u003Cspan class=\"token punctuation\">.\u003C/span>mutex\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">RLock\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token keyword\">defer\u003C/span> h\u003Cspan class=\"token punctuation\">.\u003C/span>mutex\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">RUnlock\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n\th\u003Cspan class=\"token punctuation\">.\u003C/span>channels\u003Cspan class=\"token punctuation\">[\u003C/span>session\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>broadcast \u003Cspan class=\"token operator\">&lt;-\u003C/span> MessageInfo\u003Cspan class=\"token punctuation\">&#123;\u003C/span>session\u003Cspan class=\"token punctuation\">,\u003C/span> message\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>h \u003Cspan class=\"token operator\">*\u003C/span>Hub\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token function\">SendSignallingMessage\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>session SessionName\u003Cspan class=\"token punctuation\">,\u003C/span> uuid UUIDType\u003Cspan class=\"token punctuation\">,\u003C/span> message MessageData\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\th\u003Cspan class=\"token punctuation\">.\u003C/span>mutex\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">RLock\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token keyword\">defer\u003C/span> h\u003Cspan class=\"token punctuation\">.\u003C/span>mutex\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">RUnlock\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n\th\u003Cspan class=\"token punctuation\">.\u003C/span>channels\u003Cspan class=\"token punctuation\">[\u003C/span>session\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>signaling \u003Cspan class=\"token operator\">&lt;-\u003C/span> MessageInfo\u003Cspan class=\"token punctuation\">&#123;\u003C/span>session\u003Cspan class=\"token punctuation\">,\u003C/span> message\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\n\u003Cp>\u003Ccode>Hub\u003C/code>는 각 세션 별로 채널을 만들고 관리하는 역할이다. \u003Ccode>Hub\u003C/code>의 메소드는 기본적으로 호출이 되면 유저의 세션에 따라 대응되는 채널에 정보를 집어넣는다. 이 채널은 각 세션별 고루틴으로 연결되어, 해당 고루틴에서 처리된다.\u003C/p>\n\u003Cpre class=\"language-go\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-go\">\n\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>h \u003Cspan class=\"token operator\">*\u003C/span>Hub\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token function\">RegisterUser\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>session SessionName\u003Cspan class=\"token punctuation\">,\u003C/span> uuid UUIDType\u003Cspan class=\"token punctuation\">,\u003C/span> client Client\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token builtin\">error\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\u003Cspan class=\"token keyword\">if\u003C/span> \u003Cspan class=\"token boolean\">_\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> ok \u003Cspan class=\"token operator\">:=\u003C/span> h\u003Cspan class=\"token punctuation\">.\u003C/span>channels\u003Cspan class=\"token punctuation\">[\u003C/span>session\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token punctuation\">;\u003C/span> \u003Cspan class=\"token operator\">!\u003C/span>ok \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\tchannelSet\u003Cspan class=\"token punctuation\">,\u003C/span> err \u003Cspan class=\"token operator\">:=\u003C/span> \u003Cspan class=\"token function\">RunSessionLoop\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">if\u003C/span> err \u003Cspan class=\"token operator\">!=\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\t\u003Cspan class=\"token keyword\">return\u003C/span> err\n\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\t\th\u003Cspan class=\"token punctuation\">.\u003C/span>mutex\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Lock\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\th\u003Cspan class=\"token punctuation\">.\u003C/span>channels\u003Cspan class=\"token punctuation\">[\u003C/span>session\u003Cspan class=\"token punctuation\">]\u003C/span> \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token operator\">*\u003C/span>channelSet\n\t\th\u003Cspan class=\"token punctuation\">.\u003C/span>mutex\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Unlock\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\th\u003Cspan class=\"token punctuation\">.\u003C/span>mutex\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">RLock\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\th\u003Cspan class=\"token punctuation\">.\u003C/span>channels\u003Cspan class=\"token punctuation\">[\u003C/span>session\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>register \u003Cspan class=\"token operator\">&lt;-\u003C/span> UserInfo\u003Cspan class=\"token punctuation\">&#123;\u003C/span>session\u003Cspan class=\"token punctuation\">,\u003C/span> uuid\u003Cspan class=\"token punctuation\">,\u003C/span> client\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\th\u003Cspan class=\"token punctuation\">.\u003C/span>mutex\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">RUnlock\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n\t\u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>h \u003Cspan class=\"token operator\">*\u003C/span>Hub\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token function\">UnregisterUser\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>session SessionName\u003Cspan class=\"token punctuation\">,\u003C/span> uuid UUIDType\u003Cspan class=\"token punctuation\">,\u003C/span> client Client\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\th\u003Cspan class=\"token punctuation\">.\u003C/span>mutex\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">RLock\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\th\u003Cspan class=\"token punctuation\">.\u003C/span>channels\u003Cspan class=\"token punctuation\">[\u003C/span>session\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>unregister \u003Cspan class=\"token operator\">&lt;-\u003C/span> UserInfo\u003Cspan class=\"token punctuation\">&#123;\u003C/span>session\u003Cspan class=\"token punctuation\">,\u003C/span> uuid\u003Cspan class=\"token punctuation\">,\u003C/span> client\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\ttoDetete \u003Cspan class=\"token operator\">:=\u003C/span> \u003Cspan class=\"token operator\">&lt;-\u003C/span>h\u003Cspan class=\"token punctuation\">.\u003C/span>channels\u003Cspan class=\"token punctuation\">[\u003C/span>session\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>deleteSession\n\th\u003Cspan class=\"token punctuation\">.\u003C/span>mutex\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">RUnlock\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n\t\u003Cspan class=\"token keyword\">if\u003C/span> toDetete \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\th\u003Cspan class=\"token punctuation\">.\u003C/span>mutex\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Lock\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\t\u003Cspan class=\"token function\">delete\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>h\u003Cspan class=\"token punctuation\">.\u003C/span>channels\u003Cspan class=\"token punctuation\">,\u003C/span> session\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\th\u003Cspan class=\"token punctuation\">.\u003C/span>mutex\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Unlock\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\n\u003Cp>\u003Ccode>RegisterUser()\u003C/code>에서는 채널에 등록할 유저 정보를을 넣기에 앞서 채널이 있는지 검사하여, 없다면 각 세션의 고루틴 및 채널을 생성한다. \u003Ccode>UnregisterUser()\u003C/code>에서는 세션에 더이상 유저가 없는 경우 채널을 삭제하는 로직까지 추가된다.\u003C/p>\n\u003Cbr>\n\u003Cp>마지막으로 각 세션의 고루틴을 실행하는 \u003Ccode>RunSessionLoop()\u003C/code> 함수를 살펴보자.\u003C/p>\n\u003Cpre class=\"language-go\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-go\">\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token function\">RunSessionLoop\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token operator\">*\u003C/span>ChannelSet\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token builtin\">error\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\tchannelSet \u003Cspan class=\"token operator\">:=\u003C/span> ChannelSet\u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\tregister\u003Cspan class=\"token punctuation\">:\u003C/span>      \u003Cspan class=\"token function\">make\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">chan\u003C/span> UserInfo\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\tunregister\u003Cspan class=\"token punctuation\">:\u003C/span>    \u003Cspan class=\"token function\">make\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">chan\u003C/span> UserInfo\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\tdeleteSession\u003Cspan class=\"token punctuation\">:\u003C/span> \u003Cspan class=\"token function\">make\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">chan\u003C/span> \u003Cspan class=\"token builtin\">bool\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\tbroadcast\u003Cspan class=\"token punctuation\">:\u003C/span>     \u003Cspan class=\"token function\">make\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">chan\u003C/span> MessageInfo\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\tsignaling\u003Cspan class=\"token punctuation\">:\u003C/span>     \u003Cspan class=\"token function\">make\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token keyword\">chan\u003C/span> MessageInfo\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\tclients \u003Cspan class=\"token operator\">:=\u003C/span> \u003Cspan class=\"token function\">MakeSessionDataStore\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n\t\u003Cspan class=\"token keyword\">go\u003C/span> \u003Cspan class=\"token keyword\">func\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\tloop\u003Cspan class=\"token punctuation\">:\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">for\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\t\u003Cspan class=\"token keyword\">select\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\t\u003Cspan class=\"token keyword\">case\u003C/span> registerUser \u003Cspan class=\"token operator\">:=\u003C/span> \u003Cspan class=\"token operator\">&lt;-\u003C/span>channelSet\u003Cspan class=\"token punctuation\">.\u003C/span>register\u003Cspan class=\"token punctuation\">:\u003C/span>\n\t\t\t\terr \u003Cspan class=\"token operator\">:=\u003C/span> \u003Cspan class=\"token function\">handleUserRegister\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>clients\u003Cspan class=\"token punctuation\">,\u003C/span> registerUser\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\t\t\t\u003Cspan class=\"token keyword\">if\u003C/span> err \u003Cspan class=\"token operator\">!=\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\t\t\tfmt\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Println\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"an error occurred while handling user registration, but still process :\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> err\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\t\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\t\t\t\u003Cspan class=\"token keyword\">case\u003C/span> unregisterUser \u003Cspan class=\"token operator\">:=\u003C/span> \u003Cspan class=\"token operator\">&lt;-\u003C/span>channelSet\u003Cspan class=\"token punctuation\">.\u003C/span>unregister\u003Cspan class=\"token punctuation\">:\u003C/span>\n\t\t\t\terr \u003Cspan class=\"token operator\">:=\u003C/span> \u003Cspan class=\"token function\">handleUserUnregister\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>clients\u003Cspan class=\"token punctuation\">,\u003C/span> unregisterUser\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\t\t\t\u003Cspan class=\"token keyword\">if\u003C/span> err \u003Cspan class=\"token operator\">!=\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\t\t\tfmt\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Println\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"an error occurred while handling user unregistration, but still process :\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> err\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\t\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\t\t\t\t\u003Cspan class=\"token keyword\">if\u003C/span> clients\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">IsEmpty\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>unregisterUser\u003Cspan class=\"token punctuation\">.\u003C/span>Session\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\t\t\tchannelSet\u003Cspan class=\"token punctuation\">.\u003C/span>deleteSession \u003Cspan class=\"token operator\">&lt;-\u003C/span> \u003Cspan class=\"token boolean\">true\u003C/span>\n\t\t\t\t\t\u003Cspan class=\"token keyword\">break\u003C/span> loop\n\t\t\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span> \u003Cspan class=\"token keyword\">else\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\t\t\tchannelSet\u003Cspan class=\"token punctuation\">.\u003C/span>deleteSession \u003Cspan class=\"token operator\">&lt;-\u003C/span> \u003Cspan class=\"token boolean\">false\u003C/span>\n\t\t\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\t\t\t\u003Cspan class=\"token keyword\">case\u003C/span> messageData \u003Cspan class=\"token operator\">:=\u003C/span> \u003Cspan class=\"token operator\">&lt;-\u003C/span>channelSet\u003Cspan class=\"token punctuation\">.\u003C/span>broadcast\u003Cspan class=\"token punctuation\">:\u003C/span>\n\t\t\t\terr \u003Cspan class=\"token operator\">:=\u003C/span> \u003Cspan class=\"token function\">sendBroadcastMessage\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>clients\u003Cspan class=\"token punctuation\">,\u003C/span> messageData\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\t\t\t\u003Cspan class=\"token keyword\">if\u003C/span> err \u003Cspan class=\"token operator\">!=\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\t\t\tfmt\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Println\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"an error occurred while sending broadcast message, but still process :\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> err\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\t\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\t\t\t\u003Cspan class=\"token keyword\">case\u003C/span> messageData \u003Cspan class=\"token operator\">:=\u003C/span> \u003Cspan class=\"token operator\">&lt;-\u003C/span>channelSet\u003Cspan class=\"token punctuation\">.\u003C/span>signaling\u003Cspan class=\"token punctuation\">:\u003C/span>\n\t\t\t\terr \u003Cspan class=\"token operator\">:=\u003C/span> \u003Cspan class=\"token function\">sendSignalingMessage\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>clients\u003Cspan class=\"token punctuation\">,\u003C/span> messageData\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\t\t\t\u003Cspan class=\"token keyword\">if\u003C/span> err \u003Cspan class=\"token operator\">!=\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\t\t\tfmt\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Println\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"an error occurred while sending signaling message, but still process :\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> err\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\t\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\t\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n\t\u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token operator\">&amp;\u003C/span>channelSet\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\n\u003Cp>채널 목록 및 \u003Ccode>MakeSessionDataStore()\u003C/code>으로 세션별 데이터 저장소를 생성하고 for~switch loop으로 채널에서 데이터를 읽어와 처리한다.\u003C/p>\n\u003Cbr>\n\u003Cp>전체 코드는 \u003Ca href=\"https://github.com/junhyuk0801/webrtc-mesh-server\" rel=\"nofollow\">https://github.com/junhyuk0801/webrtc-mesh-server\u003C/a>에서 찾아볼 수 있다.\u003C/p>\n\u003Cbr>\u003Cbr>\n\u003Ch2 id=\"후기\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#후기\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>후기\u003C/h2>\n\u003Cp>many-to-many 만들 때 시그널링 메시지를 브로드캐스팅으로 보내버려서 피어 수가 3명이 넘어가면 연결이 제대로 안됐었는데, 뭐가 문제인지 찾는 데 한참 걸렸다.\u003C/p>\n\u003Cp>개인적으로 WebRTC 좀 친다고 생각했었는데 아직 갈 길이 먼 것 같다..\u003C/p>",{"title":3,"date":4,"excerpt":5,"categories":6,"coverImage":10,"coverWidth":11,"coverHeight":12,"indexed":13,"slug":14},"Golang으로 WebRTC Mesh Server 구현하기","2023-02-18T00:00:00.000Z","Golang을 통해 M:N WebRTC 시그널링 서버를 만들어보았습니다",[7,8,9],"WebRTC","Golang","Signaling Server","/post_img/WebRTC/cover.png",16,9,true,"Networking/WebRTC/many to many signaling server"],"uses":{"params":["post"]}}]}
