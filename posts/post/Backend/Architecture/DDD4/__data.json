{"type":"data","nodes":[{"type":"data","data":[null],"uses":{}},{"type":"data","data":[{"PostContent":1,"meta":2},"\u003Ch2 id=\"팩토리-패턴\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#팩토리-패턴\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>팩토리 패턴\u003C/h2>\n\u003Chr>\n\u003Cp>팩토리 패턴은 주로 객체지향 프로그래밍에서 찾아볼 수 있으며, 다른 오브젝트를 생성하는 주된 책임을 가지고 있는 개체로 정의된다.\n객체의 기본 속성을 설정하는 데 유용하며, 일반적으로 객체의 생성 외에 다른 목적을 가지면 안된다.\u003C/p>\n\u003Cp>Go는 객체지향 언어가 아님에도 팩토리 패턴은 꽤 유용하다.\n아래 예제는 팩토리 패턴의 간단한 예제이다.\u003C/p>\n\u003Cdetails>\u003Csummary>예제 코드\u003C/summary>\n\u003Cpre class=\"language-go\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-go\">\u003Cspan class=\"token keyword\">package\u003C/span> chapter4\n\n\u003Cspan class=\"token keyword\">import\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\n\t\u003Cspan class=\"token string\">\"errors\"\u003C/span>\n\t\u003Cspan class=\"token string\">\"fmt\"\u003C/span>\n\t\u003Cspan class=\"token string\">\"log\"\u003C/span>\n\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n\u003Cspan class=\"token keyword\">type\u003C/span> Car \u003Cspan class=\"token keyword\">interface\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\u003Cspan class=\"token function\">BeepBeep\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">type\u003C/span> BMW \u003Cspan class=\"token keyword\">struct\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\theatedSeatSubscriptionEnabled \u003Cspan class=\"token builtin\">bool\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>B BMW\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token function\">BeepBeep\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\u003Cspan class=\"token comment\">// TODO: implement me\u003C/span>\n\t\u003Cspan class=\"token function\">panic\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"implement me\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">type\u003C/span> Tesla \u003Cspan class=\"token keyword\">struct\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\tautopilotEnabled \u003Cspan class=\"token builtin\">bool\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>T Tesla\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token function\">BeepBeep\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\u003Cspan class=\"token comment\">// TODO: implement me\u003C/span>\n\t\u003Cspan class=\"token function\">panic\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"implement me\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token function\">BuildCar\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>carType \u003Cspan class=\"token builtin\">string\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>Car\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token builtin\">error\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\u003Cspan class=\"token keyword\">switch\u003C/span> carType \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\u003Cspan class=\"token keyword\">case\u003C/span> \u003Cspan class=\"token string\">\"bmw\"\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">return\u003C/span> BMW\u003Cspan class=\"token punctuation\">&#123;\u003C/span>heatedSeatSubscriptionEnabled\u003Cspan class=\"token punctuation\">:\u003C/span> \u003Cspan class=\"token boolean\">true\u003C/span>\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span>\n\t\u003Cspan class=\"token keyword\">case\u003C/span> \u003Cspan class=\"token string\">\"tesla\"\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">return\u003C/span> Tesla\u003Cspan class=\"token punctuation\">&#123;\u003C/span>autopilotEnabled\u003Cspan class=\"token punctuation\">:\u003C/span> \u003Cspan class=\"token boolean\">true\u003C/span>\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span>\n\t\u003Cspan class=\"token keyword\">default\u003C/span>\u003Cspan class=\"token punctuation\">:\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> errors\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">New\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"unknown car type\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token function\">main\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\tmyCar\u003Cspan class=\"token punctuation\">,\u003C/span> err \u003Cspan class=\"token operator\">:=\u003C/span> \u003Cspan class=\"token function\">BuildCar\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"tesla\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token keyword\">if\u003C/span> err \u003Cspan class=\"token operator\">!=\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\tlog\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Fatal\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>err\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\t\u003Cspan class=\"token comment\">// TODO: do something with myCar\u003C/span>\n\tfmt\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Printf\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"%v is my car&#92;n\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> myCar\u003Cspan class=\"token punctuation\">)\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\u003C/details>\n\u003Cp>위 예제에서는 \u003Ccode>Car\u003C/code> 인터페이스를 충족하는 \u003Ccode>BMW\u003C/code>와 \u003Ccode>Tesla\u003C/code> 구조체를 정의하였고, \u003Ccode>Car\u003C/code> 오브젝트의 필드값을 초기화하여 반환하는 팩토리 함수 \u003Ccode>BuildCar\u003C/code>를 정의하였다.\n또한, 자동차의 타입이 유효하지 않을 경우 에러를 반환한다.\u003C/p>\n\u003Cp>팩토리 패턴은 복잡한 구조체의 생성을 표준화하는 좋은 방법이며, 애플리케이션이 복잡해질 수록 유용하다.\n또한 팩토리를 통해 Encapsulation을 달성할 수 있고, 객체 생성시 비즈니스 불변성을 적용하여 도메인 모델을 단순화할 수 있다.\u003C/p>\n\u003Cp>가령 미용실 예약 시스템을 구현한다고 가정해보자.\n누군가 업무 시간이 지나고 예약하려 하는 경우, 다음과 같이 팩토리 함수를 통해 예외를 발생시킬 수 있다.\u003C/p>\n\u003Cdetails>\u003Csummary>예제 코드\u003C/summary>\n\u003Cpre class=\"language-go\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-go\">\u003Cspan class=\"token keyword\">package\u003C/span> chapter4\n\n\u003Cspan class=\"token keyword\">import\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\n\u003Cspan class=\"token string\">\"errors\"\u003C/span>\n\u003Cspan class=\"token string\">\"github.com/google/uuid\"\u003C/span>\n\u003Cspan class=\"token string\">\"time\"\u003C/span>\n\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n\u003Cspan class=\"token keyword\">type\u003C/span> Booking \u003Cspan class=\"token keyword\">struct\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\nid uuid\u003Cspan class=\"token punctuation\">.\u003C/span>UUID\nuserId uuid\u003Cspan class=\"token punctuation\">.\u003C/span>UUID\nfrom time\u003Cspan class=\"token punctuation\">.\u003C/span>Time\nto time\u003Cspan class=\"token punctuation\">.\u003C/span>Time\nhairDresserId uuid\u003Cspan class=\"token punctuation\">.\u003C/span>UUID\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token function\">CreateBooking\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>from time\u003Cspan class=\"token punctuation\">.\u003C/span>Time\u003Cspan class=\"token punctuation\">,\u003C/span> to time\u003Cspan class=\"token punctuation\">.\u003C/span>Time\u003Cspan class=\"token punctuation\">,\u003C/span> userId uuid\u003Cspan class=\"token punctuation\">.\u003C/span>UUID\u003Cspan class=\"token punctuation\">,\u003C/span> hairDresserId uuid\u003Cspan class=\"token punctuation\">.\u003C/span>UUID\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token operator\">*\u003C/span>Booking\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token builtin\">error\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\nclosingTime\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token boolean\">_\u003C/span> \u003Cspan class=\"token operator\">:=\u003C/span> time\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Parse\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>time\u003Cspan class=\"token punctuation\">.\u003C/span>Kitchen\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token string\">\"17:00pm\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n    \u003Cspan class=\"token keyword\">if\u003C/span> from\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">After\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>closingTime\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n    \t\u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> errors\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">New\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"no appointments after closing time\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n    \u003Cspan class=\"token punctuation\">&#125;\u003C/span> \u003Cspan class=\"token keyword\">else\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n    \t\u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token operator\">&amp;\u003C/span>Booking\u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n    \t\thairDresserId\u003Cspan class=\"token punctuation\">:\u003C/span> hairDresserId\u003Cspan class=\"token punctuation\">,\u003C/span>\n    \t\tid\u003Cspan class=\"token punctuation\">:\u003C/span>            uuid\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">New\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\n    \t\tuserId\u003Cspan class=\"token punctuation\">:\u003C/span>        userId\u003Cspan class=\"token punctuation\">,\u003C/span>\n    \t\tfrom\u003Cspan class=\"token punctuation\">:\u003C/span>          from\u003Cspan class=\"token punctuation\">,\u003C/span>\n    \t\tto\u003Cspan class=\"token punctuation\">:\u003C/span>            to\u003Cspan class=\"token punctuation\">,\u003C/span>\n    \t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span>\n    \u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\u003C/details>\n\u003Cp>위 예제는 엔티티를 생성하는 팩토리 함수를 보여주며, 엔티티의 식별자는 팩토리에서 생성된다.\u003C/p>\n\u003Cp>엔티티 팩토리에 대헤 조금 더 살펴보자.\u003C/p>\n\u003Cbr>\n\u003Ch3 id=\"엔티티-팩토리\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#엔티티-팩토리\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>엔티티 팩토리\u003C/h3>\n\u003Cp>앞선 포스트에서 설명하였듯 엔티티에는 식별자가 있고, 인스턴스화하기 위한 최소한의 요구사항이 존재한다.\n따라서 팩토리를 만들 때 이러한 요구사항을 충족시켜야 하며, 다른 속성을 설정하려는 경우 이를 위한 다른 함수를 제공할 수 있다.\u003C/p>\n\u003Cp>엔티티 팩토리 함수를 만들 때는 팩토리 함수가 식별자를 생성할지, 아니면 파라미터로 받을지 결정해야 한다.\n둘 다 가능하지만, 되도록이면 식별자를 팩토리 함수에서 생성하는 것이 더 좋은 방법이다.\u003C/p>\n\u003Cbr>\u003Cbr>\n\u003Ch2 id=\"레포지토리-패턴\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#레포지토리-패턴\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>레포지토리 패턴\u003C/h2>\n\u003Chr>\n\u003Cp>레포지토리 패턴은 데이터 저장소에 접근하기 위해 필요한 코드의 일부이다.\n데이터 저장소는 파일 시스템, 메모리, 스프레드시트, S3 등이 있을 수 있으나, 대부분의 프로젝트에서는 데이터베이스에 해당한다.\u003C/p>\n\u003Cp>레포지토리 계층을 사용함으로써 데이터에 액세스하는 코드를 중앙화하여 관리할 수 있고, 특정 데이터베이스에 코드가 종속되지 않도록 할 수 있다.\n예를 들면 한 클라우드에서 다른 클라우드로 마이그레이션하는 경우 데이터베이스 설정이 약간 달라질 수 있다. 이를테면 한 MySQL에서 NoSQL로 이동하는 경우이다.\n이 경우 시스템의 일부분만, 즉 레포지토리 계층만 다시 설계하면 된다.\u003C/p>\n\u003Cp>일부 개발자는 다른 채널(CQRS: Command Query Responsibility Segregation 등)을 통해 데이터베이스에 쿼리를 보내는 것을 선호한다.\n이는 쿼리가 데이터베이스의 상태를 변경하면 안되기 때문에 작동하지만, 이제 막 시작하는 경우라면 데이터베이스와의 모든 상호작용이 레포지토리 계층에서 일어나게 하는 것이 좋다.\u003C/p>\n\u003Cp>레포지토리 계층에서 테이블 하나당 한 개의 구조체를 만드는 경우가 많은데, 그보단 애그리거트당 하나의 구조체를 만드는 것이 더 좋다. 다음 그림을 보자.\u003C/p>\n\u003Ch3 id=\"그림\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#그림\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>그림\u003C/h3>\n\u003Cp>위 그림에서 데이터베이스 테이블과 레포지토리 계층의 명확한 차이를 볼 수 있다. 주목할 부분은 레포지토리 계층에서 한 개 이상의 테이블을 사용할 수 있다는 것이다.\n또한, 도메인 레이어는 레포지토리 레이어와 디커플링되어 있다.\nDDD를 사용한다면 위와 같은 시스템을 구축하는 것이 좋다.\u003C/p>\n\u003Cbr>\n\u003Cp>이전 장의 예약 시스템 예제에서 계속하여, 미용실 예약 정보를 데이터베이스에 저장하려 한다. 먼저 레포지토리 계층에 해당하는 인터페이스를 정의한다.\u003C/p>\n\u003Cpre class=\"language-go\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-go\">\u003Cspan class=\"token keyword\">package\u003C/span> chapter4\n\n\u003Cspan class=\"token keyword\">import\u003C/span> \u003Cspan class=\"token string\">\"context\"\u003C/span>\n\n\u003Cspan class=\"token keyword\">type\u003C/span> BookingRepository \u003Cspan class=\"token keyword\">interface\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\u003Cspan class=\"token function\">SaveBooking\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>ctx context\u003Cspan class=\"token punctuation\">.\u003C/span>Context\u003Cspan class=\"token punctuation\">,\u003C/span> booking Booking\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token builtin\">error\u003C/span>\n\t\u003Cspan class=\"token function\">DeleteBooking\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>ctx context\u003Cspan class=\"token punctuation\">.\u003C/span>Context\u003Cspan class=\"token punctuation\">,\u003C/span> booking Booking\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token builtin\">error\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\n\u003Cp>이 인터페이스는 \u003Ccode>Booking\u003C/code> 팩토리 및 서비스 계층과 같은 계층에 정의되었는데, 그 이유는 다음 장에서 설명한다.\u003C/p>\n\u003Cp>PostgreSQL 데이터베이스를 위한 간단한 레포지토리 레이어를 구현해보자.\u003C/p>\n\u003Cdetails>\u003Csummary>예제 코드\u003C/summary>\n\u003Cpre class=\"language-go\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-go\">\u003Cspan class=\"token keyword\">package\u003C/span> chapter4\n\n\u003Cspan class=\"token keyword\">import\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\n\t\u003Cspan class=\"token string\">\"context\"\u003C/span>\n\t\u003Cspan class=\"token string\">\"fmt\"\u003C/span>\n\t\u003Cspan class=\"token string\">\"github.com/jackc/pgx/v4\"\u003C/span>\n\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n\u003Cspan class=\"token keyword\">type\u003C/span> BookingRepository \u003Cspan class=\"token keyword\">interface\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\u003Cspan class=\"token function\">SaveBooking\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>ctx context\u003Cspan class=\"token punctuation\">.\u003C/span>Context\u003Cspan class=\"token punctuation\">,\u003C/span> booking Booking\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token builtin\">error\u003C/span>\n\t\u003Cspan class=\"token function\">DeleteBooking\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>ctx context\u003Cspan class=\"token punctuation\">.\u003C/span>Context\u003Cspan class=\"token punctuation\">,\u003C/span> booking Booking\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token builtin\">error\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">type\u003C/span> PostgresRepository \u003Cspan class=\"token keyword\">struct\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\tconnPool \u003Cspan class=\"token operator\">*\u003C/span>pgx\u003Cspan class=\"token punctuation\">.\u003C/span>Conn\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token function\">NewPostgresRepository\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>ctx context\u003Cspan class=\"token punctuation\">.\u003C/span>Context\u003Cspan class=\"token punctuation\">,\u003C/span> dbConnString \u003Cspan class=\"token builtin\">string\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token operator\">*\u003C/span>PostgresRepository\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token builtin\">error\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\tconn\u003Cspan class=\"token punctuation\">,\u003C/span> err \u003Cspan class=\"token operator\">:=\u003C/span> pgx\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Connect\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>ctx\u003Cspan class=\"token punctuation\">,\u003C/span> dbConnString\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token keyword\">if\u003C/span> err \u003Cspan class=\"token operator\">!=\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> fmt\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Errorf\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"failed to connect to database: %w\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> err\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\t\u003Cspan class=\"token keyword\">defer\u003C/span> conn\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Close\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>ctx\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token operator\">&amp;\u003C/span>PostgresRepository\u003Cspan class=\"token punctuation\">&#123;\u003C/span>connPool\u003Cspan class=\"token punctuation\">:\u003C/span> conn\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>p PostgresRepository\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token function\">SaveBooking\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>ctx context\u003Cspan class=\"token punctuation\">.\u003C/span>Context\u003Cspan class=\"token punctuation\">,\u003C/span> booking Booking\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token builtin\">error\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\u003Cspan class=\"token boolean\">_\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> err \u003Cspan class=\"token operator\">:=\u003C/span> p\u003Cspan class=\"token punctuation\">.\u003C/span>connPool\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Exec\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\n\t\tctx\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\t\u003Cspan class=\"token string\">\"INSERT INTO bookings (id, from, to, hair_dresser_id) VALUES ($1, $2, $3, $4)\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\tbooking\u003Cspan class=\"token punctuation\">.\u003C/span>id\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">String\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\tbooking\u003Cspan class=\"token punctuation\">.\u003C/span>from\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">String\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\tbooking\u003Cspan class=\"token punctuation\">.\u003C/span>to\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">String\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\tbooking\u003Cspan class=\"token punctuation\">.\u003C/span>hairDresserId\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">String\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n\t\u003Cspan class=\"token keyword\">if\u003C/span> err \u003Cspan class=\"token operator\">!=\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">return\u003C/span> fmt\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Errorf\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"failed to save booking: %w\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> err\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\t\u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>p PostgresRepository\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token function\">DeleteBooking\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>ctx context\u003Cspan class=\"token punctuation\">.\u003C/span>Context\u003Cspan class=\"token punctuation\">,\u003C/span> booking Booking\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token builtin\">error\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\u003Cspan class=\"token boolean\">_\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> err \u003Cspan class=\"token operator\">:=\u003C/span> p\u003Cspan class=\"token punctuation\">.\u003C/span>connPool\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Exec\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\n\t\tctx\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\t\u003Cspan class=\"token string\">\"DELETE FROM bookings WHERE id = $1\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\tbooking\u003Cspan class=\"token punctuation\">.\u003C/span>id\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n\t\u003Cspan class=\"token keyword\">if\u003C/span> err \u003Cspan class=\"token operator\">!=\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">return\u003C/span> fmt\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Errorf\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"failed to delete booking: %w\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> err\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\t\u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\u003C/details>\n\u003Cp>코드에서 볼 수 있듯, 데이터베이스와 상호작용하는 것은 꽤 간단하며, 도메인 로직이 들어가지 않는다.\n도메인 로직은 애플리케이션 서비스 계층에 들어가며, 애플리케이션 서비스 계층은 다음 장에서 다룬다.\u003C/p>\n\u003Cbr>\u003Cbr>\n\u003Ch2 id=\"서비스-계층\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#서비스-계층\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>서비스 계층\u003C/h2>\n\u003Chr>\n\u003Cp>DDD에서 코드를 조직화하기 위해 몇 가지 종류의 서비스를 사용한다.\n각각 애플리케이션 서비스, 도메인 서비스, 인프라스트럭처 서비스이다.\u003C/p>\n\u003Cbr>\n\u003Ch3 id=\"도메인-서비스\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#도메인-서비스\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>도메인 서비스\u003C/h3>\n\u003Cp>도메인 서비스는 도메인 내에서 특정 작업을 수행하는 stateless한 연산이다.\n엔티티 혹은 밸류 오브젝트로 모델링하는 좋은 방법을 찾을 수 없는 프로세스가 있을 때가 있는데, 이 경우 도메인 서비스를 사용하면 좋다\u003C/p>\n\u003Cp>도메인 서비스의 규칙을 정의하기는 좀 애매한 감이 있지만, 주의해야 할 점이 있다.\u003C/p>\n\u003Cul>\u003Cli>작성되는 코드는 한 도메인 내에서 중요한 비즈니스 로직을 수행해야 한다.\u003C/li>\n\u003Cli>한 도메인 객체를 다른 도메인 객체로 변환한다.\u003C/li>\n\u003Cli>값을 계산하기 위해 두 개 이상의 도메인 객체의 속성을 사용한다.\u003C/li>\u003C/ul>\n\u003Cp>서비스는 DDD의 다른 모든 요소들과 마찬가지로 제한된 컨텍스트 안에서 유비쿼터스 언어를 통해 표현되어야 한다.\u003C/p>\n\u003Cp>서비스가 유용하게 쓰일 수 있는 예제를 살펴보자. 엔티티 내에 이런 코드가 있다고 가정해보자.\u003C/p>\n\u003Cdetails>\u003Csummary>예제 코드\u003C/summary>\n\u003Cpre class=\"language-go\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-go\">\n\u003Cspan class=\"token string\">&#96;&#96;\u003C/span>&#96;\u003Cspan class=\"token keyword\">go\u003C/span>\n\u003Cspan class=\"token keyword\">package\u003C/span> chapter4\n\n\u003Cspan class=\"token keyword\">import\u003C/span> \u003Cspan class=\"token string\">\"github.com/google/uuid\"\u003C/span>\n\n\u003Cspan class=\"token keyword\">type\u003C/span> Product \u003Cspan class=\"token keyword\">struct\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\tId             uuid\u003Cspan class=\"token punctuation\">.\u003C/span>UUID\n\tInStock        \u003Cspan class=\"token builtin\">bool\u003C/span>\n\tInSomeonesCart \u003Cspan class=\"token builtin\">bool\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>p Product\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token function\">CanBeBought\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token builtin\">bool\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\u003Cspan class=\"token keyword\">return\u003C/span> p\u003Cspan class=\"token punctuation\">.\u003C/span>InStock \u003Cspan class=\"token operator\">&amp;&amp;\u003C/span> \u003Cspan class=\"token operator\">!\u003C/span>p\u003Cspan class=\"token punctuation\">.\u003C/span>InSomeonesCart\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">type\u003C/span> ShoppingCart \u003Cspan class=\"token keyword\">struct\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\tId          uuid\u003Cspan class=\"token punctuation\">.\u003C/span>UUID\n\tProducts    \u003Cspan class=\"token punctuation\">[\u003C/span>\u003Cspan class=\"token punctuation\">]\u003C/span>Product\n\tIsFull      \u003Cspan class=\"token builtin\">bool\u003C/span>\n\tMaxCartSize \u003Cspan class=\"token builtin\">int\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>s \u003Cspan class=\"token operator\">*\u003C/span>ShoppingCart\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token function\">AddToCard\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>p Product\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token builtin\">bool\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\u003Cspan class=\"token keyword\">if\u003C/span> s\u003Cspan class=\"token punctuation\">.\u003C/span>IsFull \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token boolean\">false\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\t\u003Cspan class=\"token keyword\">if\u003C/span> p\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">CanBeBought\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\ts\u003Cspan class=\"token punctuation\">.\u003C/span>Products \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token function\">append\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>s\u003Cspan class=\"token punctuation\">.\u003C/span>Products\u003Cspan class=\"token punctuation\">,\u003C/span> p\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token boolean\">true\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\t\u003Cspan class=\"token keyword\">if\u003C/span> s\u003Cspan class=\"token punctuation\">.\u003C/span>MaxCartSize \u003Cspan class=\"token operator\">==\u003C/span> \u003Cspan class=\"token function\">len\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>s\u003Cspan class=\"token punctuation\">.\u003C/span>Products\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\ts\u003Cspan class=\"token punctuation\">.\u003C/span>IsFull \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token boolean\">true\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\t\u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token boolean\">true\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\u003C/details>\n\u003Cp>괜찮아 보이는 코드지만 문제가 있다.\n\u003Ccode>ShoppingCart\u003C/code>의 구현에서 다른 엔티티를 참조하고 있고, 실제로 \u003Ccode>ShoppingCart\u003C/code>에 속하지 않는 비즈니스 로직이 포함되어 있다.\n이런 문제를 해결하기 위해 도메인 서비스를 사용할 수 있다.\u003C/p>\n\u003Cdetails>\u003Csummary>예제 코드\u003C/summary>\n\u003Cpre class=\"language-go\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-go\">\u003Cspan class=\"token keyword\">package\u003C/span> chapter4\n\n\u003Cspan class=\"token keyword\">import\u003C/span> \u003Cspan class=\"token string\">\"errors\"\u003C/span>\n\n\u003Cspan class=\"token keyword\">type\u003C/span> CheckOutService \u003Cspan class=\"token keyword\">struct\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\tshoppingCart \u003Cspan class=\"token operator\">*\u003C/span>ShoppingCart\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token function\">NewCheckOutService\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>shoppingCart \u003Cspan class=\"token operator\">*\u003C/span>ShoppingCart\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token operator\">*\u003C/span>CheckOutService \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token operator\">&amp;\u003C/span>CheckOutService\u003Cspan class=\"token punctuation\">&#123;\u003C/span>shoppingCart\u003Cspan class=\"token punctuation\">:\u003C/span> shoppingCart\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>c \u003Cspan class=\"token operator\">*\u003C/span>CheckOutService\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token function\">AddProductToCart\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>p \u003Cspan class=\"token operator\">*\u003C/span>Product\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token builtin\">error\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\u003Cspan class=\"token keyword\">if\u003C/span> c\u003Cspan class=\"token punctuation\">.\u003C/span>shoppingCart\u003Cspan class=\"token punctuation\">.\u003C/span>IsFull \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">return\u003C/span> errors\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">New\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"cannot add product to full cart\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\t\u003Cspan class=\"token keyword\">if\u003C/span> p\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">CanBeBought\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\tc\u003Cspan class=\"token punctuation\">.\u003C/span>shoppingCart\u003Cspan class=\"token punctuation\">.\u003C/span>Products \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token function\">append\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>c\u003Cspan class=\"token punctuation\">.\u003C/span>shoppingCart\u003Cspan class=\"token punctuation\">.\u003C/span>Products\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token operator\">*\u003C/span>p\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\t\u003Cspan class=\"token keyword\">if\u003C/span> c\u003Cspan class=\"token punctuation\">.\u003C/span>shoppingCart\u003Cspan class=\"token punctuation\">.\u003C/span>MaxCartSize \u003Cspan class=\"token operator\">==\u003C/span> \u003Cspan class=\"token function\">len\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>c\u003Cspan class=\"token punctuation\">.\u003C/span>shoppingCart\u003Cspan class=\"token punctuation\">.\u003C/span>Products\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\tc\u003Cspan class=\"token punctuation\">.\u003C/span>shoppingCart\u003Cspan class=\"token punctuation\">.\u003C/span>IsFull \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token boolean\">true\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\t\u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\n\u003Cp>두 엔티티에 모두 접근할 수 있는 도메인 로직이 도메인 서비스에 작성되었다.\n이를 통해, \u003Ccode>CheckOutService\u003C/code>에서 더 많은 엔티티를 참조하고자 할 때 더 유용해질 것이다.\n단일 도메인 서비스에 이러한 로직이 있기 때문에, 다른 클라이언트에서 우리의 동작을 구현하려는 경우 이 서비스를 사용할 수 있으며, 비즈니스 불변성이 유지된다.\u003C/p>\n\u003Cp>도메인 서비스는 stateless하게 도메인 로직을 구성해야 하는 경우에 유용하다.\n하지만 stateful한 로직을 구성해야 하는 경우에는 애플리케이션 서비스를 사용해야 한다.\u003C/p>\n\u003Cbr>\n\u003Ch3 id=\"애플리케이션-서비스\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#애플리케이션-서비스\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>애플리케이션 서비스\u003C/h3>\u003C/details>\n\u003Cp>애플리케이션 서비스는 다른 서비스 및 레포지토리를 구성하는 데 사용되며, 여러 모달 사이에서 트랜잭션을 관리한다.\n다만 도메인 로직은 애플리케이션 서비스가 아니라 도메인 서비스에 작성되어야 한다.\u003C/p>\n\u003Cp>어플리케이션 서비스는 보통 그렇게 길지 않다. 일반적으로 트랜잭션 등 조정을 위해 사용되며, 다른 로직은 어플리케이션 레이어 밑으로 내려가야 한다. 또한 보한 문제를 해결하기도 한다.\u003C/p>\n\u003Cp>예약 예제를 통해 애플리케이션 서비스를 살펴보자.\u003C/p>\n\u003Cdetails>\u003Csummary>예제 코드\u003C/summary>\n\u003Cpre class=\"language-go\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-go\">\u003Cspan class=\"token keyword\">package\u003C/span> chapter4\n\n\u003Cspan class=\"token keyword\">import\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\n\t\u003Cspan class=\"token string\">\"context\"\u003C/span>\n\t\u003Cspan class=\"token string\">\"errors\"\u003C/span>\n\t\u003Cspan class=\"token string\">\"fmt\"\u003C/span>\n\t\u003Cspan class=\"token string\">\"github.com/jhseoeo/Golang-DDD/chapter2\"\u003C/span>\n\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n\u003Cspan class=\"token keyword\">type\u003C/span> accountKey \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token builtin\">int\u003C/span>\n\n\u003Cspan class=\"token keyword\">const\u003C/span> accountCtxKey \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token function\">accountKey\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token number\">1\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n\u003Cspan class=\"token keyword\">type\u003C/span> BookingDomainService \u003Cspan class=\"token keyword\">interface\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\u003Cspan class=\"token function\">CreateBooking\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>ctx context\u003Cspan class=\"token punctuation\">.\u003C/span>Context\u003Cspan class=\"token punctuation\">,\u003C/span> booking Booking\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token builtin\">error\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">type\u003C/span> BookingAppService \u003Cspan class=\"token keyword\">struct\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\tbookingRepo          BookingRepository\n\tbookingDomainService BookingDomainService\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token function\">NewBookingAppService\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>bookingRepo BookingRepository\u003Cspan class=\"token punctuation\">,\u003C/span> bookingDomainService BookingDomainService\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token operator\">*\u003C/span>BookingAppService \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token operator\">&amp;\u003C/span>BookingAppService\u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\tbookingRepo\u003Cspan class=\"token punctuation\">:\u003C/span>          bookingRepo\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\tbookingDomainService\u003Cspan class=\"token punctuation\">:\u003C/span> bookingDomainService\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>b \u003Cspan class=\"token operator\">*\u003C/span>BookingAppService\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token function\">CreateBooking\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>ctx context\u003Cspan class=\"token punctuation\">.\u003C/span>Context\u003Cspan class=\"token punctuation\">,\u003C/span> booking Booking\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token builtin\">error\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\tu\u003Cspan class=\"token punctuation\">,\u003C/span> ok \u003Cspan class=\"token operator\">:=\u003C/span> ctx\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Value\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>accountCtxKey\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token operator\">*\u003C/span>chapter2\u003Cspan class=\"token punctuation\">.\u003C/span>Customer\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token keyword\">if\u003C/span> \u003Cspan class=\"token operator\">!\u003C/span>ok \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">return\u003C/span> errors\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">New\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"invalid customer\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\t\u003Cspan class=\"token keyword\">if\u003C/span> u\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">UserID\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token operator\">!=\u003C/span> booking\u003Cspan class=\"token punctuation\">.\u003C/span>userId\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">String\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">return\u003C/span> errors\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">New\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"cannot create booking for other users\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\terr \u003Cspan class=\"token operator\">:=\u003C/span> b\u003Cspan class=\"token punctuation\">.\u003C/span>bookingDomainService\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">CreateBooking\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>ctx\u003Cspan class=\"token punctuation\">,\u003C/span> booking\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token keyword\">if\u003C/span> err \u003Cspan class=\"token operator\">!=\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">return\u003C/span> fmt\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Errorf\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"could not create booking: %w\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> err\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\terr \u003Cspan class=\"token operator\">=\u003C/span> b\u003Cspan class=\"token punctuation\">.\u003C/span>bookingRepo\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">SaveBooking\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>ctx\u003Cspan class=\"token punctuation\">,\u003C/span> booking\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token keyword\">if\u003C/span> err \u003Cspan class=\"token operator\">!=\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">return\u003C/span> fmt\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Errorf\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"could not save bookign: %w\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> err\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\t\u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\u003C/details>\n\u003Cp>위 코드에서는 기본적인 인증을 수행하고, 도메인 레이어와 레포지토리 레이어로 애플리케이션 서비스를 구성한다.\n이런 예제의 경우에서라면 애플리케이션 서비스가 여러 도메인에 걸쳐 있지 않기 때문에 영속성을 도메인 서비스에서 건드리는 것도 괜찮다.\n이 코드가 실행되면 새로운 예약이 생성되고 저장된다.\u003C/p>\n\u003Cp>UI는 여러 도메인 서비스를 통해 구성될 필요가 있는데, 이런 측면에서 애플리케이션 서비스가 잘 어울린다.\u003C/p>\n\u003Cbr>\n\u003Cp>대부분의 최신 웹 앱은 결제, 이메인 전송, 유저 행동 추적 등의 역할을 수행한다.\n이러한 기능들은 도메인에 포함되지는 않지만 여전히 애플리케이션에 포함되어야 한다.\n이러한 경우 인프라스트럭처 레이어를 사용하여, 애플리케이션 서비스나 도메인 서비스에 추가할 수 있다.\u003C/p>\n\u003Cp>가령 이메일 인프라스트럭처 서비스는 다음과 같이 구현될 수 있다.\u003C/p>\n\u003Cdetails>\u003Csummary>예제 코드\u003C/summary>\n\u003Cpre class=\"language-go\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-go\">\u003Cspan class=\"token keyword\">package\u003C/span> chapter4\n\n\u003Cspan class=\"token keyword\">import\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>\n\t\u003Cspan class=\"token string\">\"bytes\"\u003C/span>\n\t\u003Cspan class=\"token string\">\"context\"\u003C/span>\n\t\u003Cspan class=\"token string\">\"encoding/json\"\u003C/span>\n\t\u003Cspan class=\"token string\">\"fmt\"\u003C/span>\n\t\u003Cspan class=\"token string\">\"net/http\"\u003C/span>\n\u003Cspan class=\"token punctuation\">)\u003C/span>\n\n\u003Cspan class=\"token keyword\">type\u003C/span> EmailSender \u003Cspan class=\"token keyword\">interface\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\u003Cspan class=\"token function\">SendEmail\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>ctx context\u003Cspan class=\"token punctuation\">.\u003C/span>Context\u003Cspan class=\"token punctuation\">,\u003C/span> to \u003Cspan class=\"token builtin\">string\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> title \u003Cspan class=\"token builtin\">string\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> body \u003Cspan class=\"token builtin\">string\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token builtin\">error\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">const\u003C/span> emailUrl \u003Cspan class=\"token operator\">=\u003C/span> \u003Cspan class=\"token string\">\"https://maindrillapp.com/api/1.0/messages/send\"\"\u003C/span>\n\n\u003Cspan class=\"token keyword\">type\u003C/span> MailChimp \u003Cspan class=\"token keyword\">struct\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\tapiKey     \u003Cspan class=\"token builtin\">string\u003C/span>\n\tfrom       \u003Cspan class=\"token builtin\">string\u003C/span>\n\thttpClient http\u003Cspan class=\"token punctuation\">.\u003C/span>Client\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">type\u003C/span> MailChimpReqBody \u003Cspan class=\"token keyword\">struct\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\tKey     \u003Cspan class=\"token builtin\">string\u003C/span> \u003Cspan class=\"token string\">&#96;json:\"key\"&#96;\u003C/span>\n\tMessage \u003Cspan class=\"token keyword\">struct\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\tFromEmail \u003Cspan class=\"token builtin\">string\u003C/span> \u003Cspan class=\"token string\">&#96;json:\"from_email\"&#96;\u003C/span>\n\t\tSubject   \u003Cspan class=\"token builtin\">string\u003C/span> \u003Cspan class=\"token string\">&#96;json:\"subject\"&#96;\u003C/span>\n\t\tText      \u003Cspan class=\"token builtin\">string\u003C/span> \u003Cspan class=\"token string\">&#96;json:\"text\"&#96;\u003C/span>\n\t\tTo        \u003Cspan class=\"token punctuation\">[\u003C/span>\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token keyword\">struct\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\tEmail \u003Cspan class=\"token builtin\">string\u003C/span> \u003Cspan class=\"token string\">&#96;json:\"email\"&#96;\u003C/span>\n\t\t\tType  \u003Cspan class=\"token builtin\">string\u003C/span> \u003Cspan class=\"token string\">&#96;json:\"type\"&#96;\u003C/span>\n\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span> \u003Cspan class=\"token string\">&#96;json:\"to\"&#96;\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span> \u003Cspan class=\"token string\">&#96;json:\"message\"&#96;\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token function\">NewMailChimp\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>apiKey \u003Cspan class=\"token builtin\">string\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> from \u003Cspan class=\"token builtin\">string\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> httpClient http\u003Cspan class=\"token punctuation\">.\u003C/span>Client\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token operator\">*\u003C/span>MailChimp \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token operator\">&amp;\u003C/span>MailChimp\u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\tapiKey\u003Cspan class=\"token punctuation\">:\u003C/span>     apiKey\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\tfrom\u003Cspan class=\"token punctuation\">:\u003C/span>       from\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\thttpClient\u003Cspan class=\"token punctuation\">:\u003C/span> httpClient\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>m MailChimp\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token function\">SendEmail\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>ctx context\u003Cspan class=\"token punctuation\">.\u003C/span>Context\u003Cspan class=\"token punctuation\">,\u003C/span> to \u003Cspan class=\"token builtin\">string\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> title \u003Cspan class=\"token builtin\">string\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> body \u003Cspan class=\"token builtin\">string\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token builtin\">error\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\tmailBody \u003Cspan class=\"token operator\">:=\u003C/span> MailChimpReqBody\u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\tKey\u003Cspan class=\"token punctuation\">:\u003C/span> m\u003Cspan class=\"token punctuation\">.\u003C/span>apiKey\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\tMessage\u003Cspan class=\"token punctuation\">:\u003C/span> \u003Cspan class=\"token keyword\">struct\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\tFromEmail \u003Cspan class=\"token builtin\">string\u003C/span> \u003Cspan class=\"token string\">&#96;json:\"from_email\"&#96;\u003C/span>\n\t\t\tSubject   \u003Cspan class=\"token builtin\">string\u003C/span> \u003Cspan class=\"token string\">&#96;json:\"subject\"&#96;\u003C/span>\n\t\t\tText      \u003Cspan class=\"token builtin\">string\u003C/span> \u003Cspan class=\"token string\">&#96;json:\"text\"&#96;\u003C/span>\n\t\t\tTo        \u003Cspan class=\"token punctuation\">[\u003C/span>\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token keyword\">struct\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\t\tEmail \u003Cspan class=\"token builtin\">string\u003C/span> \u003Cspan class=\"token string\">&#96;json:\"email\"&#96;\u003C/span>\n\t\t\t\tType  \u003Cspan class=\"token builtin\">string\u003C/span> \u003Cspan class=\"token string\">&#96;json:\"type\"&#96;\u003C/span>\n\t\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span> \u003Cspan class=\"token string\">&#96;json:\"to\"&#96;\u003C/span>\n\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\tFromEmail\u003Cspan class=\"token punctuation\">:\u003C/span> m\u003Cspan class=\"token punctuation\">.\u003C/span>from\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\t\tSubject\u003Cspan class=\"token punctuation\">:\u003C/span>   title\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\t\tText\u003Cspan class=\"token punctuation\">:\u003C/span>      body\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\t\tTo\u003Cspan class=\"token punctuation\">:\u003C/span> \u003Cspan class=\"token punctuation\">[\u003C/span>\u003Cspan class=\"token punctuation\">]\u003C/span>\u003Cspan class=\"token keyword\">struct\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\t\tEmail \u003Cspan class=\"token builtin\">string\u003C/span> \u003Cspan class=\"token string\">&#96;json:\"email\"&#96;\u003C/span>\n\t\t\t\tType  \u003Cspan class=\"token builtin\">string\u003C/span> \u003Cspan class=\"token string\">&#96;json:\"type\"&#96;\u003C/span>\n\t\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003Cspan class=\"token punctuation\">&#123;\u003C/span>\u003Cspan class=\"token punctuation\">&#123;\u003C/span>Email\u003Cspan class=\"token punctuation\">:\u003C/span> to\u003Cspan class=\"token punctuation\">,\u003C/span> Type\u003Cspan class=\"token punctuation\">:\u003C/span> \u003Cspan class=\"token string\">\"to\"\u003C/span>\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\tpayload\u003Cspan class=\"token punctuation\">,\u003C/span> err \u003Cspan class=\"token operator\">:=\u003C/span> json\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Marshal\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>mailBody\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token keyword\">if\u003C/span> err \u003Cspan class=\"token operator\">!=\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">return\u003C/span> fmt\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Errorf\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"failed to marshall body: %w\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> err\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\treq\u003Cspan class=\"token punctuation\">,\u003C/span> err \u003Cspan class=\"token operator\">:=\u003C/span> http\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">NewRequest\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>http\u003Cspan class=\"token punctuation\">.\u003C/span>MethodPost\u003Cspan class=\"token punctuation\">,\u003C/span> emailUrl\u003Cspan class=\"token punctuation\">,\u003C/span> bytes\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">NewReader\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>payload\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token keyword\">if\u003C/span> err \u003Cspan class=\"token operator\">!=\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">return\u003C/span> fmt\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Errorf\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"failed to create request: %w\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> err\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\t\u003Cspan class=\"token boolean\">_\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> err \u003Cspan class=\"token operator\">=\u003C/span> m\u003Cspan class=\"token punctuation\">.\u003C/span>httpClient\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Do\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>req\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token keyword\">if\u003C/span> err \u003Cspan class=\"token operator\">!=\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">return\u003C/span> fmt\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Errorf\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"failed to send email: %w\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> err\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\t\u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\u003C/details>\n\u003Cp>이와 같이 인프라스트럭처 레이어를 구성하면, 애플리케이션 서비스에서 다음과 같이 사용할 수 있다.\u003C/p>\n\u003Cdetails>\u003Csummary>예제 코드\u003C/summary>\n\u003Cpre class=\"language-go\">\u003C!-- HTML_TAG_START -->\u003Ccode class=\"language-go\">\u003Cspan class=\"token keyword\">type\u003C/span> BookingAppService \u003Cspan class=\"token keyword\">struct\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\tbookingRepo          BookingRepository\n\tbookingDomainService BookingDomainService\n\temailService         EmailSender\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\u003Cspan class=\"token operator\">...\u003C/span>\n\n\n\u003Cspan class=\"token keyword\">func\u003C/span> \u003Cspan class=\"token punctuation\">(\u003C/span>b \u003Cspan class=\"token operator\">*\u003C/span>BookingAppService\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token function\">CreateBooking\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>ctx context\u003Cspan class=\"token punctuation\">.\u003C/span>Context\u003Cspan class=\"token punctuation\">,\u003C/span> booking Booking\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token builtin\">error\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\tu\u003Cspan class=\"token punctuation\">,\u003C/span> ok \u003Cspan class=\"token operator\">:=\u003C/span> ctx\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Value\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>accountCtxKey\u003Cspan class=\"token punctuation\">)\u003C/span>\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token operator\">*\u003C/span>chapter2\u003Cspan class=\"token punctuation\">.\u003C/span>Customer\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token keyword\">if\u003C/span> \u003Cspan class=\"token operator\">!\u003C/span>ok \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">return\u003C/span> errors\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">New\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"invalid customer\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\t\u003Cspan class=\"token keyword\">if\u003C/span> u\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">UserID\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token operator\">!=\u003C/span> booking\u003Cspan class=\"token punctuation\">.\u003C/span>userId\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">String\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">return\u003C/span> errors\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">New\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"cannot create booking for other users\"\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\terr \u003Cspan class=\"token operator\">:=\u003C/span> b\u003Cspan class=\"token punctuation\">.\u003C/span>bookingDomainService\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">CreateBooking\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>ctx\u003Cspan class=\"token punctuation\">,\u003C/span> booking\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token keyword\">if\u003C/span> err \u003Cspan class=\"token operator\">!=\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">return\u003C/span> fmt\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Errorf\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"could not create booking: %w\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> err\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\terr \u003Cspan class=\"token operator\">=\u003C/span> b\u003Cspan class=\"token punctuation\">.\u003C/span>bookingRepo\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">SaveBooking\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>ctx\u003Cspan class=\"token punctuation\">,\u003C/span> booking\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token keyword\">if\u003C/span> err \u003Cspan class=\"token operator\">!=\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\u003Cspan class=\"token keyword\">return\u003C/span> fmt\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">Errorf\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>\u003Cspan class=\"token string\">\"could not save bookign: %w\"\u003C/span>\u003Cspan class=\"token punctuation\">,\u003C/span> err\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\terr \u003Cspan class=\"token operator\">=\u003C/span> b\u003Cspan class=\"token punctuation\">.\u003C/span>emailService\u003Cspan class=\"token punctuation\">.\u003C/span>\u003Cspan class=\"token function\">SendEmail\u003C/span>\u003Cspan class=\"token punctuation\">(\u003C/span>ctx\u003Cspan class=\"token punctuation\">,\u003C/span> \u003Cspan class=\"token operator\">...\u003C/span>\u003Cspan class=\"token punctuation\">)\u003C/span>\n\t\u003Cspan class=\"token keyword\">if\u003C/span> err \u003Cspan class=\"token operator\">!=\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span> \u003Cspan class=\"token punctuation\">&#123;\u003C/span>\n\t\t\u003Cspan class=\"token operator\">...\u003C/span>\n\t\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\n\n\t\u003Cspan class=\"token keyword\">return\u003C/span> \u003Cspan class=\"token boolean\">nil\u003C/span>\n\u003Cspan class=\"token punctuation\">&#125;\u003C/span>\u003C/code>\u003C!-- HTML_TAG_END -->\u003C/pre>\u003C/details>\n\u003Cp>이제 애플리케이션 서비스의 \u003Ccode>CreateBooking\u003C/code> 함수가 호출되면 예약을 생성하고, 데이터베이스에 저장하는 것 뿐만 아니라 이메일을 유저에게 보낼 것이다.\u003C/p>\n\u003Cbr>\u003Cbr>\n\u003Ch2 id=\"references\">\u003Ca aria-hidden=\"true\" tabindex=\"-1\" href=\"#references\">\u003Cspan class=\"icon icon-link\">\u003C/span>\u003C/a>References\u003C/h2>\n\u003Chr>\n\u003Ccenter>\u003Cp>\u003Ca href=\"https://learning.oreilly.com/library/view/domain-driven-design-with/9781804613450/\" rel=\"nofollow\">\u003Cimg src=\"https://learning.oreilly.com/covers/urn:orm:book:9781804613450/400w/\" alt=\"Domain-Driven Design with Golang Cover\">\u003C/a> \u003Cbr>\n\u003Ca href=\"https://learning.oreilly.com/library/view/domain-driven-design-with/9781804613450/\" rel=\"nofollow\">Matthew Boyle, Domain-Driven Design with Golang』, O’Reilly Media, Inc.\u003C/a>\u003C/p>\u003C/center>\n```",{"title":3,"date":4,"excerpt":5,"categories":6,"coverImage":11,"coverWidth":12,"coverHeight":13,"indexed":14,"exposed":14,"slug":15},"팩토리, 레포지토리, 서비스","2023-07-16T00:00:00.000Z","Factories, Repositories, and Services",[7,8,9,10],"Golang","Backend","Architecture","Domain Driven Design","/post_img/Backend/Architecture/DDD/cover.png",16,9,true,"Backend/Architecture/DDD4"],"uses":{"params":["post"]}}]}
