[{"title":"AWS Lambda 함수를 Golang으로 작성할 때 알아두면 좋은 것들","slug":"Cloud/AWS/Lambda with Golang","excerpt":"AWS Lambda Golang으로 함수를 만들어 보며 알게 된 것들","coverImage":"/post_img/Cloud/AWS/Lambda_with_Golang/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-10-23","categories":["AWS Lambda","Golang"],"indexed":true,"exposed":true},{"title":"동시성 문제 해결하기","slug":"Go/Concurrency in Go/CIGO10","excerpt":"동시성 문제가 해결하기 그렇게 어렵다던데","coverImage":"/post_img/Go/Concurrency in Go/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-10-03T00:00:00.000Z","categories":["Golang","Concurrency in Go"],"indexed":false,"exposed":true},{"title":"아토믹 메모리 오퍼레이션","slug":"Go/Concurrency in Go/CIGO9","excerpt":"아토믹 메모리 오퍼레이션에 대해 알아보자","coverImage":"/post_img/Go/Concurrency in Go/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-10-01T00:00:00.000Z","categories":["Golang","Concurrency in Go"],"indexed":false,"exposed":true},{"title":"동시성 프로그래밍과 요청 처리","slug":"Go/Concurrency in Go/CIGO8","excerpt":"동시성 프로그래밍과 서버 프로그래밍을 잘 버무려보자.","coverImage":"/post_img/Go/Concurrency in Go/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-09-16T00:00:00.000Z","categories":["Golang","Concurrency in Go"],"indexed":false,"exposed":true},{"title":"Timer와 Ticker","slug":"Go/Concurrency in Go/CIGO7","excerpt":"Go에서 일정 시간이 지난 이후 또는 주기적으로 특정 작업을 수행하려면 어떻게 해야 할지 알아보자.","coverImage":"/post_img/Go/Concurrency in Go/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-09-14T00:00:00.000Z","categories":["Golang","Concurrency in Go"],"indexed":false,"exposed":true},{"title":"동시성 프로그램의 에러 핸들링","slug":"Go/Concurrency in Go/CIGO6","excerpt":"동시성 프로그래밍에서 발생하는 에러 및 panic은 어떻게 핸들링해야 할지 알아보자","coverImage":"/post_img/Go/Concurrency in Go/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-09-11T00:00:00.000Z","categories":["Golang","Concurrency in Go"],"indexed":false,"exposed":true},{"title":"Worker Pool 및 Pipeline","slug":"Go/Concurrency in Go/CIGO5","excerpt":"동시성 프로그래밍에서 워커 풀과 파이프라인 패턴을 Go로 구현해보자","coverImage":"/post_img/Go/Concurrency in Go/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-09-09T00:00:00.000Z","categories":["Golang","Concurrency in Go"],"indexed":false,"exposed":true},{"title":"Spark 논문(RDD) 정리","slug":"Distributed Computing/Spark/RDD","excerpt":"Resilient Distributed Datasets: A Fault-Tolerant Abstraction for In-Memory Cluster Computing","coverImage":"/post_img/Distributed Computing/Spark/RDD/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-09-06T00:00:00.000Z","categories":["Apache Spark","논문정리"],"indexed":true,"exposed":true},{"title":"Go의 메모리 모델","slug":"Go/Concurrency in Go/CIGO3","excerpt":"Go의 메모리 모델","coverImage":"/post_img/Go/Concurrency in Go/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-08-31T00:00:00.000Z","categories":["Golang","Concurrency in Go"],"indexed":false,"exposed":true},{"title":"Go의 동시성 지원","slug":"Go/Concurrency in Go/CIGO2","excerpt":"Go에서 동시성을 지원하는 방법들","coverImage":"/post_img/Go/Concurrency in Go/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-08-25T00:00:00.000Z","categories":["Golang","Concurrency in Go"],"indexed":false,"exposed":true},{"title":"동시성 관련 개념 정리","slug":"Computer Science/OS/Concurrency","excerpt":"Concepts about concurrency","coverImage":"/post_img/Computer Science/OS/Concurrency/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-08-18T00:00:00.000Z","categories":["Computer Science","OS","Golang"],"indexed":true,"exposed":true},{"title":"DDD와 함께 TDD, BDD 사용하기","slug":"Backend/Architecture/DDD8","excerpt":"TDD, BDD, and DDD","coverImage":"/post_img/Backend/Architecture/DDD/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-08-11T00:00:00.000Z","categories":["Golang","Backend","Architecture","Domain Driven Design"],"indexed":false,"exposed":true},{"title":"WebSocket에 CORS를 적용하려면","slug":"Backend/WebSocket/Websocket CORS","excerpt":"???: 내 웹소켓은 부끄럼쟁이인가봐요","coverImage":"/post_img/Backend/Architecture/DDD/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-08-11T00:00:00.000Z","categories":["Golang","Fiber","Websocket","CORS"],"indexed":true,"exposed":true},{"title":"분산 시스템에 DDD 적용하기","slug":"Backend/Architecture/DDD7","excerpt":"Applying DDD to a Distributed System","coverImage":"/post_img/Backend/Architecture/DDD/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-08-06T00:00:00.000Z","categories":["Golang","Backend","Architecture","Domain Driven Design"],"indexed":false,"exposed":true},{"title":"마이크로서비스에 DDD 적용하기 (+ wire 사용해보기)","slug":"Backend/Architecture/DDD6","excerpt":"Applying DDD to a Microservice Application (+ Using wire)","coverImage":"/post_img/Backend/Architecture/DDD/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-07-27T00:00:00.000Z","categories":["Golang","Backend","Architecture","Domain Driven Design"],"indexed":false,"exposed":true},{"title":"모놀리식 애플리케이션에 DDD 적용하기","slug":"Backend/Architecture/DDD5","excerpt":"Applying DDD to a Monolithic Application","coverImage":"/post_img/Backend/Architecture/DDD/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-07-20T00:00:00.000Z","categories":["Golang","Backend","Architecture","Domain Driven Design"],"indexed":false,"exposed":true},{"title":"팩토리, 레포지토리, 서비스","slug":"Backend/Architecture/DDD4","excerpt":"Factories, Repositories, and Services","coverImage":"/post_img/Backend/Architecture/DDD/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-07-16T00:00:00.000Z","categories":["Golang","Backend","Architecture","Domain Driven Design"],"indexed":false,"exposed":true},{"title":"엔티티, 밸류 오브젝트, 애그리거트","slug":"Backend/Architecture/DDD3","excerpt":"Entities, Value Objects, and Aggregates","coverImage":"/post_img/Backend/Architecture/DDD/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-07-13T00:00:00.000Z","categories":["Golang","Backend","Architecture","Domain Driven Design"],"indexed":false,"exposed":true},{"title":"넘나 비싼 NAT Gateway 대신 NAT Instance를 사용해서 Lambda에서 인터넷에 액세스하기","slug":"Cloud/AWS/NAT Instance","excerpt":"가장 저렴하게 Lambda에서 인터넷에 액세스하는 방법","coverImage":"/post_img/Cloud/AWS/NAT_Instance/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-07-08","categories":["AWS","AWS Kinesis Video Stream","WebRTC"],"indexed":true,"exposed":true},{"title":"도메인, 유비쿼터스 언어, 제한된 컨텍스트 이해하기","slug":"Backend/Architecture/DDD2","excerpt":"Understanding Domains, Ubiquitous Language, and Bounded Contexts","coverImage":"/post_img/Backend/Architecture/DDD/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-07-07T00:00:00.000Z","categories":["Golang","Backend","Architecture","Domain Driven Design"],"indexed":false,"exposed":true},{"title":"Domain Driven Design의 역사","slug":"Backend/Architecture/DDD1","excerpt":"History of Domain Driven Design","coverImage":"/post_img/Backend/Architecture/DDD/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-07-04T00:00:00.000Z","categories":["Golang","Backend","Architecture","Domain Driven Design"],"indexed":false,"exposed":true},{"title":"RFC8836: Congestion Control Requirements for Interactive Real-Time Media 정리","slug":"Networking/WebRTC/RFC8835","excerpt":"RFC8836을 정리해보았습니다","coverImage":"/post_img/Networking/WebRTC/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-04-17T00:00:00.000Z","categories":["WebRTC","논문정리"],"indexed":true,"exposed":true},{"title":"RFC8828: WebRTC IP Address Handling Requirements 정리","slug":"Networking/WebRTC/RFC8828","excerpt":"RFC8828을 읽고 WebRTC의 IP주소 처리 정책을 정리해보았습니다","coverImage":"/post_img/Networking/WebRTC/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-03-15T00:00:00.000Z","categories":["WebRTC","논문정리"],"indexed":true,"exposed":true},{"title":"Generics in Go","slug":"Go/Golang Basics/GO15","excerpt":"'Learning Go'를 읽고, Go의 제네릭 프로그래밍에 대해 알아보았습니다","coverImage":"/post_img/Go/Golang_basics/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-03-01T00:00:00.000Z","categories":["Golang","Basic Golang"],"indexed":false,"exposed":true},{"title":"RDS로 Postgresql 인스턴스 설정 과정","slug":"Cloud/AWS/RDS","excerpt":"RDS로 Postgresql 인스턴스를 띄우며 정리한 내용들을 써보았습니다","coverImage":"/post_img/Cloud/AWS/RDS/cover.jpg","coverWidth":16,"coverHeight":9,"date":"2023-02-28","categories":["AWS","RDS","Database"],"indexed":true,"exposed":true},{"title":"Reflect, Unsafe, Cgo","slug":"Go/Golang Basics/GO14","excerpt":"'Learning Go'를 읽고, Go의 런타입 타입 확인을 위한 Reflect, 에 대해 정리해보았습니다","coverImage":"/post_img/Go/Golang_basics/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-02-21T00:00:00.000Z","categories":["Golang","Basic Golang"],"indexed":false,"exposed":true},{"title":"Golang으로 WebRTC Mesh Server 구현하기","slug":"Networking/WebRTC/many to many signaling server","excerpt":"Golang을 통해 M:N WebRTC 시그널링 서버를 만들어보았습니다","coverImage":"/post_img/Networking/WebRTC/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-02-18T00:00:00.000Z","categories":["WebRTC","Golang","Signaling Server"],"indexed":true,"exposed":true},{"title":"테스트 작성","slug":"Go/Golang Basics/GO13","excerpt":"Writing Tests","coverImage":"/post_img/Go/Golang_basics/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-02-06T00:00:00.000Z","categories":["Golang","Basic Golang"],"indexed":false,"exposed":true},{"title":"WebRTC에 관하여 정리해보았다","slug":"Networking/WebRTC/webrtc","excerpt":"교내 프로젝트, 교과목, 스터디를 하며 정리한 WebRTC 관련 내용을 기록해보았습니다","coverImage":"/post_img/Networking/WebRTC/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-01-22T00:00:00.000Z","categories":["WebRTC"],"indexed":true,"exposed":true},{"title":"Amazon KVS WebRTC signaling channels 사용기","slug":"Cloud/AWS/AWS Kinesis Video Streaming","excerpt":"Amazon KVS WebRTC signaling channel에 대해 알아보자","coverImage":"/post_img/Cloud/AWS/AWS_KVS_webrtc_signaling_channel/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-01-01","categories":["AWS","AWS Kinesis Video Stream","WebRTC"],"indexed":true,"exposed":true},{"title":"컨텍스트","slug":"Go/Golang Basics/GO12","excerpt":"The Context","coverImage":"/post_img/Go/Golang_basics/cover.png","coverWidth":16,"coverHeight":9,"date":"2022-09-09T00:00:00.000Z","categories":["Golang","Basic Golang"],"indexed":false,"exposed":true},{"title":"표준 라이브러리","slug":"Go/Golang Basics/GO11","excerpt":"The Standard Library","coverImage":"/post_img/Go/Golang_basics/cover.png","coverWidth":16,"coverHeight":9,"date":"2022-09-05T00:00:00.000Z","categories":["Golang","Basic Golang"],"indexed":false,"exposed":true},{"title":"Go의 동시성","slug":"Go/Golang Basics/GO10","excerpt":"Concurrency in Go","coverImage":"/post_img/Go/Golang_basics/cover.png","coverWidth":16,"coverHeight":9,"date":"2022-08-30T00:00:00.000Z","categories":["Golang","Basic Golang"],"indexed":false,"exposed":true},{"title":"모듈, 패키지, 임포트","slug":"Go/Golang Basics/GO9","excerpt":"Modules, Packages, Imports","coverImage":"/post_img/Go/Golang_basics/cover.png","coverWidth":16,"coverHeight":9,"date":"2022-08-24T00:00:00.000Z","categories":["Golang","Basic Golang"],"indexed":false,"exposed":true},{"title":"에러 처리","slug":"Go/Golang Basics/GO8","excerpt":"Errors","coverImage":"/post_img/Go/Golang_basics/cover.png","coverWidth":16,"coverHeight":9,"date":"2022-08-19T00:00:00.000Z","categories":["Golang","Basic Golang"],"indexed":false,"exposed":true},{"title":"타입, 메소드, 인터페이스","slug":"Go/Golang Basics/GO7","excerpt":"Types, Methods, Interfaces","coverImage":"/post_img/Go/Golang_basics/cover.png","coverWidth":16,"coverHeight":9,"date":"2022-08-11T00:00:00.000Z","categories":["Golang","Basic Golang"],"indexed":false,"exposed":true},{"title":"포인터","slug":"Go/Golang Basics/GO6","excerpt":"Pointer","coverImage":"/post_img/Go/Golang_basics/cover.png","coverWidth":16,"coverHeight":9,"date":"2022-08-07T00:00:00.000Z","categories":["Golang","Basic Golang"],"indexed":false,"exposed":true},{"title":"함수","slug":"Go/Golang Basics/GO5","excerpt":"Functions","coverImage":"/post_img/Go/Golang_basics/cover.png","coverWidth":16,"coverHeight":9,"date":"2022-07-31T00:00:00.000Z","categories":["Golang","Basic Golang"],"indexed":false,"exposed":true},{"title":"블록, Shadowing, 흐름 제어문","slug":"Go/Golang Basics/GO4","excerpt":"Blocks, Shadows, and Control Structures","coverImage":"/post_img/Go/Golang_basics/cover.png","coverWidth":16,"coverHeight":9,"date":"2022-07-27T00:00:00.000Z","categories":["Golang","Basic Golang"],"indexed":false,"exposed":true},{"title":"복합 타입","slug":"Go/Golang Basics/GO3","excerpt":"Composite Types","coverImage":"/post_img/Go/Golang_basics/cover.png","coverWidth":16,"coverHeight":9,"date":"2022-07-23T00:00:00.000Z","categories":["Golang","Basic Golang"],"indexed":false,"exposed":true},{"title":"변수와 원시 타입","slug":"Go/Golang Basics/GO2","excerpt":"Primitive Types and Variable Declaration","coverImage":"/post_img/Go/Golang_basics/cover.png","coverWidth":16,"coverHeight":9,"date":"2022-07-21T00:00:00.000Z","categories":["Golang","Basic Golang"],"indexed":false,"exposed":true},{"title":"개발환경설정","slug":"Go/Golang Basics/GO1","excerpt":"Setting up Golang development environment","coverImage":"/post_img/Go/Golang_basics/cover.png","coverWidth":16,"coverHeight":9,"date":"2022-07-19T00:00:00.000Z","categories":["Golang","Basic Golang"],"indexed":false,"exposed":true}]