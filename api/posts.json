[{"title":"동시성 문제 해결하기","slug":"Go/Concurrency in Go/CIGO10","excerpt":"동시성 문제가 해결하기 그렇게 어렵다던데","coverImage":"/post_img/Go/Concurrency in Go/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-10-03T00:00:00.000Z","categories":["Golang","Concurrency in Go"],"indexed":false,"exposed":true},{"title":"아토믹 메모리 오퍼레이션","slug":"Go/Concurrency in Go/CIGO9","excerpt":"아토믹 메모리 오퍼레이션에 대해 알아보자","coverImage":"/post_img/Go/Concurrency in Go/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-10-01T00:00:00.000Z","categories":["Golang","Concurrency in Go"],"indexed":false,"exposed":true},{"title":"동시성 프로그래밍과 요청 처리","slug":"Go/Concurrency in Go/CIGO8","excerpt":"동시성 프로그래밍과 서버 프로그래밍을 잘 버무려보자.","coverImage":"/post_img/Go/Concurrency in Go/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-09-16T00:00:00.000Z","categories":["Golang","Concurrency in Go"],"indexed":false,"exposed":true},{"title":"Timer와 Ticker","slug":"Go/Concurrency in Go/CIGO7","excerpt":"Go에서 일정 시간이 지난 이후 또는 주기적으로 특정 작업을 수행하려면 어떻게 해야 할지 알아보자.","coverImage":"/post_img/Go/Concurrency in Go/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-09-14T00:00:00.000Z","categories":["Golang","Concurrency in Go"],"indexed":false,"exposed":true},{"title":"동시성 프로그램의 에러 핸들링","slug":"Go/Concurrency in Go/CIGO6","excerpt":"동시성 프로그래밍에서 발생하는 에러 및 panic은 어떻게 핸들링해야 할지 알아보자","coverImage":"/post_img/Go/Concurrency in Go/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-09-11T00:00:00.000Z","categories":["Golang","Concurrency in Go"],"indexed":false,"exposed":true},{"title":"Worker Pool 및 Pipeline","slug":"Go/Concurrency in Go/CIGO5","excerpt":"동시성 프로그래밍에서 워커 풀과 파이프라인 패턴을 Go로 구현해보자","coverImage":"/post_img/Go/Concurrency in Go/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-09-09T00:00:00.000Z","categories":["Golang","Concurrency in Go"],"indexed":false,"exposed":true},{"title":"Spark 논문(RDD) 정리","slug":"Distributed Computing/Spark/RDD","excerpt":"Resilient Distributed Datasets: A Fault-Tolerant Abstraction for In-Memory Cluster Computing","coverImage":"/post_img/Distributed Computing/Spark/RDD/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-09-06T00:00:00.000Z","categories":["Apache Spark","논문정리"],"indexed":true,"exposed":true},{"title":"Go의 메모리 모델","slug":"Go/Concurrency in Go/CIGO3","excerpt":"Go의 메모리 모델","coverImage":"/post_img/Go/Concurrency in Go/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-08-31T00:00:00.000Z","categories":["Golang","Concurrency in Go"],"indexed":false,"exposed":true},{"title":"Go의 동시성 지원","slug":"Go/Concurrency in Go/CIGO2","excerpt":"Go에서 동시성을 지원하는 방법들","coverImage":"/post_img/Go/Concurrency in Go/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-08-25T00:00:00.000Z","categories":["Golang","Concurrency in Go"],"indexed":false,"exposed":true},{"title":"동시성 관련 개념 정리","slug":"Computer Science/OS/Concurrency","excerpt":"Concepts about concurrency","coverImage":"/post_img/Computer Science/OS/Concurrency/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-08-18T00:00:00.000Z","categories":["Computer Science","OS","Golang"],"indexed":true,"exposed":true},{"title":"DDD와 함께 TDD, BDD 사용하기","slug":"Backend/Architecture/DDD8","excerpt":"TDD, BDD, and DDD","coverImage":"/post_img/Backend/Architecture/DDD/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-08-11T00:00:00.000Z","categories":["Golang","Backend","Architecture","Domain Driven Design"],"indexed":false,"exposed":true},{"title":"분산 시스템에 DDD 적용하기","slug":"Backend/Architecture/DDD7","excerpt":"Applying DDD to a Distributed System","coverImage":"/post_img/Backend/Architecture/DDD/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-08-06T00:00:00.000Z","categories":["Golang","Backend","Architecture","Domain Driven Design"],"indexed":false,"exposed":true},{"title":"마이크로서비스에 DDD 적용하기 (+ wire 사용해보기)","slug":"Backend/Architecture/DDD6","excerpt":"Applying DDD to a Microservice Application (+ Using wire)","coverImage":"/post_img/Backend/Architecture/DDD/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-07-27T00:00:00.000Z","categories":["Golang","Backend","Architecture","Domain Driven Design"],"indexed":false,"exposed":true},{"title":"모놀리식 애플리케이션에 DDD 적용하기","slug":"Backend/Architecture/DDD5","excerpt":"Applying DDD to a Monolithic Application","coverImage":"/post_img/Backend/Architecture/DDD/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-07-20T00:00:00.000Z","categories":["Golang","Backend","Architecture","Domain Driven Design"],"indexed":false,"exposed":true},{"title":"팩토리, 레포지토리, 서비스","slug":"Backend/Architecture/DDD4","excerpt":"Factories, Repositories, and Services","coverImage":"/post_img/Backend/Architecture/DDD/cover.png","coverWidth":16,"coverHeight":9,"date":"2023-07-16T00:00:00.000Z","categories":["Golang","Backend","Architecture","Domain Driven Design"],"indexed":false,"exposed":true}]